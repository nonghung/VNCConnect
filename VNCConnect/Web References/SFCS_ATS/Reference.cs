//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace VNCConnect.SFCS_ATS {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ATSSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseResultOutput))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseResultInput))]
    public partial class ATS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback updateSN_byCSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateState_UOCOperationCompleted;
        
        private System.Threading.SendOrPostCallback check_SFCS_Stage_newOperationCompleted;
        
        private System.Threading.SendOrPostCallback chkCSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback check_state_repairOperationCompleted;
        
        private System.Threading.SendOrPostCallback check_state_scrapOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_DNEA_CSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_stage_testCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback chk_PCBAOperationCompleted;
        
        private System.Threading.SendOrPostCallback chk_ForAutoAtsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ATS_chkRepairStageOperationCompleted;
        
        private System.Threading.SendOrPostCallback chk_cpn_ruleOperationCompleted;
        
        private System.Threading.SendOrPostCallback chkUIM_2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getEquipPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback chkUIM_TELOperationCompleted;
        
        private System.Threading.SendOrPostCallback chkUIM_WithoutTELOperationCompleted;
        
        private System.Threading.SendOrPostCallback chk_cpn_rule_newOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGoldenSnDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCAbyMACOperationCompleted;
        
        private System.Threading.SendOrPostCallback chkIPbyPNOperationCompleted;
        
        private System.Threading.SendOrPostCallback chkRetestNGOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDailySamplingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllCsnByCsnOperationCompleted;
        
        private System.Threading.SendOrPostCallback check_SFCSvATSOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsStandardSampleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMOLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_EQUIPMENT_USEDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Check_EQUIPMENT_USEDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEquipUseStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEquipUseCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSN_ByCSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPNGNDSbyCSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getModelNamebyCSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFLEXFIELD_ByCSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSN_ForATSOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCreatedTime_byCsnOperationCompleted;
        
        private System.Threading.SendOrPostCallback ATS_chkRetestReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback ATS_chkRetestReturnForMRBOXKBMOperationCompleted;
        
        private System.Threading.SendOrPostCallback ATS_chkRetestReturnForNTGROperationCompleted;
        
        private System.Threading.SendOrPostCallback ATS_chkRetestReturnNGEquipOperationCompleted;
        
        private System.Threading.SendOrPostCallback check_Curr_StageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebServiceURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getErrCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLastTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_snruleValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkOPIDAndPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_LOCK_MSG_ForATSOperationCompleted;
        
        private System.Threading.SendOrPostCallback Return_T_count_By_DateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Return_S_count_By_DateOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_RFSPNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEMSStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_ExcepInfo_BYLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxSSNbyCartonIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLeadersMailByEmpOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPlmModelstatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlmECNInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPlmECRInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTPIListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmpFromPLMOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCFDVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_SPN_QA_LOCK_ATSOperationCompleted;
        
        private System.Threading.SendOrPostCallback getModelNamebyCSN_2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSnListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProdSSN_ByCSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback get15RowsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_EMS_FIXTURE_APPLY_INFOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_EMS_FIXTURE_APPLY_BUY_INFOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_EMS_ApplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_EMS_MATERIALOperationCompleted;
        
        private System.Threading.SendOrPostCallback UPDATE_PR_BY_APPLYOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_FIXTURE_APPLY_PATHOperationCompleted;
        
        private System.Threading.SendOrPostCallback insert_Offline_Test_CNOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_Offline_Test_CNOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_Gtin_By_PNOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUPCOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_45PN_By_CSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReTestControl_GetTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback hold_SN_By_ATSOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFLEXFIELD_BySSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkAccompanyStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback setAccompanyStatusLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSnRfIdByPalletIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback set_Equipment_QUERYOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseRLCMeasureOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_OpdatByCarIDForATSOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckRLCMeasureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_MATER_BUYOperationCompleted;
        
        private System.Threading.SendOrPostCallback INSERT_MATER_BUYOperationCompleted;
        
        private System.Threading.SendOrPostCallback UPDATE_MATER_BUYOperationCompleted;
        
        private System.Threading.SendOrPostCallback getipstageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCSN_by_ProdSSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMOLineByMACSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkOfflineStageOnceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMODownLoadTimeByCSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_Golden_SampleOperationCompleted;
        
        private System.Threading.SendOrPostCallback Check_Golden_SampleOperationCompleted;
        
        private System.Threading.SendOrPostCallback Check_Golden_Sample2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Golden_SampleOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveGolden_SampleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGolden_SampleOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyGolden_SampleOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyGolden_Sample_by_snOperationCompleted;
        
        private System.Threading.SendOrPostCallback Check_Golden_Sample_WarningOperationCompleted;
        
        private System.Threading.SendOrPostCallback Set_DeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback del_DeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOP_IDOperationCompleted;
        
        private System.Threading.SendOrPostCallback check_SFCS_StageOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_SsnLastReasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompareSnCsnOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPsnOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPsnOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWo_InfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_SN_TEST_BYHANDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGoldenProdssnOperationCompleted;
        
        private System.Threading.SendOrPostCallback ATS_Check_EquipOperationCompleted;
        
        private System.Threading.SendOrPostCallback ATS_Init_EquipOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReTestControl_QueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReTestControl_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReTestControl_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback mAdo_SqlProOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGolden_SPN_CTRLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGolden_SPN_CTRL2OperationCompleted;
        
        private System.Threading.SendOrPostCallback set_Golden_SPN_CTRLOperationCompleted;
        
        private System.Threading.SendOrPostCallback del_Golden_SPN_CTRLOperationCompleted;
        
        private System.Threading.SendOrPostCallback copy_Golden_SPN_CTRLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ASSP_V001OperationCompleted;
        
        private System.Threading.SendOrPostCallback ATS_Register_V001OperationCompleted;
        
        private System.Threading.SendOrPostCallback ASTP_Test_Initial_V001OperationCompleted;
        
        private System.Threading.SendOrPostCallback ATS_Query_CSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback ATS_Query_All_CSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPN_BySNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWO_BySNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNS_KeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_FloTVProvisionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback Query_FloTVProvisionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback Query_FloTVProvisionDataHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_FloTV_ASN_data_TEMPOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_FloTV_ASN_dataOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_SkyRocket_ASN_dataOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_SkyRocket_ASN_data_tempOperationCompleted;
        
        private System.Threading.SendOrPostCallback del_FloTV_SN_CSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_SFCS_APPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_SPN_STAGE_ChkTextFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_SPN_STAGEOperationCompleted;
        
        private System.Threading.SendOrPostCallback SET_SPN_STAGE_ChkTextFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_ECNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_TPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback Start_ProductionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_RandomKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertSPIfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectSPIfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSPIfileMbOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertQSNfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectQSNfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQSNfileSnOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQSNByAnyPhaseSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSN_TourCnt_By_IPOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonalizationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePersonalizationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonalizationInfo_by_seqOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePersonalizationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPersonalizationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCNTablOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPNTabl_byCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPNTablOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCodeValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSmtByPSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback chkMacByMacNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ATS_chkHoldOperationCompleted;
        
        private System.Threading.SendOrPostCallback ATS_chkRepairReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSPC_FLEXFIELDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ATS_chkNextStageOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveFwToSfcsBySnOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSfcsFaStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDcTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSpritCpnOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOldNewPSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWoSchedule_byIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback check_InputStageOperationCompleted;
        
        private System.Threading.SendOrPostCallback chkSpnStation_IpOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_SMTDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_ProdDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback chkMo_inputQtyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ASTP_Test_Initial_V002OperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_Golden_Sample1OperationCompleted;
        
        private System.Threading.SendOrPostCallback getIP_prodOperationCompleted;
        
        private System.Threading.SendOrPostCallback del_IP_prodOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_sidpsnOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_SMTData_1OperationCompleted;
        
        private System.Threading.SendOrPostCallback getSpcStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSpcMoCpkLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback check_InputMOOperationCompleted;
        
        private System.Threading.SendOrPostCallback chkrepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewPsnByMoOperationCompleted;
        
        private System.Threading.SendOrPostCallback chkSmtSnWithCustSnOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_SMTData_2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getSMTPN_byCsnOperationCompleted;
        
        private System.Threading.SendOrPostCallback chkUIMOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllCsnOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSMTOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMo_ForSMOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAntennaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRSSI_SMOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewPsnByMo_rwkOperationCompleted;
        
        private System.Threading.SendOrPostCallback ASTP_Test_Initial_V003OperationCompleted;
        
        private System.Threading.SendOrPostCallback getCSN_byCPNOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ATS() {
            this.Url = global::VNCConnect.Properties.Settings.Default.VNCConnect_SFCS_ATS_ATS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event updateSN_byCSNCompletedEventHandler updateSN_byCSNCompleted;
        
        /// <remarks/>
        public event UpdateState_UOCCompletedEventHandler UpdateState_UOCCompleted;
        
        /// <remarks/>
        public event check_SFCS_Stage_newCompletedEventHandler check_SFCS_Stage_newCompleted;
        
        /// <remarks/>
        public event chkCSNCompletedEventHandler chkCSNCompleted;
        
        /// <remarks/>
        public event check_state_repairCompletedEventHandler check_state_repairCompleted;
        
        /// <remarks/>
        public event check_state_scrapCompletedEventHandler check_state_scrapCompleted;
        
        /// <remarks/>
        public event get_DNEA_CSNCompletedEventHandler get_DNEA_CSNCompleted;
        
        /// <remarks/>
        public event get_stage_testCountCompletedEventHandler get_stage_testCountCompleted;
        
        /// <remarks/>
        public event chk_PCBACompletedEventHandler chk_PCBACompleted;
        
        /// <remarks/>
        public event chk_ForAutoAtsCompletedEventHandler chk_ForAutoAtsCompleted;
        
        /// <remarks/>
        public event ATS_chkRepairStageCompletedEventHandler ATS_chkRepairStageCompleted;
        
        /// <remarks/>
        public event chk_cpn_ruleCompletedEventHandler chk_cpn_ruleCompleted;
        
        /// <remarks/>
        public event chkUIM_2CompletedEventHandler chkUIM_2Completed;
        
        /// <remarks/>
        public event getEquipPassCompletedEventHandler getEquipPassCompleted;
        
        /// <remarks/>
        public event chkUIM_TELCompletedEventHandler chkUIM_TELCompleted;
        
        /// <remarks/>
        public event chkUIM_WithoutTELCompletedEventHandler chkUIM_WithoutTELCompleted;
        
        /// <remarks/>
        public event chk_cpn_rule_newCompletedEventHandler chk_cpn_rule_newCompleted;
        
        /// <remarks/>
        public event GetGoldenSnDataCompletedEventHandler GetGoldenSnDataCompleted;
        
        /// <remarks/>
        public event getCAbyMACCompletedEventHandler getCAbyMACCompleted;
        
        /// <remarks/>
        public event chkIPbyPNCompletedEventHandler chkIPbyPNCompleted;
        
        /// <remarks/>
        public event chkRetestNGCompletedEventHandler chkRetestNGCompleted;
        
        /// <remarks/>
        public event CheckDailySamplingCompletedEventHandler CheckDailySamplingCompleted;
        
        /// <remarks/>
        public event getAllCsnByCsnCompletedEventHandler getAllCsnByCsnCompleted;
        
        /// <remarks/>
        public event check_SFCSvATSCompletedEventHandler check_SFCSvATSCompleted;
        
        /// <remarks/>
        public event IsStandardSampleCompletedEventHandler IsStandardSampleCompleted;
        
        /// <remarks/>
        public event getMOLotCompletedEventHandler getMOLotCompleted;
        
        /// <remarks/>
        public event Insert_EQUIPMENT_USEDCompletedEventHandler Insert_EQUIPMENT_USEDCompleted;
        
        /// <remarks/>
        public event Check_EQUIPMENT_USEDCompletedEventHandler Check_EQUIPMENT_USEDCompleted;
        
        /// <remarks/>
        public event GetEquipUseStatusCompletedEventHandler GetEquipUseStatusCompleted;
        
        /// <remarks/>
        public event UpdateEquipUseCountCompletedEventHandler UpdateEquipUseCountCompleted;
        
        /// <remarks/>
        public event getSN_ByCSNCompletedEventHandler getSN_ByCSNCompleted;
        
        /// <remarks/>
        public event getPNGNDSbyCSNCompletedEventHandler getPNGNDSbyCSNCompleted;
        
        /// <remarks/>
        public event getModelNamebyCSNCompletedEventHandler getModelNamebyCSNCompleted;
        
        /// <remarks/>
        public event getFLEXFIELD_ByCSNCompletedEventHandler getFLEXFIELD_ByCSNCompleted;
        
        /// <remarks/>
        public event getSN_ForATSCompletedEventHandler getSN_ForATSCompleted;
        
        /// <remarks/>
        public event getCreatedTime_byCsnCompletedEventHandler getCreatedTime_byCsnCompleted;
        
        /// <remarks/>
        public event ATS_chkRetestReturnCompletedEventHandler ATS_chkRetestReturnCompleted;
        
        /// <remarks/>
        public event ATS_chkRetestReturnForMRBOXKBMCompletedEventHandler ATS_chkRetestReturnForMRBOXKBMCompleted;
        
        /// <remarks/>
        public event ATS_chkRetestReturnForNTGRCompletedEventHandler ATS_chkRetestReturnForNTGRCompleted;
        
        /// <remarks/>
        public event ATS_chkRetestReturnNGEquipCompletedEventHandler ATS_chkRetestReturnNGEquipCompleted;
        
        /// <remarks/>
        public event check_Curr_StageCompletedEventHandler check_Curr_StageCompleted;
        
        /// <remarks/>
        public event GetWebServiceURLCompletedEventHandler GetWebServiceURLCompleted;
        
        /// <remarks/>
        public event getErrCodeCompletedEventHandler getErrCodeCompleted;
        
        /// <remarks/>
        public event getLastTimeCompletedEventHandler getLastTimeCompleted;
        
        /// <remarks/>
        public event get_snruleValueCompletedEventHandler get_snruleValueCompleted;
        
        /// <remarks/>
        public event ChkOPIDAndPasswordCompletedEventHandler ChkOPIDAndPasswordCompleted;
        
        /// <remarks/>
        public event Save_LOCK_MSG_ForATSCompletedEventHandler Save_LOCK_MSG_ForATSCompleted;
        
        /// <remarks/>
        public event Return_T_count_By_DateCompletedEventHandler Return_T_count_By_DateCompleted;
        
        /// <remarks/>
        public event Return_S_count_By_DateCompletedEventHandler Return_S_count_By_DateCompleted;
        
        /// <remarks/>
        public event get_RFSPNCompletedEventHandler get_RFSPNCompleted;
        
        /// <remarks/>
        public event getEMSStatusCompletedEventHandler getEMSStatusCompleted;
        
        /// <remarks/>
        public event GET_ExcepInfo_BYLineCompletedEventHandler GET_ExcepInfo_BYLineCompleted;
        
        /// <remarks/>
        public event GetBoxSSNbyCartonIDCompletedEventHandler GetBoxSSNbyCartonIDCompleted;
        
        /// <remarks/>
        public event GetLeadersMailByEmpCompletedEventHandler GetLeadersMailByEmpCompleted;
        
        /// <remarks/>
        public event getPlmModelstatusCompletedEventHandler getPlmModelstatusCompleted;
        
        /// <remarks/>
        public event GetPlmECNInfoCompletedEventHandler GetPlmECNInfoCompleted;
        
        /// <remarks/>
        public event getPlmECRInfoCompletedEventHandler getPlmECRInfoCompleted;
        
        /// <remarks/>
        public event GetTPIListCompletedEventHandler GetTPIListCompleted;
        
        /// <remarks/>
        public event GetEmpFromPLMCompletedEventHandler GetEmpFromPLMCompleted;
        
        /// <remarks/>
        public event GetCFDVersionCompletedEventHandler GetCFDVersionCompleted;
        
        /// <remarks/>
        public event get_SPN_QA_LOCK_ATSCompletedEventHandler get_SPN_QA_LOCK_ATSCompleted;
        
        /// <remarks/>
        public event getModelNamebyCSN_2CompletedEventHandler getModelNamebyCSN_2Completed;
        
        /// <remarks/>
        public event CheckSnListCompletedEventHandler CheckSnListCompleted;
        
        /// <remarks/>
        public event getProdSSN_ByCSNCompletedEventHandler getProdSSN_ByCSNCompleted;
        
        /// <remarks/>
        public event get15RowsDataCompletedEventHandler get15RowsDataCompleted;
        
        /// <remarks/>
        public event InsertValueCompletedEventHandler InsertValueCompleted;
        
        /// <remarks/>
        public event GET_EMS_FIXTURE_APPLY_INFOCompletedEventHandler GET_EMS_FIXTURE_APPLY_INFOCompleted;
        
        /// <remarks/>
        public event GET_EMS_FIXTURE_APPLY_BUY_INFOCompletedEventHandler GET_EMS_FIXTURE_APPLY_BUY_INFOCompleted;
        
        /// <remarks/>
        public event GET_EMS_ApplyCompletedEventHandler GET_EMS_ApplyCompleted;
        
        /// <remarks/>
        public event GET_EMS_MATERIALCompletedEventHandler GET_EMS_MATERIALCompleted;
        
        /// <remarks/>
        public event UPDATE_PR_BY_APPLYCompletedEventHandler UPDATE_PR_BY_APPLYCompleted;
        
        /// <remarks/>
        public event GET_FIXTURE_APPLY_PATHCompletedEventHandler GET_FIXTURE_APPLY_PATHCompleted;
        
        /// <remarks/>
        public event insert_Offline_Test_CNCompletedEventHandler insert_Offline_Test_CNCompleted;
        
        /// <remarks/>
        public event get_Offline_Test_CNCompletedEventHandler get_Offline_Test_CNCompleted;
        
        /// <remarks/>
        public event get_Gtin_By_PNCompletedEventHandler get_Gtin_By_PNCompleted;
        
        /// <remarks/>
        public event CheckUPCCompletedEventHandler CheckUPCCompleted;
        
        /// <remarks/>
        public event get_45PN_By_CSNCompletedEventHandler get_45PN_By_CSNCompleted;
        
        /// <remarks/>
        public event ReTestControl_GetTimeCompletedEventHandler ReTestControl_GetTimeCompleted;
        
        /// <remarks/>
        public event hold_SN_By_ATSCompletedEventHandler hold_SN_By_ATSCompleted;
        
        /// <remarks/>
        public event getFLEXFIELD_BySSNCompletedEventHandler getFLEXFIELD_BySSNCompleted;
        
        /// <remarks/>
        public event checkAccompanyStatusCompletedEventHandler checkAccompanyStatusCompleted;
        
        /// <remarks/>
        public event setAccompanyStatusLogCompletedEventHandler setAccompanyStatusLogCompleted;
        
        /// <remarks/>
        public event GetSnRfIdByPalletIdCompletedEventHandler GetSnRfIdByPalletIdCompleted;
        
        /// <remarks/>
        public event set_Equipment_QUERYCompletedEventHandler set_Equipment_QUERYCompleted;
        
        /// <remarks/>
        public event ReleaseRLCMeasureCompletedEventHandler ReleaseRLCMeasureCompleted;
        
        /// <remarks/>
        public event get_OpdatByCarIDForATSCompletedEventHandler get_OpdatByCarIDForATSCompleted;
        
        /// <remarks/>
        public event CheckRLCMeasureCompletedEventHandler CheckRLCMeasureCompleted;
        
        /// <remarks/>
        public event GET_MATER_BUYCompletedEventHandler GET_MATER_BUYCompleted;
        
        /// <remarks/>
        public event INSERT_MATER_BUYCompletedEventHandler INSERT_MATER_BUYCompleted;
        
        /// <remarks/>
        public event UPDATE_MATER_BUYCompletedEventHandler UPDATE_MATER_BUYCompleted;
        
        /// <remarks/>
        public event getipstageCompletedEventHandler getipstageCompleted;
        
        /// <remarks/>
        public event getCSN_by_ProdSSNCompletedEventHandler getCSN_by_ProdSSNCompleted;
        
        /// <remarks/>
        public event getMOLineByMACSNCompletedEventHandler getMOLineByMACSNCompleted;
        
        /// <remarks/>
        public event checkOfflineStageOnceCompletedEventHandler checkOfflineStageOnceCompleted;
        
        /// <remarks/>
        public event getMODownLoadTimeByCSNCompletedEventHandler getMODownLoadTimeByCSNCompleted;
        
        /// <remarks/>
        public event Delete_Golden_SampleCompletedEventHandler Delete_Golden_SampleCompleted;
        
        /// <remarks/>
        public event Check_Golden_SampleCompletedEventHandler Check_Golden_SampleCompleted;
        
        /// <remarks/>
        public event Check_Golden_Sample2CompletedEventHandler Check_Golden_Sample2Completed;
        
        /// <remarks/>
        public event Get_Golden_SampleCompletedEventHandler Get_Golden_SampleCompleted;
        
        /// <remarks/>
        public event SaveGolden_SampleCompletedEventHandler SaveGolden_SampleCompleted;
        
        /// <remarks/>
        public event UpdateGolden_SampleCompletedEventHandler UpdateGolden_SampleCompleted;
        
        /// <remarks/>
        public event CopyGolden_SampleCompletedEventHandler CopyGolden_SampleCompleted;
        
        /// <remarks/>
        public event CopyGolden_Sample_by_snCompletedEventHandler CopyGolden_Sample_by_snCompleted;
        
        /// <remarks/>
        public event Check_Golden_Sample_WarningCompletedEventHandler Check_Golden_Sample_WarningCompleted;
        
        /// <remarks/>
        public event Set_DeviceCompletedEventHandler Set_DeviceCompleted;
        
        /// <remarks/>
        public event del_DeviceCompletedEventHandler del_DeviceCompleted;
        
        /// <remarks/>
        public event getOP_IDCompletedEventHandler getOP_IDCompleted;
        
        /// <remarks/>
        public event check_SFCS_StageCompletedEventHandler check_SFCS_StageCompleted;
        
        /// <remarks/>
        public event Get_SsnLastReasonCompletedEventHandler Get_SsnLastReasonCompleted;
        
        /// <remarks/>
        public event CompareSnCsnCompletedEventHandler CompareSnCsnCompleted;
        
        /// <remarks/>
        public event GetPsnCompletedEventHandler GetPsnCompleted;
        
        /// <remarks/>
        public event CancelPsnCompletedEventHandler CancelPsnCompleted;
        
        /// <remarks/>
        public event GetWo_InfoCompletedEventHandler GetWo_InfoCompleted;
        
        /// <remarks/>
        public event Save_SN_TEST_BYHANDCompletedEventHandler Save_SN_TEST_BYHANDCompleted;
        
        /// <remarks/>
        public event getGoldenProdssnCompletedEventHandler getGoldenProdssnCompleted;
        
        /// <remarks/>
        public event ATS_Check_EquipCompletedEventHandler ATS_Check_EquipCompleted;
        
        /// <remarks/>
        public event ATS_Init_EquipCompletedEventHandler ATS_Init_EquipCompleted;
        
        /// <remarks/>
        public event ReTestControl_QueryCompletedEventHandler ReTestControl_QueryCompleted;
        
        /// <remarks/>
        public event ReTestControl_InsertCompletedEventHandler ReTestControl_InsertCompleted;
        
        /// <remarks/>
        public event ReTestControl_DeleteCompletedEventHandler ReTestControl_DeleteCompleted;
        
        /// <remarks/>
        public event mAdo_SqlProCompletedEventHandler mAdo_SqlProCompleted;
        
        /// <remarks/>
        public event getGolden_SPN_CTRLCompletedEventHandler getGolden_SPN_CTRLCompleted;
        
        /// <remarks/>
        public event getGolden_SPN_CTRL2CompletedEventHandler getGolden_SPN_CTRL2Completed;
        
        /// <remarks/>
        public event set_Golden_SPN_CTRLCompletedEventHandler set_Golden_SPN_CTRLCompleted;
        
        /// <remarks/>
        public event del_Golden_SPN_CTRLCompletedEventHandler del_Golden_SPN_CTRLCompleted;
        
        /// <remarks/>
        public event copy_Golden_SPN_CTRLCompletedEventHandler copy_Golden_SPN_CTRLCompleted;
        
        /// <remarks/>
        public event ASSP_V001CompletedEventHandler ASSP_V001Completed;
        
        /// <remarks/>
        public event ATS_Register_V001CompletedEventHandler ATS_Register_V001Completed;
        
        /// <remarks/>
        public event ASTP_Test_Initial_V001CompletedEventHandler ASTP_Test_Initial_V001Completed;
        
        /// <remarks/>
        public event ATS_Query_CSNCompletedEventHandler ATS_Query_CSNCompleted;
        
        /// <remarks/>
        public event ATS_Query_All_CSNCompletedEventHandler ATS_Query_All_CSNCompleted;
        
        /// <remarks/>
        public event GetPN_BySNCompletedEventHandler GetPN_BySNCompleted;
        
        /// <remarks/>
        public event GetWO_BySNCompletedEventHandler GetWO_BySNCompleted;
        
        /// <remarks/>
        public event GetNS_KeyCompletedEventHandler GetNS_KeyCompleted;
        
        /// <remarks/>
        public event Save_FloTVProvisionDataCompletedEventHandler Save_FloTVProvisionDataCompleted;
        
        /// <remarks/>
        public event Query_FloTVProvisionDataCompletedEventHandler Query_FloTVProvisionDataCompleted;
        
        /// <remarks/>
        public event Query_FloTVProvisionDataHistoryCompletedEventHandler Query_FloTVProvisionDataHistoryCompleted;
        
        /// <remarks/>
        public event get_FloTV_ASN_data_TEMPCompletedEventHandler get_FloTV_ASN_data_TEMPCompleted;
        
        /// <remarks/>
        public event get_FloTV_ASN_dataCompletedEventHandler get_FloTV_ASN_dataCompleted;
        
        /// <remarks/>
        public event get_SkyRocket_ASN_dataCompletedEventHandler get_SkyRocket_ASN_dataCompleted;
        
        /// <remarks/>
        public event get_SkyRocket_ASN_data_tempCompletedEventHandler get_SkyRocket_ASN_data_tempCompleted;
        
        /// <remarks/>
        public event del_FloTV_SN_CSNCompletedEventHandler del_FloTV_SN_CSNCompleted;
        
        /// <remarks/>
        public event GET_SFCS_APPCompletedEventHandler GET_SFCS_APPCompleted;
        
        /// <remarks/>
        public event GET_SPN_STAGE_ChkTextFileCompletedEventHandler GET_SPN_STAGE_ChkTextFileCompleted;
        
        /// <remarks/>
        public event GET_SPN_STAGECompletedEventHandler GET_SPN_STAGECompleted;
        
        /// <remarks/>
        public event SET_SPN_STAGE_ChkTextFileCompletedEventHandler SET_SPN_STAGE_ChkTextFileCompleted;
        
        /// <remarks/>
        public event Get_ECNCompletedEventHandler Get_ECNCompleted;
        
        /// <remarks/>
        public event Get_TPICompletedEventHandler Get_TPICompleted;
        
        /// <remarks/>
        public event Start_ProductionCompletedEventHandler Start_ProductionCompleted;
        
        /// <remarks/>
        public event Get_RandomKeyCompletedEventHandler Get_RandomKeyCompleted;
        
        /// <remarks/>
        public event insertSPIfileCompletedEventHandler insertSPIfileCompleted;
        
        /// <remarks/>
        public event selectSPIfileCompletedEventHandler selectSPIfileCompleted;
        
        /// <remarks/>
        public event getSPIfileMbCompletedEventHandler getSPIfileMbCompleted;
        
        /// <remarks/>
        public event insertQSNfileCompletedEventHandler insertQSNfileCompleted;
        
        /// <remarks/>
        public event selectQSNfileCompletedEventHandler selectQSNfileCompleted;
        
        /// <remarks/>
        public event getQSNfileSnCompletedEventHandler getQSNfileSnCompleted;
        
        /// <remarks/>
        public event getQSNByAnyPhaseSNCompletedEventHandler getQSNByAnyPhaseSNCompleted;
        
        /// <remarks/>
        public event getSN_TourCnt_By_IPCompletedEventHandler getSN_TourCnt_By_IPCompleted;
        
        /// <remarks/>
        public event getPersonalizationInfoCompletedEventHandler getPersonalizationInfoCompleted;
        
        /// <remarks/>
        public event deletePersonalizationInfoCompletedEventHandler deletePersonalizationInfoCompleted;
        
        /// <remarks/>
        public event getPersonalizationInfo_by_seqCompletedEventHandler getPersonalizationInfo_by_seqCompleted;
        
        /// <remarks/>
        public event updatePersonalizationInfoCompletedEventHandler updatePersonalizationInfoCompleted;
        
        /// <remarks/>
        public event BatchUpdateCompletedEventHandler BatchUpdateCompleted;
        
        /// <remarks/>
        public event setPersonalizationInfoCompletedEventHandler setPersonalizationInfoCompleted;
        
        /// <remarks/>
        public event getCNTablCompletedEventHandler getCNTablCompleted;
        
        /// <remarks/>
        public event getPNTabl_byCNCompletedEventHandler getPNTabl_byCNCompleted;
        
        /// <remarks/>
        public event getPNTablCompletedEventHandler getPNTablCompleted;
        
        /// <remarks/>
        public event getCodeValueCompletedEventHandler getCodeValueCompleted;
        
        /// <remarks/>
        public event getSmtByPSNCompletedEventHandler getSmtByPSNCompleted;
        
        /// <remarks/>
        public event chkMacByMacNameCompletedEventHandler chkMacByMacNameCompleted;
        
        /// <remarks/>
        public event ATS_chkHoldCompletedEventHandler ATS_chkHoldCompleted;
        
        /// <remarks/>
        public event ATS_chkRepairReturnCompletedEventHandler ATS_chkRepairReturnCompleted;
        
        /// <remarks/>
        public event getSPC_FLEXFIELDCompletedEventHandler getSPC_FLEXFIELDCompleted;
        
        /// <remarks/>
        public event ATS_chkNextStageCompletedEventHandler ATS_chkNextStageCompleted;
        
        /// <remarks/>
        public event saveFwToSfcsBySnCompletedEventHandler saveFwToSfcsBySnCompleted;
        
        /// <remarks/>
        public event CheckSfcsFaStatusCompletedEventHandler CheckSfcsFaStatusCompleted;
        
        /// <remarks/>
        public event CheckDcTestCompletedEventHandler CheckDcTestCompleted;
        
        /// <remarks/>
        public event getSpritCpnCompletedEventHandler getSpritCpnCompleted;
        
        /// <remarks/>
        public event CheckOldNewPSNCompletedEventHandler CheckOldNewPSNCompleted;
        
        /// <remarks/>
        public event getWoSchedule_byIPCompletedEventHandler getWoSchedule_byIPCompleted;
        
        /// <remarks/>
        public event check_InputStageCompletedEventHandler check_InputStageCompleted;
        
        /// <remarks/>
        public event chkSpnStation_IpCompletedEventHandler chkSpnStation_IpCompleted;
        
        /// <remarks/>
        public event get_SMTDataCompletedEventHandler get_SMTDataCompleted;
        
        /// <remarks/>
        public event get_ProdDataCompletedEventHandler get_ProdDataCompleted;
        
        /// <remarks/>
        public event chkMo_inputQtyCompletedEventHandler chkMo_inputQtyCompleted;
        
        /// <remarks/>
        public event ASTP_Test_Initial_V002CompletedEventHandler ASTP_Test_Initial_V002Completed;
        
        /// <remarks/>
        public event Delete_Golden_Sample1CompletedEventHandler Delete_Golden_Sample1Completed;
        
        /// <remarks/>
        public event getIP_prodCompletedEventHandler getIP_prodCompleted;
        
        /// <remarks/>
        public event del_IP_prodCompletedEventHandler del_IP_prodCompleted;
        
        /// <remarks/>
        public event get_sidpsnCompletedEventHandler get_sidpsnCompleted;
        
        /// <remarks/>
        public event get_SMTData_1CompletedEventHandler get_SMTData_1Completed;
        
        /// <remarks/>
        public event getSpcStatisticsCompletedEventHandler getSpcStatisticsCompleted;
        
        /// <remarks/>
        public event setSpcMoCpkLogCompletedEventHandler setSpcMoCpkLogCompleted;
        
        /// <remarks/>
        public event check_InputMOCompletedEventHandler check_InputMOCompleted;
        
        /// <remarks/>
        public event chkrepairCompletedEventHandler chkrepairCompleted;
        
        /// <remarks/>
        public event getNewPsnByMoCompletedEventHandler getNewPsnByMoCompleted;
        
        /// <remarks/>
        public event chkSmtSnWithCustSnCompletedEventHandler chkSmtSnWithCustSnCompleted;
        
        /// <remarks/>
        public event get_SMTData_2CompletedEventHandler get_SMTData_2Completed;
        
        /// <remarks/>
        public event getSMTPN_byCsnCompletedEventHandler getSMTPN_byCsnCompleted;
        
        /// <remarks/>
        public event chkUIMCompletedEventHandler chkUIMCompleted;
        
        /// <remarks/>
        public event getAllCsnCompletedEventHandler getAllCsnCompleted;
        
        /// <remarks/>
        public event getSMTCompletedEventHandler getSMTCompleted;
        
        /// <remarks/>
        public event getMo_ForSMCompletedEventHandler getMo_ForSMCompleted;
        
        /// <remarks/>
        public event getAntennaCompletedEventHandler getAntennaCompleted;
        
        /// <remarks/>
        public event getRSSI_SMCompletedEventHandler getRSSI_SMCompleted;
        
        /// <remarks/>
        public event getNewPsnByMo_rwkCompletedEventHandler getNewPsnByMo_rwkCompleted;
        
        /// <remarks/>
        public event ASTP_Test_Initial_V003CompletedEventHandler ASTP_Test_Initial_V003Completed;
        
        /// <remarks/>
        public event getCSN_byCPNCompletedEventHandler getCSN_byCPNCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateSN_byCSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateSN_byCSN(string sn, string test_result, string c_sn, string cpn, ref string errmsg) {
            object[] results = this.Invoke("updateSN_byCSN", new object[] {
                        sn,
                        test_result,
                        c_sn,
                        cpn,
                        errmsg});
            errmsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateSN_byCSNAsync(string sn, string test_result, string c_sn, string cpn, string errmsg) {
            this.updateSN_byCSNAsync(sn, test_result, c_sn, cpn, errmsg, null);
        }
        
        /// <remarks/>
        public void updateSN_byCSNAsync(string sn, string test_result, string c_sn, string cpn, string errmsg, object userState) {
            if ((this.updateSN_byCSNOperationCompleted == null)) {
                this.updateSN_byCSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSN_byCSNOperationCompleted);
            }
            this.InvokeAsync("updateSN_byCSN", new object[] {
                        sn,
                        test_result,
                        c_sn,
                        cpn,
                        errmsg}, this.updateSN_byCSNOperationCompleted, userState);
        }
        
        private void OnupdateSN_byCSNOperationCompleted(object arg) {
            if ((this.updateSN_byCSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSN_byCSNCompleted(this, new updateSN_byCSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateState_UOC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateState_UOC(string cpn, int scnd, ref string errMsg) {
            object[] results = this.Invoke("UpdateState_UOC", new object[] {
                        cpn,
                        scnd,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateState_UOCAsync(string cpn, int scnd, string errMsg) {
            this.UpdateState_UOCAsync(cpn, scnd, errMsg, null);
        }
        
        /// <remarks/>
        public void UpdateState_UOCAsync(string cpn, int scnd, string errMsg, object userState) {
            if ((this.UpdateState_UOCOperationCompleted == null)) {
                this.UpdateState_UOCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateState_UOCOperationCompleted);
            }
            this.InvokeAsync("UpdateState_UOC", new object[] {
                        cpn,
                        scnd,
                        errMsg}, this.UpdateState_UOCOperationCompleted, userState);
        }
        
        private void OnUpdateState_UOCOperationCompleted(object arg) {
            if ((this.UpdateState_UOCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateState_UOCCompleted(this, new UpdateState_UOCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/check_SFCS_Stage_new", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool check_SFCS_Stage_new(string PSN, string IP, ref string errMsg) {
            object[] results = this.Invoke("check_SFCS_Stage_new", new object[] {
                        PSN,
                        IP,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void check_SFCS_Stage_newAsync(string PSN, string IP, string errMsg) {
            this.check_SFCS_Stage_newAsync(PSN, IP, errMsg, null);
        }
        
        /// <remarks/>
        public void check_SFCS_Stage_newAsync(string PSN, string IP, string errMsg, object userState) {
            if ((this.check_SFCS_Stage_newOperationCompleted == null)) {
                this.check_SFCS_Stage_newOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncheck_SFCS_Stage_newOperationCompleted);
            }
            this.InvokeAsync("check_SFCS_Stage_new", new object[] {
                        PSN,
                        IP,
                        errMsg}, this.check_SFCS_Stage_newOperationCompleted, userState);
        }
        
        private void Oncheck_SFCS_Stage_newOperationCompleted(object arg) {
            if ((this.check_SFCS_Stage_newCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.check_SFCS_Stage_newCompleted(this, new check_SFCS_Stage_newCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chkCSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string chkCSN(string c_sn, ref string errmsg) {
            object[] results = this.Invoke("chkCSN", new object[] {
                        c_sn,
                        errmsg});
            errmsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void chkCSNAsync(string c_sn, string errmsg) {
            this.chkCSNAsync(c_sn, errmsg, null);
        }
        
        /// <remarks/>
        public void chkCSNAsync(string c_sn, string errmsg, object userState) {
            if ((this.chkCSNOperationCompleted == null)) {
                this.chkCSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchkCSNOperationCompleted);
            }
            this.InvokeAsync("chkCSN", new object[] {
                        c_sn,
                        errmsg}, this.chkCSNOperationCompleted, userState);
        }
        
        private void OnchkCSNOperationCompleted(object arg) {
            if ((this.chkCSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chkCSNCompleted(this, new chkCSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/check_state_repair", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool check_state_repair(string PSN, ref string errMsg) {
            object[] results = this.Invoke("check_state_repair", new object[] {
                        PSN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void check_state_repairAsync(string PSN, string errMsg) {
            this.check_state_repairAsync(PSN, errMsg, null);
        }
        
        /// <remarks/>
        public void check_state_repairAsync(string PSN, string errMsg, object userState) {
            if ((this.check_state_repairOperationCompleted == null)) {
                this.check_state_repairOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncheck_state_repairOperationCompleted);
            }
            this.InvokeAsync("check_state_repair", new object[] {
                        PSN,
                        errMsg}, this.check_state_repairOperationCompleted, userState);
        }
        
        private void Oncheck_state_repairOperationCompleted(object arg) {
            if ((this.check_state_repairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.check_state_repairCompleted(this, new check_state_repairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/check_state_scrap", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool check_state_scrap(string PSN, ref string errMsg) {
            object[] results = this.Invoke("check_state_scrap", new object[] {
                        PSN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void check_state_scrapAsync(string PSN, string errMsg) {
            this.check_state_scrapAsync(PSN, errMsg, null);
        }
        
        /// <remarks/>
        public void check_state_scrapAsync(string PSN, string errMsg, object userState) {
            if ((this.check_state_scrapOperationCompleted == null)) {
                this.check_state_scrapOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncheck_state_scrapOperationCompleted);
            }
            this.InvokeAsync("check_state_scrap", new object[] {
                        PSN,
                        errMsg}, this.check_state_scrapOperationCompleted, userState);
        }
        
        private void Oncheck_state_scrapOperationCompleted(object arg) {
            if ((this.check_state_scrapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.check_state_scrapCompleted(this, new check_state_scrapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_DNEA_CSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_DNEA_CSN(string psn, ref string errMsg) {
            object[] results = this.Invoke("get_DNEA_CSN", new object[] {
                        psn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get_DNEA_CSNAsync(string psn, string errMsg) {
            this.get_DNEA_CSNAsync(psn, errMsg, null);
        }
        
        /// <remarks/>
        public void get_DNEA_CSNAsync(string psn, string errMsg, object userState) {
            if ((this.get_DNEA_CSNOperationCompleted == null)) {
                this.get_DNEA_CSNOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_DNEA_CSNOperationCompleted);
            }
            this.InvokeAsync("get_DNEA_CSN", new object[] {
                        psn,
                        errMsg}, this.get_DNEA_CSNOperationCompleted, userState);
        }
        
        private void Onget_DNEA_CSNOperationCompleted(object arg) {
            if ((this.get_DNEA_CSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_DNEA_CSNCompleted(this, new get_DNEA_CSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_stage_testCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string get_stage_testCount(string PSN, string ip, ref string errmsg) {
            object[] results = this.Invoke("get_stage_testCount", new object[] {
                        PSN,
                        ip,
                        errmsg});
            errmsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_stage_testCountAsync(string PSN, string ip, string errmsg) {
            this.get_stage_testCountAsync(PSN, ip, errmsg, null);
        }
        
        /// <remarks/>
        public void get_stage_testCountAsync(string PSN, string ip, string errmsg, object userState) {
            if ((this.get_stage_testCountOperationCompleted == null)) {
                this.get_stage_testCountOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_stage_testCountOperationCompleted);
            }
            this.InvokeAsync("get_stage_testCount", new object[] {
                        PSN,
                        ip,
                        errmsg}, this.get_stage_testCountOperationCompleted, userState);
        }
        
        private void Onget_stage_testCountOperationCompleted(object arg) {
            if ((this.get_stage_testCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_stage_testCountCompleted(this, new get_stage_testCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chk_PCBA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool chk_PCBA(string PROD_SSN, ref string errMsg) {
            object[] results = this.Invoke("chk_PCBA", new object[] {
                        PROD_SSN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void chk_PCBAAsync(string PROD_SSN, string errMsg) {
            this.chk_PCBAAsync(PROD_SSN, errMsg, null);
        }
        
        /// <remarks/>
        public void chk_PCBAAsync(string PROD_SSN, string errMsg, object userState) {
            if ((this.chk_PCBAOperationCompleted == null)) {
                this.chk_PCBAOperationCompleted = new System.Threading.SendOrPostCallback(this.Onchk_PCBAOperationCompleted);
            }
            this.InvokeAsync("chk_PCBA", new object[] {
                        PROD_SSN,
                        errMsg}, this.chk_PCBAOperationCompleted, userState);
        }
        
        private void Onchk_PCBAOperationCompleted(object arg) {
            if ((this.chk_PCBACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chk_PCBACompleted(this, new chk_PCBACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chk_ForAutoAts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool chk_ForAutoAts(string SN, string ip, ref string errMsg) {
            object[] results = this.Invoke("chk_ForAutoAts", new object[] {
                        SN,
                        ip,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void chk_ForAutoAtsAsync(string SN, string ip, string errMsg) {
            this.chk_ForAutoAtsAsync(SN, ip, errMsg, null);
        }
        
        /// <remarks/>
        public void chk_ForAutoAtsAsync(string SN, string ip, string errMsg, object userState) {
            if ((this.chk_ForAutoAtsOperationCompleted == null)) {
                this.chk_ForAutoAtsOperationCompleted = new System.Threading.SendOrPostCallback(this.Onchk_ForAutoAtsOperationCompleted);
            }
            this.InvokeAsync("chk_ForAutoAts", new object[] {
                        SN,
                        ip,
                        errMsg}, this.chk_ForAutoAtsOperationCompleted, userState);
        }
        
        private void Onchk_ForAutoAtsOperationCompleted(object arg) {
            if ((this.chk_ForAutoAtsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chk_ForAutoAtsCompleted(this, new chk_ForAutoAtsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ATS_chkRepairStage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ATS_chkRepairStage(string ip, string sn, ref string errMsg) {
            object[] results = this.Invoke("ATS_chkRepairStage", new object[] {
                        ip,
                        sn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ATS_chkRepairStageAsync(string ip, string sn, string errMsg) {
            this.ATS_chkRepairStageAsync(ip, sn, errMsg, null);
        }
        
        /// <remarks/>
        public void ATS_chkRepairStageAsync(string ip, string sn, string errMsg, object userState) {
            if ((this.ATS_chkRepairStageOperationCompleted == null)) {
                this.ATS_chkRepairStageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnATS_chkRepairStageOperationCompleted);
            }
            this.InvokeAsync("ATS_chkRepairStage", new object[] {
                        ip,
                        sn,
                        errMsg}, this.ATS_chkRepairStageOperationCompleted, userState);
        }
        
        private void OnATS_chkRepairStageOperationCompleted(object arg) {
            if ((this.ATS_chkRepairStageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ATS_chkRepairStageCompleted(this, new ATS_chkRepairStageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chk_cpn_rule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool chk_cpn_rule(string sn, ref string errMsg) {
            object[] results = this.Invoke("chk_cpn_rule", new object[] {
                        sn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void chk_cpn_ruleAsync(string sn, string errMsg) {
            this.chk_cpn_ruleAsync(sn, errMsg, null);
        }
        
        /// <remarks/>
        public void chk_cpn_ruleAsync(string sn, string errMsg, object userState) {
            if ((this.chk_cpn_ruleOperationCompleted == null)) {
                this.chk_cpn_ruleOperationCompleted = new System.Threading.SendOrPostCallback(this.Onchk_cpn_ruleOperationCompleted);
            }
            this.InvokeAsync("chk_cpn_rule", new object[] {
                        sn,
                        errMsg}, this.chk_cpn_ruleOperationCompleted, userState);
        }
        
        private void Onchk_cpn_ruleOperationCompleted(object arg) {
            if ((this.chk_cpn_ruleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chk_cpn_ruleCompleted(this, new chk_cpn_ruleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chkUIM_2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string chkUIM_2(string uim, ref string errMsg) {
            object[] results = this.Invoke("chkUIM_2", new object[] {
                        uim,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void chkUIM_2Async(string uim, string errMsg) {
            this.chkUIM_2Async(uim, errMsg, null);
        }
        
        /// <remarks/>
        public void chkUIM_2Async(string uim, string errMsg, object userState) {
            if ((this.chkUIM_2OperationCompleted == null)) {
                this.chkUIM_2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnchkUIM_2OperationCompleted);
            }
            this.InvokeAsync("chkUIM_2", new object[] {
                        uim,
                        errMsg}, this.chkUIM_2OperationCompleted, userState);
        }
        
        private void OnchkUIM_2OperationCompleted(object arg) {
            if ((this.chkUIM_2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chkUIM_2Completed(this, new chkUIM_2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEquipPass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getEquipPass(string psn, ref string errMsg) {
            object[] results = this.Invoke("getEquipPass", new object[] {
                        psn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getEquipPassAsync(string psn, string errMsg) {
            this.getEquipPassAsync(psn, errMsg, null);
        }
        
        /// <remarks/>
        public void getEquipPassAsync(string psn, string errMsg, object userState) {
            if ((this.getEquipPassOperationCompleted == null)) {
                this.getEquipPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEquipPassOperationCompleted);
            }
            this.InvokeAsync("getEquipPass", new object[] {
                        psn,
                        errMsg}, this.getEquipPassOperationCompleted, userState);
        }
        
        private void OngetEquipPassOperationCompleted(object arg) {
            if ((this.getEquipPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEquipPassCompleted(this, new getEquipPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chkUIM_TEL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string chkUIM_TEL(string uim, ref string errMsg) {
            object[] results = this.Invoke("chkUIM_TEL", new object[] {
                        uim,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void chkUIM_TELAsync(string uim, string errMsg) {
            this.chkUIM_TELAsync(uim, errMsg, null);
        }
        
        /// <remarks/>
        public void chkUIM_TELAsync(string uim, string errMsg, object userState) {
            if ((this.chkUIM_TELOperationCompleted == null)) {
                this.chkUIM_TELOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchkUIM_TELOperationCompleted);
            }
            this.InvokeAsync("chkUIM_TEL", new object[] {
                        uim,
                        errMsg}, this.chkUIM_TELOperationCompleted, userState);
        }
        
        private void OnchkUIM_TELOperationCompleted(object arg) {
            if ((this.chkUIM_TELCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chkUIM_TELCompleted(this, new chkUIM_TELCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chkUIM_WithoutTEL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string chkUIM_WithoutTEL(string uim, ref string errMsg) {
            object[] results = this.Invoke("chkUIM_WithoutTEL", new object[] {
                        uim,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void chkUIM_WithoutTELAsync(string uim, string errMsg) {
            this.chkUIM_WithoutTELAsync(uim, errMsg, null);
        }
        
        /// <remarks/>
        public void chkUIM_WithoutTELAsync(string uim, string errMsg, object userState) {
            if ((this.chkUIM_WithoutTELOperationCompleted == null)) {
                this.chkUIM_WithoutTELOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchkUIM_WithoutTELOperationCompleted);
            }
            this.InvokeAsync("chkUIM_WithoutTEL", new object[] {
                        uim,
                        errMsg}, this.chkUIM_WithoutTELOperationCompleted, userState);
        }
        
        private void OnchkUIM_WithoutTELOperationCompleted(object arg) {
            if ((this.chkUIM_WithoutTELCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chkUIM_WithoutTELCompleted(this, new chkUIM_WithoutTELCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chk_cpn_rule_new", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool chk_cpn_rule_new(string sn, ref string errMsg) {
            object[] results = this.Invoke("chk_cpn_rule_new", new object[] {
                        sn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void chk_cpn_rule_newAsync(string sn, string errMsg) {
            this.chk_cpn_rule_newAsync(sn, errMsg, null);
        }
        
        /// <remarks/>
        public void chk_cpn_rule_newAsync(string sn, string errMsg, object userState) {
            if ((this.chk_cpn_rule_newOperationCompleted == null)) {
                this.chk_cpn_rule_newOperationCompleted = new System.Threading.SendOrPostCallback(this.Onchk_cpn_rule_newOperationCompleted);
            }
            this.InvokeAsync("chk_cpn_rule_new", new object[] {
                        sn,
                        errMsg}, this.chk_cpn_rule_newOperationCompleted, userState);
        }
        
        private void Onchk_cpn_rule_newOperationCompleted(object arg) {
            if ((this.chk_cpn_rule_newCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chk_cpn_rule_newCompleted(this, new chk_cpn_rule_newCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGoldenSnData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetGoldenSnData(string ProdSSN, string Station, ref string errMsg) {
            object[] results = this.Invoke("GetGoldenSnData", new object[] {
                        ProdSSN,
                        Station,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetGoldenSnDataAsync(string ProdSSN, string Station, string errMsg) {
            this.GetGoldenSnDataAsync(ProdSSN, Station, errMsg, null);
        }
        
        /// <remarks/>
        public void GetGoldenSnDataAsync(string ProdSSN, string Station, string errMsg, object userState) {
            if ((this.GetGoldenSnDataOperationCompleted == null)) {
                this.GetGoldenSnDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGoldenSnDataOperationCompleted);
            }
            this.InvokeAsync("GetGoldenSnData", new object[] {
                        ProdSSN,
                        Station,
                        errMsg}, this.GetGoldenSnDataOperationCompleted, userState);
        }
        
        private void OnGetGoldenSnDataOperationCompleted(object arg) {
            if ((this.GetGoldenSnDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGoldenSnDataCompleted(this, new GetGoldenSnDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCAbyMAC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getCAbyMAC(string csn, ref string errMsg) {
            object[] results = this.Invoke("getCAbyMAC", new object[] {
                        csn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getCAbyMACAsync(string csn, string errMsg) {
            this.getCAbyMACAsync(csn, errMsg, null);
        }
        
        /// <remarks/>
        public void getCAbyMACAsync(string csn, string errMsg, object userState) {
            if ((this.getCAbyMACOperationCompleted == null)) {
                this.getCAbyMACOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCAbyMACOperationCompleted);
            }
            this.InvokeAsync("getCAbyMAC", new object[] {
                        csn,
                        errMsg}, this.getCAbyMACOperationCompleted, userState);
        }
        
        private void OngetCAbyMACOperationCompleted(object arg) {
            if ((this.getCAbyMACCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCAbyMACCompleted(this, new getCAbyMACCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chkIPbyPN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool chkIPbyPN(string PN, string ip, ref string errMsg) {
            object[] results = this.Invoke("chkIPbyPN", new object[] {
                        PN,
                        ip,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void chkIPbyPNAsync(string PN, string ip, string errMsg) {
            this.chkIPbyPNAsync(PN, ip, errMsg, null);
        }
        
        /// <remarks/>
        public void chkIPbyPNAsync(string PN, string ip, string errMsg, object userState) {
            if ((this.chkIPbyPNOperationCompleted == null)) {
                this.chkIPbyPNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchkIPbyPNOperationCompleted);
            }
            this.InvokeAsync("chkIPbyPN", new object[] {
                        PN,
                        ip,
                        errMsg}, this.chkIPbyPNOperationCompleted, userState);
        }
        
        private void OnchkIPbyPNOperationCompleted(object arg) {
            if ((this.chkIPbyPNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chkIPbyPNCompleted(this, new chkIPbyPNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chkRetestNG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string chkRetestNG(string ip, string vs_ssn, ref string errMsg) {
            object[] results = this.Invoke("chkRetestNG", new object[] {
                        ip,
                        vs_ssn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void chkRetestNGAsync(string ip, string vs_ssn, string errMsg) {
            this.chkRetestNGAsync(ip, vs_ssn, errMsg, null);
        }
        
        /// <remarks/>
        public void chkRetestNGAsync(string ip, string vs_ssn, string errMsg, object userState) {
            if ((this.chkRetestNGOperationCompleted == null)) {
                this.chkRetestNGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchkRetestNGOperationCompleted);
            }
            this.InvokeAsync("chkRetestNG", new object[] {
                        ip,
                        vs_ssn,
                        errMsg}, this.chkRetestNGOperationCompleted, userState);
        }
        
        private void OnchkRetestNGOperationCompleted(object arg) {
            if ((this.chkRetestNGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chkRetestNGCompleted(this, new chkRetestNGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDailySampling", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckDailySampling(string SSN, string SampleQty, SamplingType SampleType, string IP, ref bool AlreadySample, ref bool NeedSample, ref string errMsg) {
            object[] results = this.Invoke("CheckDailySampling", new object[] {
                        SSN,
                        SampleQty,
                        SampleType,
                        IP,
                        AlreadySample,
                        NeedSample,
                        errMsg});
            AlreadySample = ((bool)(results[1]));
            NeedSample = ((bool)(results[2]));
            errMsg = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDailySamplingAsync(string SSN, string SampleQty, SamplingType SampleType, string IP, bool AlreadySample, bool NeedSample, string errMsg) {
            this.CheckDailySamplingAsync(SSN, SampleQty, SampleType, IP, AlreadySample, NeedSample, errMsg, null);
        }
        
        /// <remarks/>
        public void CheckDailySamplingAsync(string SSN, string SampleQty, SamplingType SampleType, string IP, bool AlreadySample, bool NeedSample, string errMsg, object userState) {
            if ((this.CheckDailySamplingOperationCompleted == null)) {
                this.CheckDailySamplingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDailySamplingOperationCompleted);
            }
            this.InvokeAsync("CheckDailySampling", new object[] {
                        SSN,
                        SampleQty,
                        SampleType,
                        IP,
                        AlreadySample,
                        NeedSample,
                        errMsg}, this.CheckDailySamplingOperationCompleted, userState);
        }
        
        private void OnCheckDailySamplingOperationCompleted(object arg) {
            if ((this.CheckDailySamplingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDailySamplingCompleted(this, new CheckDailySamplingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllCsnByCsn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAllCsnByCsn(string CSN, ref string errMsg) {
            object[] results = this.Invoke("getAllCsnByCsn", new object[] {
                        CSN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAllCsnByCsnAsync(string CSN, string errMsg) {
            this.getAllCsnByCsnAsync(CSN, errMsg, null);
        }
        
        /// <remarks/>
        public void getAllCsnByCsnAsync(string CSN, string errMsg, object userState) {
            if ((this.getAllCsnByCsnOperationCompleted == null)) {
                this.getAllCsnByCsnOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllCsnByCsnOperationCompleted);
            }
            this.InvokeAsync("getAllCsnByCsn", new object[] {
                        CSN,
                        errMsg}, this.getAllCsnByCsnOperationCompleted, userState);
        }
        
        private void OngetAllCsnByCsnOperationCompleted(object arg) {
            if ((this.getAllCsnByCsnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllCsnByCsnCompleted(this, new getAllCsnByCsnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/check_SFCSvATS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool check_SFCSvATS(string pn, string ip, ref string errMsg) {
            object[] results = this.Invoke("check_SFCSvATS", new object[] {
                        pn,
                        ip,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void check_SFCSvATSAsync(string pn, string ip, string errMsg) {
            this.check_SFCSvATSAsync(pn, ip, errMsg, null);
        }
        
        /// <remarks/>
        public void check_SFCSvATSAsync(string pn, string ip, string errMsg, object userState) {
            if ((this.check_SFCSvATSOperationCompleted == null)) {
                this.check_SFCSvATSOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncheck_SFCSvATSOperationCompleted);
            }
            this.InvokeAsync("check_SFCSvATS", new object[] {
                        pn,
                        ip,
                        errMsg}, this.check_SFCSvATSOperationCompleted, userState);
        }
        
        private void Oncheck_SFCSvATSOperationCompleted(object arg) {
            if ((this.check_SFCSvATSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.check_SFCSvATSCompleted(this, new check_SFCSvATSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsStandardSample", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IsStandardSampleOutput IsStandardSample(IsStandardSampleInput Input) {
            object[] results = this.Invoke("IsStandardSample", new object[] {
                        Input});
            return ((IsStandardSampleOutput)(results[0]));
        }
        
        /// <remarks/>
        public void IsStandardSampleAsync(IsStandardSampleInput Input) {
            this.IsStandardSampleAsync(Input, null);
        }
        
        /// <remarks/>
        public void IsStandardSampleAsync(IsStandardSampleInput Input, object userState) {
            if ((this.IsStandardSampleOperationCompleted == null)) {
                this.IsStandardSampleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsStandardSampleOperationCompleted);
            }
            this.InvokeAsync("IsStandardSample", new object[] {
                        Input}, this.IsStandardSampleOperationCompleted, userState);
        }
        
        private void OnIsStandardSampleOperationCompleted(object arg) {
            if ((this.IsStandardSampleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsStandardSampleCompleted(this, new IsStandardSampleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMOLot", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getMOLot(string mo, ref string errMsg) {
            object[] results = this.Invoke("getMOLot", new object[] {
                        mo,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getMOLotAsync(string mo, string errMsg) {
            this.getMOLotAsync(mo, errMsg, null);
        }
        
        /// <remarks/>
        public void getMOLotAsync(string mo, string errMsg, object userState) {
            if ((this.getMOLotOperationCompleted == null)) {
                this.getMOLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMOLotOperationCompleted);
            }
            this.InvokeAsync("getMOLot", new object[] {
                        mo,
                        errMsg}, this.getMOLotOperationCompleted, userState);
        }
        
        private void OngetMOLotOperationCompleted(object arg) {
            if ((this.getMOLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMOLotCompleted(this, new getMOLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_EQUIPMENT_USED", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Insert_EQUIPMENT_USED(System.Data.DataSet ds, ref string errMsg) {
            object[] results = this.Invoke("Insert_EQUIPMENT_USED", new object[] {
                        ds,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_EQUIPMENT_USEDAsync(System.Data.DataSet ds, string errMsg) {
            this.Insert_EQUIPMENT_USEDAsync(ds, errMsg, null);
        }
        
        /// <remarks/>
        public void Insert_EQUIPMENT_USEDAsync(System.Data.DataSet ds, string errMsg, object userState) {
            if ((this.Insert_EQUIPMENT_USEDOperationCompleted == null)) {
                this.Insert_EQUIPMENT_USEDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_EQUIPMENT_USEDOperationCompleted);
            }
            this.InvokeAsync("Insert_EQUIPMENT_USED", new object[] {
                        ds,
                        errMsg}, this.Insert_EQUIPMENT_USEDOperationCompleted, userState);
        }
        
        private void OnInsert_EQUIPMENT_USEDOperationCompleted(object arg) {
            if ((this.Insert_EQUIPMENT_USEDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_EQUIPMENT_USEDCompleted(this, new Insert_EQUIPMENT_USEDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Check_EQUIPMENT_USED", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Check_EQUIPMENT_USED(string IP, ref string errMsg) {
            object[] results = this.Invoke("Check_EQUIPMENT_USED", new object[] {
                        IP,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Check_EQUIPMENT_USEDAsync(string IP, string errMsg) {
            this.Check_EQUIPMENT_USEDAsync(IP, errMsg, null);
        }
        
        /// <remarks/>
        public void Check_EQUIPMENT_USEDAsync(string IP, string errMsg, object userState) {
            if ((this.Check_EQUIPMENT_USEDOperationCompleted == null)) {
                this.Check_EQUIPMENT_USEDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheck_EQUIPMENT_USEDOperationCompleted);
            }
            this.InvokeAsync("Check_EQUIPMENT_USED", new object[] {
                        IP,
                        errMsg}, this.Check_EQUIPMENT_USEDOperationCompleted, userState);
        }
        
        private void OnCheck_EQUIPMENT_USEDOperationCompleted(object arg) {
            if ((this.Check_EQUIPMENT_USEDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Check_EQUIPMENT_USEDCompleted(this, new Check_EQUIPMENT_USEDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEquipUseStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEquipUseStatus(string FIXTURE_ID, string ITEM, int USE_COUNT, ref string errMsg) {
            object[] results = this.Invoke("GetEquipUseStatus", new object[] {
                        FIXTURE_ID,
                        ITEM,
                        USE_COUNT,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEquipUseStatusAsync(string FIXTURE_ID, string ITEM, int USE_COUNT, string errMsg) {
            this.GetEquipUseStatusAsync(FIXTURE_ID, ITEM, USE_COUNT, errMsg, null);
        }
        
        /// <remarks/>
        public void GetEquipUseStatusAsync(string FIXTURE_ID, string ITEM, int USE_COUNT, string errMsg, object userState) {
            if ((this.GetEquipUseStatusOperationCompleted == null)) {
                this.GetEquipUseStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEquipUseStatusOperationCompleted);
            }
            this.InvokeAsync("GetEquipUseStatus", new object[] {
                        FIXTURE_ID,
                        ITEM,
                        USE_COUNT,
                        errMsg}, this.GetEquipUseStatusOperationCompleted, userState);
        }
        
        private void OnGetEquipUseStatusOperationCompleted(object arg) {
            if ((this.GetEquipUseStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEquipUseStatusCompleted(this, new GetEquipUseStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEquipUseCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEquipUseCount(string FIXTURE_ID, string ITEM, string CREATE_BY, ref string errMsg) {
            object[] results = this.Invoke("UpdateEquipUseCount", new object[] {
                        FIXTURE_ID,
                        ITEM,
                        CREATE_BY,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEquipUseCountAsync(string FIXTURE_ID, string ITEM, string CREATE_BY, string errMsg) {
            this.UpdateEquipUseCountAsync(FIXTURE_ID, ITEM, CREATE_BY, errMsg, null);
        }
        
        /// <remarks/>
        public void UpdateEquipUseCountAsync(string FIXTURE_ID, string ITEM, string CREATE_BY, string errMsg, object userState) {
            if ((this.UpdateEquipUseCountOperationCompleted == null)) {
                this.UpdateEquipUseCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEquipUseCountOperationCompleted);
            }
            this.InvokeAsync("UpdateEquipUseCount", new object[] {
                        FIXTURE_ID,
                        ITEM,
                        CREATE_BY,
                        errMsg}, this.UpdateEquipUseCountOperationCompleted, userState);
        }
        
        private void OnUpdateEquipUseCountOperationCompleted(object arg) {
            if ((this.UpdateEquipUseCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEquipUseCountCompleted(this, new UpdateEquipUseCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSN_ByCSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSN_ByCSN(string CSN, string CPN, ref string errMsg) {
            object[] results = this.Invoke("getSN_ByCSN", new object[] {
                        CSN,
                        CPN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSN_ByCSNAsync(string CSN, string CPN, string errMsg) {
            this.getSN_ByCSNAsync(CSN, CPN, errMsg, null);
        }
        
        /// <remarks/>
        public void getSN_ByCSNAsync(string CSN, string CPN, string errMsg, object userState) {
            if ((this.getSN_ByCSNOperationCompleted == null)) {
                this.getSN_ByCSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSN_ByCSNOperationCompleted);
            }
            this.InvokeAsync("getSN_ByCSN", new object[] {
                        CSN,
                        CPN,
                        errMsg}, this.getSN_ByCSNOperationCompleted, userState);
        }
        
        private void OngetSN_ByCSNOperationCompleted(object arg) {
            if ((this.getSN_ByCSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSN_ByCSNCompleted(this, new getSN_ByCSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPNGNDSbyCSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getPNGNDSbyCSN(string CSN, ref string errMsg) {
            object[] results = this.Invoke("getPNGNDSbyCSN", new object[] {
                        CSN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPNGNDSbyCSNAsync(string CSN, string errMsg) {
            this.getPNGNDSbyCSNAsync(CSN, errMsg, null);
        }
        
        /// <remarks/>
        public void getPNGNDSbyCSNAsync(string CSN, string errMsg, object userState) {
            if ((this.getPNGNDSbyCSNOperationCompleted == null)) {
                this.getPNGNDSbyCSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPNGNDSbyCSNOperationCompleted);
            }
            this.InvokeAsync("getPNGNDSbyCSN", new object[] {
                        CSN,
                        errMsg}, this.getPNGNDSbyCSNOperationCompleted, userState);
        }
        
        private void OngetPNGNDSbyCSNOperationCompleted(object arg) {
            if ((this.getPNGNDSbyCSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPNGNDSbyCSNCompleted(this, new getPNGNDSbyCSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getModelNamebyCSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getModelNamebyCSN(string CSN, ref string errMsg) {
            object[] results = this.Invoke("getModelNamebyCSN", new object[] {
                        CSN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getModelNamebyCSNAsync(string CSN, string errMsg) {
            this.getModelNamebyCSNAsync(CSN, errMsg, null);
        }
        
        /// <remarks/>
        public void getModelNamebyCSNAsync(string CSN, string errMsg, object userState) {
            if ((this.getModelNamebyCSNOperationCompleted == null)) {
                this.getModelNamebyCSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetModelNamebyCSNOperationCompleted);
            }
            this.InvokeAsync("getModelNamebyCSN", new object[] {
                        CSN,
                        errMsg}, this.getModelNamebyCSNOperationCompleted, userState);
        }
        
        private void OngetModelNamebyCSNOperationCompleted(object arg) {
            if ((this.getModelNamebyCSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getModelNamebyCSNCompleted(this, new getModelNamebyCSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFLEXFIELD_ByCSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getFLEXFIELD_ByCSN(string CSN, string qualifier, ref string errMsg) {
            object[] results = this.Invoke("getFLEXFIELD_ByCSN", new object[] {
                        CSN,
                        qualifier,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getFLEXFIELD_ByCSNAsync(string CSN, string qualifier, string errMsg) {
            this.getFLEXFIELD_ByCSNAsync(CSN, qualifier, errMsg, null);
        }
        
        /// <remarks/>
        public void getFLEXFIELD_ByCSNAsync(string CSN, string qualifier, string errMsg, object userState) {
            if ((this.getFLEXFIELD_ByCSNOperationCompleted == null)) {
                this.getFLEXFIELD_ByCSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFLEXFIELD_ByCSNOperationCompleted);
            }
            this.InvokeAsync("getFLEXFIELD_ByCSN", new object[] {
                        CSN,
                        qualifier,
                        errMsg}, this.getFLEXFIELD_ByCSNOperationCompleted, userState);
        }
        
        private void OngetFLEXFIELD_ByCSNOperationCompleted(object arg) {
            if ((this.getFLEXFIELD_ByCSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFLEXFIELD_ByCSNCompleted(this, new getFLEXFIELD_ByCSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSN_ForATS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSN_ForATS(string SSN, ref string errMsg) {
            object[] results = this.Invoke("getSN_ForATS", new object[] {
                        SSN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSN_ForATSAsync(string SSN, string errMsg) {
            this.getSN_ForATSAsync(SSN, errMsg, null);
        }
        
        /// <remarks/>
        public void getSN_ForATSAsync(string SSN, string errMsg, object userState) {
            if ((this.getSN_ForATSOperationCompleted == null)) {
                this.getSN_ForATSOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSN_ForATSOperationCompleted);
            }
            this.InvokeAsync("getSN_ForATS", new object[] {
                        SSN,
                        errMsg}, this.getSN_ForATSOperationCompleted, userState);
        }
        
        private void OngetSN_ForATSOperationCompleted(object arg) {
            if ((this.getSN_ForATSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSN_ForATSCompleted(this, new getSN_ForATSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCreatedTime_byCsn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCreatedTime_byCsn(string strCSN, ref string errMsg) {
            object[] results = this.Invoke("getCreatedTime_byCsn", new object[] {
                        strCSN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCreatedTime_byCsnAsync(string strCSN, string errMsg) {
            this.getCreatedTime_byCsnAsync(strCSN, errMsg, null);
        }
        
        /// <remarks/>
        public void getCreatedTime_byCsnAsync(string strCSN, string errMsg, object userState) {
            if ((this.getCreatedTime_byCsnOperationCompleted == null)) {
                this.getCreatedTime_byCsnOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCreatedTime_byCsnOperationCompleted);
            }
            this.InvokeAsync("getCreatedTime_byCsn", new object[] {
                        strCSN,
                        errMsg}, this.getCreatedTime_byCsnOperationCompleted, userState);
        }
        
        private void OngetCreatedTime_byCsnOperationCompleted(object arg) {
            if ((this.getCreatedTime_byCsnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCreatedTime_byCsnCompleted(this, new getCreatedTime_byCsnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ATS_chkRetestReturn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ATS_chkRetestReturn(string sn, string Result, ref string errMsg) {
            object[] results = this.Invoke("ATS_chkRetestReturn", new object[] {
                        sn,
                        Result,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ATS_chkRetestReturnAsync(string sn, string Result, string errMsg) {
            this.ATS_chkRetestReturnAsync(sn, Result, errMsg, null);
        }
        
        /// <remarks/>
        public void ATS_chkRetestReturnAsync(string sn, string Result, string errMsg, object userState) {
            if ((this.ATS_chkRetestReturnOperationCompleted == null)) {
                this.ATS_chkRetestReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnATS_chkRetestReturnOperationCompleted);
            }
            this.InvokeAsync("ATS_chkRetestReturn", new object[] {
                        sn,
                        Result,
                        errMsg}, this.ATS_chkRetestReturnOperationCompleted, userState);
        }
        
        private void OnATS_chkRetestReturnOperationCompleted(object arg) {
            if ((this.ATS_chkRetestReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ATS_chkRetestReturnCompleted(this, new ATS_chkRetestReturnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ATS_chkRetestReturnForMRBOXKBM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ATS_chkRetestReturnForMRBOXKBM(string CSN, string IP, string ErrorCode, ref string errMsg) {
            object[] results = this.Invoke("ATS_chkRetestReturnForMRBOXKBM", new object[] {
                        CSN,
                        IP,
                        ErrorCode,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ATS_chkRetestReturnForMRBOXKBMAsync(string CSN, string IP, string ErrorCode, string errMsg) {
            this.ATS_chkRetestReturnForMRBOXKBMAsync(CSN, IP, ErrorCode, errMsg, null);
        }
        
        /// <remarks/>
        public void ATS_chkRetestReturnForMRBOXKBMAsync(string CSN, string IP, string ErrorCode, string errMsg, object userState) {
            if ((this.ATS_chkRetestReturnForMRBOXKBMOperationCompleted == null)) {
                this.ATS_chkRetestReturnForMRBOXKBMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnATS_chkRetestReturnForMRBOXKBMOperationCompleted);
            }
            this.InvokeAsync("ATS_chkRetestReturnForMRBOXKBM", new object[] {
                        CSN,
                        IP,
                        ErrorCode,
                        errMsg}, this.ATS_chkRetestReturnForMRBOXKBMOperationCompleted, userState);
        }
        
        private void OnATS_chkRetestReturnForMRBOXKBMOperationCompleted(object arg) {
            if ((this.ATS_chkRetestReturnForMRBOXKBMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ATS_chkRetestReturnForMRBOXKBMCompleted(this, new ATS_chkRetestReturnForMRBOXKBMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ATS_chkRetestReturnForNTGR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ATS_chkRetestReturnForNTGR(string sn, string Result, string EquipId, ref string errMsg) {
            object[] results = this.Invoke("ATS_chkRetestReturnForNTGR", new object[] {
                        sn,
                        Result,
                        EquipId,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ATS_chkRetestReturnForNTGRAsync(string sn, string Result, string EquipId, string errMsg) {
            this.ATS_chkRetestReturnForNTGRAsync(sn, Result, EquipId, errMsg, null);
        }
        
        /// <remarks/>
        public void ATS_chkRetestReturnForNTGRAsync(string sn, string Result, string EquipId, string errMsg, object userState) {
            if ((this.ATS_chkRetestReturnForNTGROperationCompleted == null)) {
                this.ATS_chkRetestReturnForNTGROperationCompleted = new System.Threading.SendOrPostCallback(this.OnATS_chkRetestReturnForNTGROperationCompleted);
            }
            this.InvokeAsync("ATS_chkRetestReturnForNTGR", new object[] {
                        sn,
                        Result,
                        EquipId,
                        errMsg}, this.ATS_chkRetestReturnForNTGROperationCompleted, userState);
        }
        
        private void OnATS_chkRetestReturnForNTGROperationCompleted(object arg) {
            if ((this.ATS_chkRetestReturnForNTGRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ATS_chkRetestReturnForNTGRCompleted(this, new ATS_chkRetestReturnForNTGRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ATS_chkRetestReturnNGEquip", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ATS_chkRetestReturnNGEquip(string sn, string Result, string EquipId, ref string errMsg) {
            object[] results = this.Invoke("ATS_chkRetestReturnNGEquip", new object[] {
                        sn,
                        Result,
                        EquipId,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ATS_chkRetestReturnNGEquipAsync(string sn, string Result, string EquipId, string errMsg) {
            this.ATS_chkRetestReturnNGEquipAsync(sn, Result, EquipId, errMsg, null);
        }
        
        /// <remarks/>
        public void ATS_chkRetestReturnNGEquipAsync(string sn, string Result, string EquipId, string errMsg, object userState) {
            if ((this.ATS_chkRetestReturnNGEquipOperationCompleted == null)) {
                this.ATS_chkRetestReturnNGEquipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnATS_chkRetestReturnNGEquipOperationCompleted);
            }
            this.InvokeAsync("ATS_chkRetestReturnNGEquip", new object[] {
                        sn,
                        Result,
                        EquipId,
                        errMsg}, this.ATS_chkRetestReturnNGEquipOperationCompleted, userState);
        }
        
        private void OnATS_chkRetestReturnNGEquipOperationCompleted(object arg) {
            if ((this.ATS_chkRetestReturnNGEquipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ATS_chkRetestReturnNGEquipCompleted(this, new ATS_chkRetestReturnNGEquipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/check_Curr_Stage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool check_Curr_Stage(string PSN, string IP, ref string errMsg) {
            object[] results = this.Invoke("check_Curr_Stage", new object[] {
                        PSN,
                        IP,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void check_Curr_StageAsync(string PSN, string IP, string errMsg) {
            this.check_Curr_StageAsync(PSN, IP, errMsg, null);
        }
        
        /// <remarks/>
        public void check_Curr_StageAsync(string PSN, string IP, string errMsg, object userState) {
            if ((this.check_Curr_StageOperationCompleted == null)) {
                this.check_Curr_StageOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncheck_Curr_StageOperationCompleted);
            }
            this.InvokeAsync("check_Curr_Stage", new object[] {
                        PSN,
                        IP,
                        errMsg}, this.check_Curr_StageOperationCompleted, userState);
        }
        
        private void Oncheck_Curr_StageOperationCompleted(object arg) {
            if ((this.check_Curr_StageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.check_Curr_StageCompleted(this, new check_Curr_StageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWebServiceURL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebServiceURL(string reqURL, string pn, ref string errMsg) {
            object[] results = this.Invoke("GetWebServiceURL", new object[] {
                        reqURL,
                        pn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebServiceURLAsync(string reqURL, string pn, string errMsg) {
            this.GetWebServiceURLAsync(reqURL, pn, errMsg, null);
        }
        
        /// <remarks/>
        public void GetWebServiceURLAsync(string reqURL, string pn, string errMsg, object userState) {
            if ((this.GetWebServiceURLOperationCompleted == null)) {
                this.GetWebServiceURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebServiceURLOperationCompleted);
            }
            this.InvokeAsync("GetWebServiceURL", new object[] {
                        reqURL,
                        pn,
                        errMsg}, this.GetWebServiceURLOperationCompleted, userState);
        }
        
        private void OnGetWebServiceURLOperationCompleted(object arg) {
            if ((this.GetWebServiceURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebServiceURLCompleted(this, new GetWebServiceURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getErrCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getErrCode(string bu, string errCode, ref string errMsg) {
            object[] results = this.Invoke("getErrCode", new object[] {
                        bu,
                        errCode,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getErrCodeAsync(string bu, string errCode, string errMsg) {
            this.getErrCodeAsync(bu, errCode, errMsg, null);
        }
        
        /// <remarks/>
        public void getErrCodeAsync(string bu, string errCode, string errMsg, object userState) {
            if ((this.getErrCodeOperationCompleted == null)) {
                this.getErrCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetErrCodeOperationCompleted);
            }
            this.InvokeAsync("getErrCode", new object[] {
                        bu,
                        errCode,
                        errMsg}, this.getErrCodeOperationCompleted, userState);
        }
        
        private void OngetErrCodeOperationCompleted(object arg) {
            if ((this.getErrCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getErrCodeCompleted(this, new getErrCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLastTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getLastTime(string SSN, string Stage, int Time, ref string errMsg) {
            object[] results = this.Invoke("getLastTime", new object[] {
                        SSN,
                        Stage,
                        Time,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getLastTimeAsync(string SSN, string Stage, int Time, string errMsg) {
            this.getLastTimeAsync(SSN, Stage, Time, errMsg, null);
        }
        
        /// <remarks/>
        public void getLastTimeAsync(string SSN, string Stage, int Time, string errMsg, object userState) {
            if ((this.getLastTimeOperationCompleted == null)) {
                this.getLastTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLastTimeOperationCompleted);
            }
            this.InvokeAsync("getLastTime", new object[] {
                        SSN,
                        Stage,
                        Time,
                        errMsg}, this.getLastTimeOperationCompleted, userState);
        }
        
        private void OngetLastTimeOperationCompleted(object arg) {
            if ((this.getLastTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLastTimeCompleted(this, new getLastTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_snruleValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string get_snruleValue(string sPn, string sTypeName, ref string errMsg) {
            object[] results = this.Invoke("get_snruleValue", new object[] {
                        sPn,
                        sTypeName,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_snruleValueAsync(string sPn, string sTypeName, string errMsg) {
            this.get_snruleValueAsync(sPn, sTypeName, errMsg, null);
        }
        
        /// <remarks/>
        public void get_snruleValueAsync(string sPn, string sTypeName, string errMsg, object userState) {
            if ((this.get_snruleValueOperationCompleted == null)) {
                this.get_snruleValueOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_snruleValueOperationCompleted);
            }
            this.InvokeAsync("get_snruleValue", new object[] {
                        sPn,
                        sTypeName,
                        errMsg}, this.get_snruleValueOperationCompleted, userState);
        }
        
        private void Onget_snruleValueOperationCompleted(object arg) {
            if ((this.get_snruleValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_snruleValueCompleted(this, new get_snruleValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChkOPIDAndPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ChkOPIDAndPassword(string OPID, string Password, ref string errMsg) {
            object[] results = this.Invoke("ChkOPIDAndPassword", new object[] {
                        OPID,
                        Password,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ChkOPIDAndPasswordAsync(string OPID, string Password, string errMsg) {
            this.ChkOPIDAndPasswordAsync(OPID, Password, errMsg, null);
        }
        
        /// <remarks/>
        public void ChkOPIDAndPasswordAsync(string OPID, string Password, string errMsg, object userState) {
            if ((this.ChkOPIDAndPasswordOperationCompleted == null)) {
                this.ChkOPIDAndPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkOPIDAndPasswordOperationCompleted);
            }
            this.InvokeAsync("ChkOPIDAndPassword", new object[] {
                        OPID,
                        Password,
                        errMsg}, this.ChkOPIDAndPasswordOperationCompleted, userState);
        }
        
        private void OnChkOPIDAndPasswordOperationCompleted(object arg) {
            if ((this.ChkOPIDAndPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkOPIDAndPasswordCompleted(this, new ChkOPIDAndPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Save_LOCK_MSG_ForATS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_LOCK_MSG_ForATS(string IP, string LOCK_CODE, string LOCK_MSG, ref string errMsg) {
            object[] results = this.Invoke("Save_LOCK_MSG_ForATS", new object[] {
                        IP,
                        LOCK_CODE,
                        LOCK_MSG,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_LOCK_MSG_ForATSAsync(string IP, string LOCK_CODE, string LOCK_MSG, string errMsg) {
            this.Save_LOCK_MSG_ForATSAsync(IP, LOCK_CODE, LOCK_MSG, errMsg, null);
        }
        
        /// <remarks/>
        public void Save_LOCK_MSG_ForATSAsync(string IP, string LOCK_CODE, string LOCK_MSG, string errMsg, object userState) {
            if ((this.Save_LOCK_MSG_ForATSOperationCompleted == null)) {
                this.Save_LOCK_MSG_ForATSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_LOCK_MSG_ForATSOperationCompleted);
            }
            this.InvokeAsync("Save_LOCK_MSG_ForATS", new object[] {
                        IP,
                        LOCK_CODE,
                        LOCK_MSG,
                        errMsg}, this.Save_LOCK_MSG_ForATSOperationCompleted, userState);
        }
        
        private void OnSave_LOCK_MSG_ForATSOperationCompleted(object arg) {
            if ((this.Save_LOCK_MSG_ForATSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_LOCK_MSG_ForATSCompleted(this, new Save_LOCK_MSG_ForATSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Return_T_count_By_Date", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Return_T_count_By_Date(string DTS, ref string errMsg) {
            object[] results = this.Invoke("Return_T_count_By_Date", new object[] {
                        DTS,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Return_T_count_By_DateAsync(string DTS, string errMsg) {
            this.Return_T_count_By_DateAsync(DTS, errMsg, null);
        }
        
        /// <remarks/>
        public void Return_T_count_By_DateAsync(string DTS, string errMsg, object userState) {
            if ((this.Return_T_count_By_DateOperationCompleted == null)) {
                this.Return_T_count_By_DateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturn_T_count_By_DateOperationCompleted);
            }
            this.InvokeAsync("Return_T_count_By_Date", new object[] {
                        DTS,
                        errMsg}, this.Return_T_count_By_DateOperationCompleted, userState);
        }
        
        private void OnReturn_T_count_By_DateOperationCompleted(object arg) {
            if ((this.Return_T_count_By_DateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Return_T_count_By_DateCompleted(this, new Return_T_count_By_DateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Return_S_count_By_Date", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Return_S_count_By_Date(string DTS, ref string errMsg) {
            object[] results = this.Invoke("Return_S_count_By_Date", new object[] {
                        DTS,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Return_S_count_By_DateAsync(string DTS, string errMsg) {
            this.Return_S_count_By_DateAsync(DTS, errMsg, null);
        }
        
        /// <remarks/>
        public void Return_S_count_By_DateAsync(string DTS, string errMsg, object userState) {
            if ((this.Return_S_count_By_DateOperationCompleted == null)) {
                this.Return_S_count_By_DateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturn_S_count_By_DateOperationCompleted);
            }
            this.InvokeAsync("Return_S_count_By_Date", new object[] {
                        DTS,
                        errMsg}, this.Return_S_count_By_DateOperationCompleted, userState);
        }
        
        private void OnReturn_S_count_By_DateOperationCompleted(object arg) {
            if ((this.Return_S_count_By_DateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Return_S_count_By_DateCompleted(this, new Return_S_count_By_DateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_RFSPN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_RFSPN(string mbsn, ref string errMsg) {
            object[] results = this.Invoke("get_RFSPN", new object[] {
                        mbsn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get_RFSPNAsync(string mbsn, string errMsg) {
            this.get_RFSPNAsync(mbsn, errMsg, null);
        }
        
        /// <remarks/>
        public void get_RFSPNAsync(string mbsn, string errMsg, object userState) {
            if ((this.get_RFSPNOperationCompleted == null)) {
                this.get_RFSPNOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_RFSPNOperationCompleted);
            }
            this.InvokeAsync("get_RFSPN", new object[] {
                        mbsn,
                        errMsg}, this.get_RFSPNOperationCompleted, userState);
        }
        
        private void Onget_RFSPNOperationCompleted(object arg) {
            if ((this.get_RFSPNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_RFSPNCompleted(this, new get_RFSPNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEMSStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getEMSStatus(string EquipId, ref string errMsg) {
            object[] results = this.Invoke("getEMSStatus", new object[] {
                        EquipId,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getEMSStatusAsync(string EquipId, string errMsg) {
            this.getEMSStatusAsync(EquipId, errMsg, null);
        }
        
        /// <remarks/>
        public void getEMSStatusAsync(string EquipId, string errMsg, object userState) {
            if ((this.getEMSStatusOperationCompleted == null)) {
                this.getEMSStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEMSStatusOperationCompleted);
            }
            this.InvokeAsync("getEMSStatus", new object[] {
                        EquipId,
                        errMsg}, this.getEMSStatusOperationCompleted, userState);
        }
        
        private void OngetEMSStatusOperationCompleted(object arg) {
            if ((this.getEMSStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEMSStatusCompleted(this, new getEMSStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_ExcepInfo_BYLine", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GET_ExcepInfo_BYLine(string[] Arr, ref string errMsg) {
            object[] results = this.Invoke("GET_ExcepInfo_BYLine", new object[] {
                        Arr,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GET_ExcepInfo_BYLineAsync(string[] Arr, string errMsg) {
            this.GET_ExcepInfo_BYLineAsync(Arr, errMsg, null);
        }
        
        /// <remarks/>
        public void GET_ExcepInfo_BYLineAsync(string[] Arr, string errMsg, object userState) {
            if ((this.GET_ExcepInfo_BYLineOperationCompleted == null)) {
                this.GET_ExcepInfo_BYLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_ExcepInfo_BYLineOperationCompleted);
            }
            this.InvokeAsync("GET_ExcepInfo_BYLine", new object[] {
                        Arr,
                        errMsg}, this.GET_ExcepInfo_BYLineOperationCompleted, userState);
        }
        
        private void OnGET_ExcepInfo_BYLineOperationCompleted(object arg) {
            if ((this.GET_ExcepInfo_BYLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_ExcepInfo_BYLineCompleted(this, new GET_ExcepInfo_BYLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBoxSSNbyCartonID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBoxSSNbyCartonID(string CARTON_ID, ref string errMsg) {
            object[] results = this.Invoke("GetBoxSSNbyCartonID", new object[] {
                        CARTON_ID,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxSSNbyCartonIDAsync(string CARTON_ID, string errMsg) {
            this.GetBoxSSNbyCartonIDAsync(CARTON_ID, errMsg, null);
        }
        
        /// <remarks/>
        public void GetBoxSSNbyCartonIDAsync(string CARTON_ID, string errMsg, object userState) {
            if ((this.GetBoxSSNbyCartonIDOperationCompleted == null)) {
                this.GetBoxSSNbyCartonIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxSSNbyCartonIDOperationCompleted);
            }
            this.InvokeAsync("GetBoxSSNbyCartonID", new object[] {
                        CARTON_ID,
                        errMsg}, this.GetBoxSSNbyCartonIDOperationCompleted, userState);
        }
        
        private void OnGetBoxSSNbyCartonIDOperationCompleted(object arg) {
            if ((this.GetBoxSSNbyCartonIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxSSNbyCartonIDCompleted(this, new GetBoxSSNbyCartonIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLeadersMailByEmp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLeadersMailByEmp(string strEmpNO) {
            object[] results = this.Invoke("GetLeadersMailByEmp", new object[] {
                        strEmpNO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLeadersMailByEmpAsync(string strEmpNO) {
            this.GetLeadersMailByEmpAsync(strEmpNO, null);
        }
        
        /// <remarks/>
        public void GetLeadersMailByEmpAsync(string strEmpNO, object userState) {
            if ((this.GetLeadersMailByEmpOperationCompleted == null)) {
                this.GetLeadersMailByEmpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLeadersMailByEmpOperationCompleted);
            }
            this.InvokeAsync("GetLeadersMailByEmp", new object[] {
                        strEmpNO}, this.GetLeadersMailByEmpOperationCompleted, userState);
        }
        
        private void OnGetLeadersMailByEmpOperationCompleted(object arg) {
            if ((this.GetLeadersMailByEmpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLeadersMailByEmpCompleted(this, new GetLeadersMailByEmpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPlmModelstatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getPlmModelstatus(string sModelNo) {
            object[] results = this.Invoke("getPlmModelstatus", new object[] {
                        sModelNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPlmModelstatusAsync(string sModelNo) {
            this.getPlmModelstatusAsync(sModelNo, null);
        }
        
        /// <remarks/>
        public void getPlmModelstatusAsync(string sModelNo, object userState) {
            if ((this.getPlmModelstatusOperationCompleted == null)) {
                this.getPlmModelstatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPlmModelstatusOperationCompleted);
            }
            this.InvokeAsync("getPlmModelstatus", new object[] {
                        sModelNo}, this.getPlmModelstatusOperationCompleted, userState);
        }
        
        private void OngetPlmModelstatusOperationCompleted(object arg) {
            if ((this.getPlmModelstatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPlmModelstatusCompleted(this, new getPlmModelstatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPlmECNInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseInfo GetPlmECNInfo(string ECNNo) {
            object[] results = this.Invoke("GetPlmECNInfo", new object[] {
                        ECNNo});
            return ((ResponseInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlmECNInfoAsync(string ECNNo) {
            this.GetPlmECNInfoAsync(ECNNo, null);
        }
        
        /// <remarks/>
        public void GetPlmECNInfoAsync(string ECNNo, object userState) {
            if ((this.GetPlmECNInfoOperationCompleted == null)) {
                this.GetPlmECNInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlmECNInfoOperationCompleted);
            }
            this.InvokeAsync("GetPlmECNInfo", new object[] {
                        ECNNo}, this.GetPlmECNInfoOperationCompleted, userState);
        }
        
        private void OnGetPlmECNInfoOperationCompleted(object arg) {
            if ((this.GetPlmECNInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlmECNInfoCompleted(this, new GetPlmECNInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPlmECRInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResponseInfo getPlmECRInfo(string ECRNo) {
            object[] results = this.Invoke("getPlmECRInfo", new object[] {
                        ECRNo});
            return ((ResponseInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getPlmECRInfoAsync(string ECRNo) {
            this.getPlmECRInfoAsync(ECRNo, null);
        }
        
        /// <remarks/>
        public void getPlmECRInfoAsync(string ECRNo, object userState) {
            if ((this.getPlmECRInfoOperationCompleted == null)) {
                this.getPlmECRInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPlmECRInfoOperationCompleted);
            }
            this.InvokeAsync("getPlmECRInfo", new object[] {
                        ECRNo}, this.getPlmECRInfoOperationCompleted, userState);
        }
        
        private void OngetPlmECRInfoOperationCompleted(object arg) {
            if ((this.getPlmECRInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPlmECRInfoCompleted(this, new getPlmECRInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTPIList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTPIList(string sTpino) {
            object[] results = this.Invoke("GetTPIList", new object[] {
                        sTpino});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTPIListAsync(string sTpino) {
            this.GetTPIListAsync(sTpino, null);
        }
        
        /// <remarks/>
        public void GetTPIListAsync(string sTpino, object userState) {
            if ((this.GetTPIListOperationCompleted == null)) {
                this.GetTPIListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTPIListOperationCompleted);
            }
            this.InvokeAsync("GetTPIList", new object[] {
                        sTpino}, this.GetTPIListOperationCompleted, userState);
        }
        
        private void OnGetTPIListOperationCompleted(object arg) {
            if ((this.GetTPIListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTPIListCompleted(this, new GetTPIListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmpFromPLM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetEmpFromPLM(string sS2EMPLID) {
            object[] results = this.Invoke("GetEmpFromPLM", new object[] {
                        sS2EMPLID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmpFromPLMAsync(string sS2EMPLID) {
            this.GetEmpFromPLMAsync(sS2EMPLID, null);
        }
        
        /// <remarks/>
        public void GetEmpFromPLMAsync(string sS2EMPLID, object userState) {
            if ((this.GetEmpFromPLMOperationCompleted == null)) {
                this.GetEmpFromPLMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmpFromPLMOperationCompleted);
            }
            this.InvokeAsync("GetEmpFromPLM", new object[] {
                        sS2EMPLID}, this.GetEmpFromPLMOperationCompleted, userState);
        }
        
        private void OnGetEmpFromPLMOperationCompleted(object arg) {
            if ((this.GetEmpFromPLMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmpFromPLMCompleted(this, new GetEmpFromPLMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCFDVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCFDVersion(string sItem) {
            object[] results = this.Invoke("GetCFDVersion", new object[] {
                        sItem});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCFDVersionAsync(string sItem) {
            this.GetCFDVersionAsync(sItem, null);
        }
        
        /// <remarks/>
        public void GetCFDVersionAsync(string sItem, object userState) {
            if ((this.GetCFDVersionOperationCompleted == null)) {
                this.GetCFDVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCFDVersionOperationCompleted);
            }
            this.InvokeAsync("GetCFDVersion", new object[] {
                        sItem}, this.GetCFDVersionOperationCompleted, userState);
        }
        
        private void OnGetCFDVersionOperationCompleted(object arg) {
            if ((this.GetCFDVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCFDVersionCompleted(this, new GetCFDVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_SPN_QA_LOCK_ATS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool get_SPN_QA_LOCK_ATS(string CSN, string IP, ref string errMsg) {
            object[] results = this.Invoke("get_SPN_QA_LOCK_ATS", new object[] {
                        CSN,
                        IP,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void get_SPN_QA_LOCK_ATSAsync(string CSN, string IP, string errMsg) {
            this.get_SPN_QA_LOCK_ATSAsync(CSN, IP, errMsg, null);
        }
        
        /// <remarks/>
        public void get_SPN_QA_LOCK_ATSAsync(string CSN, string IP, string errMsg, object userState) {
            if ((this.get_SPN_QA_LOCK_ATSOperationCompleted == null)) {
                this.get_SPN_QA_LOCK_ATSOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_SPN_QA_LOCK_ATSOperationCompleted);
            }
            this.InvokeAsync("get_SPN_QA_LOCK_ATS", new object[] {
                        CSN,
                        IP,
                        errMsg}, this.get_SPN_QA_LOCK_ATSOperationCompleted, userState);
        }
        
        private void Onget_SPN_QA_LOCK_ATSOperationCompleted(object arg) {
            if ((this.get_SPN_QA_LOCK_ATSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_SPN_QA_LOCK_ATSCompleted(this, new get_SPN_QA_LOCK_ATSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getModelNamebyCSN_2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getModelNamebyCSN_2(string CSN, ref string errMsg) {
            object[] results = this.Invoke("getModelNamebyCSN_2", new object[] {
                        CSN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getModelNamebyCSN_2Async(string CSN, string errMsg) {
            this.getModelNamebyCSN_2Async(CSN, errMsg, null);
        }
        
        /// <remarks/>
        public void getModelNamebyCSN_2Async(string CSN, string errMsg, object userState) {
            if ((this.getModelNamebyCSN_2OperationCompleted == null)) {
                this.getModelNamebyCSN_2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetModelNamebyCSN_2OperationCompleted);
            }
            this.InvokeAsync("getModelNamebyCSN_2", new object[] {
                        CSN,
                        errMsg}, this.getModelNamebyCSN_2OperationCompleted, userState);
        }
        
        private void OngetModelNamebyCSN_2OperationCompleted(object arg) {
            if ((this.getModelNamebyCSN_2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getModelNamebyCSN_2Completed(this, new getModelNamebyCSN_2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckSnList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CheckSnList(string MO, string CPN, ref string errMsg) {
            object[] results = this.Invoke("CheckSnList", new object[] {
                        MO,
                        CPN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSnListAsync(string MO, string CPN, string errMsg) {
            this.CheckSnListAsync(MO, CPN, errMsg, null);
        }
        
        /// <remarks/>
        public void CheckSnListAsync(string MO, string CPN, string errMsg, object userState) {
            if ((this.CheckSnListOperationCompleted == null)) {
                this.CheckSnListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSnListOperationCompleted);
            }
            this.InvokeAsync("CheckSnList", new object[] {
                        MO,
                        CPN,
                        errMsg}, this.CheckSnListOperationCompleted, userState);
        }
        
        private void OnCheckSnListOperationCompleted(object arg) {
            if ((this.CheckSnListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSnListCompleted(this, new CheckSnListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getProdSSN_ByCSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getProdSSN_ByCSN(string CSN, ref string errMsg) {
            object[] results = this.Invoke("getProdSSN_ByCSN", new object[] {
                        CSN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getProdSSN_ByCSNAsync(string CSN, string errMsg) {
            this.getProdSSN_ByCSNAsync(CSN, errMsg, null);
        }
        
        /// <remarks/>
        public void getProdSSN_ByCSNAsync(string CSN, string errMsg, object userState) {
            if ((this.getProdSSN_ByCSNOperationCompleted == null)) {
                this.getProdSSN_ByCSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProdSSN_ByCSNOperationCompleted);
            }
            this.InvokeAsync("getProdSSN_ByCSN", new object[] {
                        CSN,
                        errMsg}, this.getProdSSN_ByCSNOperationCompleted, userState);
        }
        
        private void OngetProdSSN_ByCSNOperationCompleted(object arg) {
            if ((this.getProdSSN_ByCSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProdSSN_ByCSNCompleted(this, new getProdSSN_ByCSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get15RowsData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get15RowsData(string QUALIFIER, string VALUE, ref string errMsg) {
            object[] results = this.Invoke("get15RowsData", new object[] {
                        QUALIFIER,
                        VALUE,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get15RowsDataAsync(string QUALIFIER, string VALUE, string errMsg) {
            this.get15RowsDataAsync(QUALIFIER, VALUE, errMsg, null);
        }
        
        /// <remarks/>
        public void get15RowsDataAsync(string QUALIFIER, string VALUE, string errMsg, object userState) {
            if ((this.get15RowsDataOperationCompleted == null)) {
                this.get15RowsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget15RowsDataOperationCompleted);
            }
            this.InvokeAsync("get15RowsData", new object[] {
                        QUALIFIER,
                        VALUE,
                        errMsg}, this.get15RowsDataOperationCompleted, userState);
        }
        
        private void Onget15RowsDataOperationCompleted(object arg) {
            if ((this.get15RowsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get15RowsDataCompleted(this, new get15RowsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertValue(string ZONE, string TEM, string humidity, string test_date, ref string errMsg) {
            object[] results = this.Invoke("InsertValue", new object[] {
                        ZONE,
                        TEM,
                        humidity,
                        test_date,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertValueAsync(string ZONE, string TEM, string humidity, string test_date, string errMsg) {
            this.InsertValueAsync(ZONE, TEM, humidity, test_date, errMsg, null);
        }
        
        /// <remarks/>
        public void InsertValueAsync(string ZONE, string TEM, string humidity, string test_date, string errMsg, object userState) {
            if ((this.InsertValueOperationCompleted == null)) {
                this.InsertValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertValueOperationCompleted);
            }
            this.InvokeAsync("InsertValue", new object[] {
                        ZONE,
                        TEM,
                        humidity,
                        test_date,
                        errMsg}, this.InsertValueOperationCompleted, userState);
        }
        
        private void OnInsertValueOperationCompleted(object arg) {
            if ((this.InsertValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertValueCompleted(this, new InsertValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_EMS_FIXTURE_APPLY_INFO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GET_EMS_FIXTURE_APPLY_INFO(string APPLY_ID, ref string errMsg) {
            object[] results = this.Invoke("GET_EMS_FIXTURE_APPLY_INFO", new object[] {
                        APPLY_ID,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GET_EMS_FIXTURE_APPLY_INFOAsync(string APPLY_ID, string errMsg) {
            this.GET_EMS_FIXTURE_APPLY_INFOAsync(APPLY_ID, errMsg, null);
        }
        
        /// <remarks/>
        public void GET_EMS_FIXTURE_APPLY_INFOAsync(string APPLY_ID, string errMsg, object userState) {
            if ((this.GET_EMS_FIXTURE_APPLY_INFOOperationCompleted == null)) {
                this.GET_EMS_FIXTURE_APPLY_INFOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_EMS_FIXTURE_APPLY_INFOOperationCompleted);
            }
            this.InvokeAsync("GET_EMS_FIXTURE_APPLY_INFO", new object[] {
                        APPLY_ID,
                        errMsg}, this.GET_EMS_FIXTURE_APPLY_INFOOperationCompleted, userState);
        }
        
        private void OnGET_EMS_FIXTURE_APPLY_INFOOperationCompleted(object arg) {
            if ((this.GET_EMS_FIXTURE_APPLY_INFOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_EMS_FIXTURE_APPLY_INFOCompleted(this, new GET_EMS_FIXTURE_APPLY_INFOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_EMS_FIXTURE_APPLY_BUY_INFO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GET_EMS_FIXTURE_APPLY_BUY_INFO(string APPLY_ID, ref string errMsg) {
            object[] results = this.Invoke("GET_EMS_FIXTURE_APPLY_BUY_INFO", new object[] {
                        APPLY_ID,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GET_EMS_FIXTURE_APPLY_BUY_INFOAsync(string APPLY_ID, string errMsg) {
            this.GET_EMS_FIXTURE_APPLY_BUY_INFOAsync(APPLY_ID, errMsg, null);
        }
        
        /// <remarks/>
        public void GET_EMS_FIXTURE_APPLY_BUY_INFOAsync(string APPLY_ID, string errMsg, object userState) {
            if ((this.GET_EMS_FIXTURE_APPLY_BUY_INFOOperationCompleted == null)) {
                this.GET_EMS_FIXTURE_APPLY_BUY_INFOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_EMS_FIXTURE_APPLY_BUY_INFOOperationCompleted);
            }
            this.InvokeAsync("GET_EMS_FIXTURE_APPLY_BUY_INFO", new object[] {
                        APPLY_ID,
                        errMsg}, this.GET_EMS_FIXTURE_APPLY_BUY_INFOOperationCompleted, userState);
        }
        
        private void OnGET_EMS_FIXTURE_APPLY_BUY_INFOOperationCompleted(object arg) {
            if ((this.GET_EMS_FIXTURE_APPLY_BUY_INFOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_EMS_FIXTURE_APPLY_BUY_INFOCompleted(this, new GET_EMS_FIXTURE_APPLY_BUY_INFOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_EMS_Apply", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GET_EMS_Apply(string APPLY_ID, ref string errMsg) {
            object[] results = this.Invoke("GET_EMS_Apply", new object[] {
                        APPLY_ID,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GET_EMS_ApplyAsync(string APPLY_ID, string errMsg) {
            this.GET_EMS_ApplyAsync(APPLY_ID, errMsg, null);
        }
        
        /// <remarks/>
        public void GET_EMS_ApplyAsync(string APPLY_ID, string errMsg, object userState) {
            if ((this.GET_EMS_ApplyOperationCompleted == null)) {
                this.GET_EMS_ApplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_EMS_ApplyOperationCompleted);
            }
            this.InvokeAsync("GET_EMS_Apply", new object[] {
                        APPLY_ID,
                        errMsg}, this.GET_EMS_ApplyOperationCompleted, userState);
        }
        
        private void OnGET_EMS_ApplyOperationCompleted(object arg) {
            if ((this.GET_EMS_ApplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_EMS_ApplyCompleted(this, new GET_EMS_ApplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_EMS_MATERIAL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GET_EMS_MATERIAL(string APPLY_ID, string sStatus, string sType, ref string errMsg) {
            object[] results = this.Invoke("GET_EMS_MATERIAL", new object[] {
                        APPLY_ID,
                        sStatus,
                        sType,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GET_EMS_MATERIALAsync(string APPLY_ID, string sStatus, string sType, string errMsg) {
            this.GET_EMS_MATERIALAsync(APPLY_ID, sStatus, sType, errMsg, null);
        }
        
        /// <remarks/>
        public void GET_EMS_MATERIALAsync(string APPLY_ID, string sStatus, string sType, string errMsg, object userState) {
            if ((this.GET_EMS_MATERIALOperationCompleted == null)) {
                this.GET_EMS_MATERIALOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_EMS_MATERIALOperationCompleted);
            }
            this.InvokeAsync("GET_EMS_MATERIAL", new object[] {
                        APPLY_ID,
                        sStatus,
                        sType,
                        errMsg}, this.GET_EMS_MATERIALOperationCompleted, userState);
        }
        
        private void OnGET_EMS_MATERIALOperationCompleted(object arg) {
            if ((this.GET_EMS_MATERIALCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_EMS_MATERIALCompleted(this, new GET_EMS_MATERIALCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UPDATE_PR_BY_APPLY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UPDATE_PR_BY_APPLY(System.Data.DataSet ds, ref string errMsg) {
            object[] results = this.Invoke("UPDATE_PR_BY_APPLY", new object[] {
                        ds,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UPDATE_PR_BY_APPLYAsync(System.Data.DataSet ds, string errMsg) {
            this.UPDATE_PR_BY_APPLYAsync(ds, errMsg, null);
        }
        
        /// <remarks/>
        public void UPDATE_PR_BY_APPLYAsync(System.Data.DataSet ds, string errMsg, object userState) {
            if ((this.UPDATE_PR_BY_APPLYOperationCompleted == null)) {
                this.UPDATE_PR_BY_APPLYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUPDATE_PR_BY_APPLYOperationCompleted);
            }
            this.InvokeAsync("UPDATE_PR_BY_APPLY", new object[] {
                        ds,
                        errMsg}, this.UPDATE_PR_BY_APPLYOperationCompleted, userState);
        }
        
        private void OnUPDATE_PR_BY_APPLYOperationCompleted(object arg) {
            if ((this.UPDATE_PR_BY_APPLYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UPDATE_PR_BY_APPLYCompleted(this, new UPDATE_PR_BY_APPLYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_FIXTURE_APPLY_PATH", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GET_FIXTURE_APPLY_PATH(string APPLY_ID, ref string errMsg) {
            object[] results = this.Invoke("GET_FIXTURE_APPLY_PATH", new object[] {
                        APPLY_ID,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GET_FIXTURE_APPLY_PATHAsync(string APPLY_ID, string errMsg) {
            this.GET_FIXTURE_APPLY_PATHAsync(APPLY_ID, errMsg, null);
        }
        
        /// <remarks/>
        public void GET_FIXTURE_APPLY_PATHAsync(string APPLY_ID, string errMsg, object userState) {
            if ((this.GET_FIXTURE_APPLY_PATHOperationCompleted == null)) {
                this.GET_FIXTURE_APPLY_PATHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_FIXTURE_APPLY_PATHOperationCompleted);
            }
            this.InvokeAsync("GET_FIXTURE_APPLY_PATH", new object[] {
                        APPLY_ID,
                        errMsg}, this.GET_FIXTURE_APPLY_PATHOperationCompleted, userState);
        }
        
        private void OnGET_FIXTURE_APPLY_PATHOperationCompleted(object arg) {
            if ((this.GET_FIXTURE_APPLY_PATHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_FIXTURE_APPLY_PATHCompleted(this, new GET_FIXTURE_APPLY_PATHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insert_Offline_Test_CN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool insert_Offline_Test_CN(string PN, string SN, string TEST_RESULT, string UserID, ref string errMsg) {
            object[] results = this.Invoke("insert_Offline_Test_CN", new object[] {
                        PN,
                        SN,
                        TEST_RESULT,
                        UserID,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insert_Offline_Test_CNAsync(string PN, string SN, string TEST_RESULT, string UserID, string errMsg) {
            this.insert_Offline_Test_CNAsync(PN, SN, TEST_RESULT, UserID, errMsg, null);
        }
        
        /// <remarks/>
        public void insert_Offline_Test_CNAsync(string PN, string SN, string TEST_RESULT, string UserID, string errMsg, object userState) {
            if ((this.insert_Offline_Test_CNOperationCompleted == null)) {
                this.insert_Offline_Test_CNOperationCompleted = new System.Threading.SendOrPostCallback(this.Oninsert_Offline_Test_CNOperationCompleted);
            }
            this.InvokeAsync("insert_Offline_Test_CN", new object[] {
                        PN,
                        SN,
                        TEST_RESULT,
                        UserID,
                        errMsg}, this.insert_Offline_Test_CNOperationCompleted, userState);
        }
        
        private void Oninsert_Offline_Test_CNOperationCompleted(object arg) {
            if ((this.insert_Offline_Test_CNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insert_Offline_Test_CNCompleted(this, new insert_Offline_Test_CNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_Offline_Test_CN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_Offline_Test_CN(string PN, string SN, ref string errMsg) {
            object[] results = this.Invoke("get_Offline_Test_CN", new object[] {
                        PN,
                        SN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get_Offline_Test_CNAsync(string PN, string SN, string errMsg) {
            this.get_Offline_Test_CNAsync(PN, SN, errMsg, null);
        }
        
        /// <remarks/>
        public void get_Offline_Test_CNAsync(string PN, string SN, string errMsg, object userState) {
            if ((this.get_Offline_Test_CNOperationCompleted == null)) {
                this.get_Offline_Test_CNOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_Offline_Test_CNOperationCompleted);
            }
            this.InvokeAsync("get_Offline_Test_CN", new object[] {
                        PN,
                        SN,
                        errMsg}, this.get_Offline_Test_CNOperationCompleted, userState);
        }
        
        private void Onget_Offline_Test_CNOperationCompleted(object arg) {
            if ((this.get_Offline_Test_CNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_Offline_Test_CNCompleted(this, new get_Offline_Test_CNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_Gtin_By_PN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_Gtin_By_PN(string PN, ref string errMsg) {
            object[] results = this.Invoke("get_Gtin_By_PN", new object[] {
                        PN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get_Gtin_By_PNAsync(string PN, string errMsg) {
            this.get_Gtin_By_PNAsync(PN, errMsg, null);
        }
        
        /// <remarks/>
        public void get_Gtin_By_PNAsync(string PN, string errMsg, object userState) {
            if ((this.get_Gtin_By_PNOperationCompleted == null)) {
                this.get_Gtin_By_PNOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_Gtin_By_PNOperationCompleted);
            }
            this.InvokeAsync("get_Gtin_By_PN", new object[] {
                        PN,
                        errMsg}, this.get_Gtin_By_PNOperationCompleted, userState);
        }
        
        private void Onget_Gtin_By_PNOperationCompleted(object arg) {
            if ((this.get_Gtin_By_PNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_Gtin_By_PNCompleted(this, new get_Gtin_By_PNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUPC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CheckUPC(string csn, ref string errMsg) {
            object[] results = this.Invoke("CheckUPC", new object[] {
                        csn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUPCAsync(string csn, string errMsg) {
            this.CheckUPCAsync(csn, errMsg, null);
        }
        
        /// <remarks/>
        public void CheckUPCAsync(string csn, string errMsg, object userState) {
            if ((this.CheckUPCOperationCompleted == null)) {
                this.CheckUPCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUPCOperationCompleted);
            }
            this.InvokeAsync("CheckUPC", new object[] {
                        csn,
                        errMsg}, this.CheckUPCOperationCompleted, userState);
        }
        
        private void OnCheckUPCOperationCompleted(object arg) {
            if ((this.CheckUPCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUPCCompleted(this, new CheckUPCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_45PN_By_CSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_45PN_By_CSN(string CSN, ref string errMsg) {
            object[] results = this.Invoke("get_45PN_By_CSN", new object[] {
                        CSN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get_45PN_By_CSNAsync(string CSN, string errMsg) {
            this.get_45PN_By_CSNAsync(CSN, errMsg, null);
        }
        
        /// <remarks/>
        public void get_45PN_By_CSNAsync(string CSN, string errMsg, object userState) {
            if ((this.get_45PN_By_CSNOperationCompleted == null)) {
                this.get_45PN_By_CSNOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_45PN_By_CSNOperationCompleted);
            }
            this.InvokeAsync("get_45PN_By_CSN", new object[] {
                        CSN,
                        errMsg}, this.get_45PN_By_CSNOperationCompleted, userState);
        }
        
        private void Onget_45PN_By_CSNOperationCompleted(object arg) {
            if ((this.get_45PN_By_CSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_45PN_By_CSNCompleted(this, new get_45PN_By_CSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReTestControl_GetTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReTestControl_GetTime(string Vs_CheckPsn, ref string errMsg) {
            object[] results = this.Invoke("ReTestControl_GetTime", new object[] {
                        Vs_CheckPsn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReTestControl_GetTimeAsync(string Vs_CheckPsn, string errMsg) {
            this.ReTestControl_GetTimeAsync(Vs_CheckPsn, errMsg, null);
        }
        
        /// <remarks/>
        public void ReTestControl_GetTimeAsync(string Vs_CheckPsn, string errMsg, object userState) {
            if ((this.ReTestControl_GetTimeOperationCompleted == null)) {
                this.ReTestControl_GetTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReTestControl_GetTimeOperationCompleted);
            }
            this.InvokeAsync("ReTestControl_GetTime", new object[] {
                        Vs_CheckPsn,
                        errMsg}, this.ReTestControl_GetTimeOperationCompleted, userState);
        }
        
        private void OnReTestControl_GetTimeOperationCompleted(object arg) {
            if ((this.ReTestControl_GetTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReTestControl_GetTimeCompleted(this, new ReTestControl_GetTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/hold_SN_By_ATS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool hold_SN_By_ATS(string holdType, string stage, string holdReason, string HOLD_CRITERIA, string ssn, ref string errMsg) {
            object[] results = this.Invoke("hold_SN_By_ATS", new object[] {
                        holdType,
                        stage,
                        holdReason,
                        HOLD_CRITERIA,
                        ssn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void hold_SN_By_ATSAsync(string holdType, string stage, string holdReason, string HOLD_CRITERIA, string ssn, string errMsg) {
            this.hold_SN_By_ATSAsync(holdType, stage, holdReason, HOLD_CRITERIA, ssn, errMsg, null);
        }
        
        /// <remarks/>
        public void hold_SN_By_ATSAsync(string holdType, string stage, string holdReason, string HOLD_CRITERIA, string ssn, string errMsg, object userState) {
            if ((this.hold_SN_By_ATSOperationCompleted == null)) {
                this.hold_SN_By_ATSOperationCompleted = new System.Threading.SendOrPostCallback(this.Onhold_SN_By_ATSOperationCompleted);
            }
            this.InvokeAsync("hold_SN_By_ATS", new object[] {
                        holdType,
                        stage,
                        holdReason,
                        HOLD_CRITERIA,
                        ssn,
                        errMsg}, this.hold_SN_By_ATSOperationCompleted, userState);
        }
        
        private void Onhold_SN_By_ATSOperationCompleted(object arg) {
            if ((this.hold_SN_By_ATSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hold_SN_By_ATSCompleted(this, new hold_SN_By_ATSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFLEXFIELD_BySSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getFLEXFIELD_BySSN(string CSN, string qualifier, ref string errMsg) {
            object[] results = this.Invoke("getFLEXFIELD_BySSN", new object[] {
                        CSN,
                        qualifier,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getFLEXFIELD_BySSNAsync(string CSN, string qualifier, string errMsg) {
            this.getFLEXFIELD_BySSNAsync(CSN, qualifier, errMsg, null);
        }
        
        /// <remarks/>
        public void getFLEXFIELD_BySSNAsync(string CSN, string qualifier, string errMsg, object userState) {
            if ((this.getFLEXFIELD_BySSNOperationCompleted == null)) {
                this.getFLEXFIELD_BySSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFLEXFIELD_BySSNOperationCompleted);
            }
            this.InvokeAsync("getFLEXFIELD_BySSN", new object[] {
                        CSN,
                        qualifier,
                        errMsg}, this.getFLEXFIELD_BySSNOperationCompleted, userState);
        }
        
        private void OngetFLEXFIELD_BySSNOperationCompleted(object arg) {
            if ((this.getFLEXFIELD_BySSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFLEXFIELD_BySSNCompleted(this, new getFLEXFIELD_BySSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkAccompanyStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet checkAccompanyStatus(string accompanyID, string AutoRead, ref string ErrMsg) {
            object[] results = this.Invoke("checkAccompanyStatus", new object[] {
                        accompanyID,
                        AutoRead,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void checkAccompanyStatusAsync(string accompanyID, string AutoRead, string ErrMsg) {
            this.checkAccompanyStatusAsync(accompanyID, AutoRead, ErrMsg, null);
        }
        
        /// <remarks/>
        public void checkAccompanyStatusAsync(string accompanyID, string AutoRead, string ErrMsg, object userState) {
            if ((this.checkAccompanyStatusOperationCompleted == null)) {
                this.checkAccompanyStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckAccompanyStatusOperationCompleted);
            }
            this.InvokeAsync("checkAccompanyStatus", new object[] {
                        accompanyID,
                        AutoRead,
                        ErrMsg}, this.checkAccompanyStatusOperationCompleted, userState);
        }
        
        private void OncheckAccompanyStatusOperationCompleted(object arg) {
            if ((this.checkAccompanyStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkAccompanyStatusCompleted(this, new checkAccompanyStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setAccompanyStatusLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setAccompanyStatusLog(string accompanyID, string prodSN, string fixtureId, string status, string autoRead, string PN, string IP, ref string errMsg) {
            object[] results = this.Invoke("setAccompanyStatusLog", new object[] {
                        accompanyID,
                        prodSN,
                        fixtureId,
                        status,
                        autoRead,
                        PN,
                        IP,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setAccompanyStatusLogAsync(string accompanyID, string prodSN, string fixtureId, string status, string autoRead, string PN, string IP, string errMsg) {
            this.setAccompanyStatusLogAsync(accompanyID, prodSN, fixtureId, status, autoRead, PN, IP, errMsg, null);
        }
        
        /// <remarks/>
        public void setAccompanyStatusLogAsync(string accompanyID, string prodSN, string fixtureId, string status, string autoRead, string PN, string IP, string errMsg, object userState) {
            if ((this.setAccompanyStatusLogOperationCompleted == null)) {
                this.setAccompanyStatusLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAccompanyStatusLogOperationCompleted);
            }
            this.InvokeAsync("setAccompanyStatusLog", new object[] {
                        accompanyID,
                        prodSN,
                        fixtureId,
                        status,
                        autoRead,
                        PN,
                        IP,
                        errMsg}, this.setAccompanyStatusLogOperationCompleted, userState);
        }
        
        private void OnsetAccompanyStatusLogOperationCompleted(object arg) {
            if ((this.setAccompanyStatusLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setAccompanyStatusLogCompleted(this, new setAccompanyStatusLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSnRfIdByPalletId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSnRfIdByPalletId(string PalletId, string Sn_rule, string CPN, ref string errMsg) {
            object[] results = this.Invoke("GetSnRfIdByPalletId", new object[] {
                        PalletId,
                        Sn_rule,
                        CPN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSnRfIdByPalletIdAsync(string PalletId, string Sn_rule, string CPN, string errMsg) {
            this.GetSnRfIdByPalletIdAsync(PalletId, Sn_rule, CPN, errMsg, null);
        }
        
        /// <remarks/>
        public void GetSnRfIdByPalletIdAsync(string PalletId, string Sn_rule, string CPN, string errMsg, object userState) {
            if ((this.GetSnRfIdByPalletIdOperationCompleted == null)) {
                this.GetSnRfIdByPalletIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSnRfIdByPalletIdOperationCompleted);
            }
            this.InvokeAsync("GetSnRfIdByPalletId", new object[] {
                        PalletId,
                        Sn_rule,
                        CPN,
                        errMsg}, this.GetSnRfIdByPalletIdOperationCompleted, userState);
        }
        
        private void OnGetSnRfIdByPalletIdOperationCompleted(object arg) {
            if ((this.GetSnRfIdByPalletIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSnRfIdByPalletIdCompleted(this, new GetSnRfIdByPalletIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/set_Equipment_QUERY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool set_Equipment_QUERY(string MODEL_NAME, string PN, string MODEL_TYPE, string STAGE, string STATION, string SN, string IP, string CREATE_BY, string LINE, ref string errMsg) {
            object[] results = this.Invoke("set_Equipment_QUERY", new object[] {
                        MODEL_NAME,
                        PN,
                        MODEL_TYPE,
                        STAGE,
                        STATION,
                        SN,
                        IP,
                        CREATE_BY,
                        LINE,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void set_Equipment_QUERYAsync(string MODEL_NAME, string PN, string MODEL_TYPE, string STAGE, string STATION, string SN, string IP, string CREATE_BY, string LINE, string errMsg) {
            this.set_Equipment_QUERYAsync(MODEL_NAME, PN, MODEL_TYPE, STAGE, STATION, SN, IP, CREATE_BY, LINE, errMsg, null);
        }
        
        /// <remarks/>
        public void set_Equipment_QUERYAsync(string MODEL_NAME, string PN, string MODEL_TYPE, string STAGE, string STATION, string SN, string IP, string CREATE_BY, string LINE, string errMsg, object userState) {
            if ((this.set_Equipment_QUERYOperationCompleted == null)) {
                this.set_Equipment_QUERYOperationCompleted = new System.Threading.SendOrPostCallback(this.Onset_Equipment_QUERYOperationCompleted);
            }
            this.InvokeAsync("set_Equipment_QUERY", new object[] {
                        MODEL_NAME,
                        PN,
                        MODEL_TYPE,
                        STAGE,
                        STATION,
                        SN,
                        IP,
                        CREATE_BY,
                        LINE,
                        errMsg}, this.set_Equipment_QUERYOperationCompleted, userState);
        }
        
        private void Onset_Equipment_QUERYOperationCompleted(object arg) {
            if ((this.set_Equipment_QUERYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.set_Equipment_QUERYCompleted(this, new set_Equipment_QUERYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReleaseRLCMeasure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ReleaseRLCMeasure(string RLCN, string IP, string Reason, string OP, ref string errMsg) {
            object[] results = this.Invoke("ReleaseRLCMeasure", new object[] {
                        RLCN,
                        IP,
                        Reason,
                        OP,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReleaseRLCMeasureAsync(string RLCN, string IP, string Reason, string OP, string errMsg) {
            this.ReleaseRLCMeasureAsync(RLCN, IP, Reason, OP, errMsg, null);
        }
        
        /// <remarks/>
        public void ReleaseRLCMeasureAsync(string RLCN, string IP, string Reason, string OP, string errMsg, object userState) {
            if ((this.ReleaseRLCMeasureOperationCompleted == null)) {
                this.ReleaseRLCMeasureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseRLCMeasureOperationCompleted);
            }
            this.InvokeAsync("ReleaseRLCMeasure", new object[] {
                        RLCN,
                        IP,
                        Reason,
                        OP,
                        errMsg}, this.ReleaseRLCMeasureOperationCompleted, userState);
        }
        
        private void OnReleaseRLCMeasureOperationCompleted(object arg) {
            if ((this.ReleaseRLCMeasureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseRLCMeasureCompleted(this, new ReleaseRLCMeasureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_OpdatByCarIDForATS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_OpdatByCarIDForATS(string CarID, ref string errMsg) {
            object[] results = this.Invoke("get_OpdatByCarIDForATS", new object[] {
                        CarID,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get_OpdatByCarIDForATSAsync(string CarID, string errMsg) {
            this.get_OpdatByCarIDForATSAsync(CarID, errMsg, null);
        }
        
        /// <remarks/>
        public void get_OpdatByCarIDForATSAsync(string CarID, string errMsg, object userState) {
            if ((this.get_OpdatByCarIDForATSOperationCompleted == null)) {
                this.get_OpdatByCarIDForATSOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_OpdatByCarIDForATSOperationCompleted);
            }
            this.InvokeAsync("get_OpdatByCarIDForATS", new object[] {
                        CarID,
                        errMsg}, this.get_OpdatByCarIDForATSOperationCompleted, userState);
        }
        
        private void Onget_OpdatByCarIDForATSOperationCompleted(object arg) {
            if ((this.get_OpdatByCarIDForATSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_OpdatByCarIDForATSCompleted(this, new get_OpdatByCarIDForATSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckRLCMeasure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckRLCMeasure(string RLCN, string KIND, string Result, string IP, ref string errMsg) {
            object[] results = this.Invoke("CheckRLCMeasure", new object[] {
                        RLCN,
                        KIND,
                        Result,
                        IP,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckRLCMeasureAsync(string RLCN, string KIND, string Result, string IP, string errMsg) {
            this.CheckRLCMeasureAsync(RLCN, KIND, Result, IP, errMsg, null);
        }
        
        /// <remarks/>
        public void CheckRLCMeasureAsync(string RLCN, string KIND, string Result, string IP, string errMsg, object userState) {
            if ((this.CheckRLCMeasureOperationCompleted == null)) {
                this.CheckRLCMeasureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRLCMeasureOperationCompleted);
            }
            this.InvokeAsync("CheckRLCMeasure", new object[] {
                        RLCN,
                        KIND,
                        Result,
                        IP,
                        errMsg}, this.CheckRLCMeasureOperationCompleted, userState);
        }
        
        private void OnCheckRLCMeasureOperationCompleted(object arg) {
            if ((this.CheckRLCMeasureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRLCMeasureCompleted(this, new CheckRLCMeasureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_MATER_BUY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GET_MATER_BUY(string SSN, ref string errMsg) {
            object[] results = this.Invoke("GET_MATER_BUY", new object[] {
                        SSN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GET_MATER_BUYAsync(string SSN, string errMsg) {
            this.GET_MATER_BUYAsync(SSN, errMsg, null);
        }
        
        /// <remarks/>
        public void GET_MATER_BUYAsync(string SSN, string errMsg, object userState) {
            if ((this.GET_MATER_BUYOperationCompleted == null)) {
                this.GET_MATER_BUYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_MATER_BUYOperationCompleted);
            }
            this.InvokeAsync("GET_MATER_BUY", new object[] {
                        SSN,
                        errMsg}, this.GET_MATER_BUYOperationCompleted, userState);
        }
        
        private void OnGET_MATER_BUYOperationCompleted(object arg) {
            if ((this.GET_MATER_BUYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_MATER_BUYCompleted(this, new GET_MATER_BUYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INSERT_MATER_BUY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool INSERT_MATER_BUY(System.Data.DataSet ds, ref string errMsg) {
            object[] results = this.Invoke("INSERT_MATER_BUY", new object[] {
                        ds,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void INSERT_MATER_BUYAsync(System.Data.DataSet ds, string errMsg) {
            this.INSERT_MATER_BUYAsync(ds, errMsg, null);
        }
        
        /// <remarks/>
        public void INSERT_MATER_BUYAsync(System.Data.DataSet ds, string errMsg, object userState) {
            if ((this.INSERT_MATER_BUYOperationCompleted == null)) {
                this.INSERT_MATER_BUYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINSERT_MATER_BUYOperationCompleted);
            }
            this.InvokeAsync("INSERT_MATER_BUY", new object[] {
                        ds,
                        errMsg}, this.INSERT_MATER_BUYOperationCompleted, userState);
        }
        
        private void OnINSERT_MATER_BUYOperationCompleted(object arg) {
            if ((this.INSERT_MATER_BUYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INSERT_MATER_BUYCompleted(this, new INSERT_MATER_BUYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UPDATE_MATER_BUY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UPDATE_MATER_BUY(string SSN, string SNAME, string SSPEC, string SPN, string SCOUNT, ref string STYPE, ref string SSTATUS, ref string errMsg) {
            object[] results = this.Invoke("UPDATE_MATER_BUY", new object[] {
                        SSN,
                        SNAME,
                        SSPEC,
                        SPN,
                        SCOUNT,
                        STYPE,
                        SSTATUS,
                        errMsg});
            STYPE = ((string)(results[1]));
            SSTATUS = ((string)(results[2]));
            errMsg = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UPDATE_MATER_BUYAsync(string SSN, string SNAME, string SSPEC, string SPN, string SCOUNT, string STYPE, string SSTATUS, string errMsg) {
            this.UPDATE_MATER_BUYAsync(SSN, SNAME, SSPEC, SPN, SCOUNT, STYPE, SSTATUS, errMsg, null);
        }
        
        /// <remarks/>
        public void UPDATE_MATER_BUYAsync(string SSN, string SNAME, string SSPEC, string SPN, string SCOUNT, string STYPE, string SSTATUS, string errMsg, object userState) {
            if ((this.UPDATE_MATER_BUYOperationCompleted == null)) {
                this.UPDATE_MATER_BUYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUPDATE_MATER_BUYOperationCompleted);
            }
            this.InvokeAsync("UPDATE_MATER_BUY", new object[] {
                        SSN,
                        SNAME,
                        SSPEC,
                        SPN,
                        SCOUNT,
                        STYPE,
                        SSTATUS,
                        errMsg}, this.UPDATE_MATER_BUYOperationCompleted, userState);
        }
        
        private void OnUPDATE_MATER_BUYOperationCompleted(object arg) {
            if ((this.UPDATE_MATER_BUYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UPDATE_MATER_BUYCompleted(this, new UPDATE_MATER_BUYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getipstage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getipstage(string ip, ref string errMsg) {
            object[] results = this.Invoke("getipstage", new object[] {
                        ip,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getipstageAsync(string ip, string errMsg) {
            this.getipstageAsync(ip, errMsg, null);
        }
        
        /// <remarks/>
        public void getipstageAsync(string ip, string errMsg, object userState) {
            if ((this.getipstageOperationCompleted == null)) {
                this.getipstageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetipstageOperationCompleted);
            }
            this.InvokeAsync("getipstage", new object[] {
                        ip,
                        errMsg}, this.getipstageOperationCompleted, userState);
        }
        
        private void OngetipstageOperationCompleted(object arg) {
            if ((this.getipstageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getipstageCompleted(this, new getipstageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCSN_by_ProdSSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCSN_by_ProdSSN(string ProdSSN, string CPN, ref string errMsg) {
            object[] results = this.Invoke("getCSN_by_ProdSSN", new object[] {
                        ProdSSN,
                        CPN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCSN_by_ProdSSNAsync(string ProdSSN, string CPN, string errMsg) {
            this.getCSN_by_ProdSSNAsync(ProdSSN, CPN, errMsg, null);
        }
        
        /// <remarks/>
        public void getCSN_by_ProdSSNAsync(string ProdSSN, string CPN, string errMsg, object userState) {
            if ((this.getCSN_by_ProdSSNOperationCompleted == null)) {
                this.getCSN_by_ProdSSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCSN_by_ProdSSNOperationCompleted);
            }
            this.InvokeAsync("getCSN_by_ProdSSN", new object[] {
                        ProdSSN,
                        CPN,
                        errMsg}, this.getCSN_by_ProdSSNOperationCompleted, userState);
        }
        
        private void OngetCSN_by_ProdSSNOperationCompleted(object arg) {
            if ((this.getCSN_by_ProdSSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCSN_by_ProdSSNCompleted(this, new getCSN_by_ProdSSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMOLineByMACSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getMOLineByMACSN(string CSN, ref string errMsg) {
            object[] results = this.Invoke("getMOLineByMACSN", new object[] {
                        CSN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMOLineByMACSNAsync(string CSN, string errMsg) {
            this.getMOLineByMACSNAsync(CSN, errMsg, null);
        }
        
        /// <remarks/>
        public void getMOLineByMACSNAsync(string CSN, string errMsg, object userState) {
            if ((this.getMOLineByMACSNOperationCompleted == null)) {
                this.getMOLineByMACSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMOLineByMACSNOperationCompleted);
            }
            this.InvokeAsync("getMOLineByMACSN", new object[] {
                        CSN,
                        errMsg}, this.getMOLineByMACSNOperationCompleted, userState);
        }
        
        private void OngetMOLineByMACSNOperationCompleted(object arg) {
            if ((this.getMOLineByMACSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMOLineByMACSNCompleted(this, new getMOLineByMACSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkOfflineStageOnce", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkOfflineStageOnce(string CSN, string IP, ref string errMsg) {
            object[] results = this.Invoke("checkOfflineStageOnce", new object[] {
                        CSN,
                        IP,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkOfflineStageOnceAsync(string CSN, string IP, string errMsg) {
            this.checkOfflineStageOnceAsync(CSN, IP, errMsg, null);
        }
        
        /// <remarks/>
        public void checkOfflineStageOnceAsync(string CSN, string IP, string errMsg, object userState) {
            if ((this.checkOfflineStageOnceOperationCompleted == null)) {
                this.checkOfflineStageOnceOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckOfflineStageOnceOperationCompleted);
            }
            this.InvokeAsync("checkOfflineStageOnce", new object[] {
                        CSN,
                        IP,
                        errMsg}, this.checkOfflineStageOnceOperationCompleted, userState);
        }
        
        private void OncheckOfflineStageOnceOperationCompleted(object arg) {
            if ((this.checkOfflineStageOnceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkOfflineStageOnceCompleted(this, new checkOfflineStageOnceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMODownLoadTimeByCSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getMODownLoadTimeByCSN(string CSN, ref string errMsg) {
            object[] results = this.Invoke("getMODownLoadTimeByCSN", new object[] {
                        CSN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getMODownLoadTimeByCSNAsync(string CSN, string errMsg) {
            this.getMODownLoadTimeByCSNAsync(CSN, errMsg, null);
        }
        
        /// <remarks/>
        public void getMODownLoadTimeByCSNAsync(string CSN, string errMsg, object userState) {
            if ((this.getMODownLoadTimeByCSNOperationCompleted == null)) {
                this.getMODownLoadTimeByCSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMODownLoadTimeByCSNOperationCompleted);
            }
            this.InvokeAsync("getMODownLoadTimeByCSN", new object[] {
                        CSN,
                        errMsg}, this.getMODownLoadTimeByCSNOperationCompleted, userState);
        }
        
        private void OngetMODownLoadTimeByCSNOperationCompleted(object arg) {
            if ((this.getMODownLoadTimeByCSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMODownLoadTimeByCSNCompleted(this, new getMODownLoadTimeByCSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete_Golden_Sample", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delete_Golden_Sample(string SN, string Station, ref string errMsg) {
            object[] results = this.Invoke("Delete_Golden_Sample", new object[] {
                        SN,
                        Station,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_Golden_SampleAsync(string SN, string Station, string errMsg) {
            this.Delete_Golden_SampleAsync(SN, Station, errMsg, null);
        }
        
        /// <remarks/>
        public void Delete_Golden_SampleAsync(string SN, string Station, string errMsg, object userState) {
            if ((this.Delete_Golden_SampleOperationCompleted == null)) {
                this.Delete_Golden_SampleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_Golden_SampleOperationCompleted);
            }
            this.InvokeAsync("Delete_Golden_Sample", new object[] {
                        SN,
                        Station,
                        errMsg}, this.Delete_Golden_SampleOperationCompleted, userState);
        }
        
        private void OnDelete_Golden_SampleOperationCompleted(object arg) {
            if ((this.Delete_Golden_SampleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_Golden_SampleCompleted(this, new Delete_Golden_SampleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Check_Golden_Sample", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Check_Golden_Sample(string SN, ref string errMsg) {
            object[] results = this.Invoke("Check_Golden_Sample", new object[] {
                        SN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Check_Golden_SampleAsync(string SN, string errMsg) {
            this.Check_Golden_SampleAsync(SN, errMsg, null);
        }
        
        /// <remarks/>
        public void Check_Golden_SampleAsync(string SN, string errMsg, object userState) {
            if ((this.Check_Golden_SampleOperationCompleted == null)) {
                this.Check_Golden_SampleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheck_Golden_SampleOperationCompleted);
            }
            this.InvokeAsync("Check_Golden_Sample", new object[] {
                        SN,
                        errMsg}, this.Check_Golden_SampleOperationCompleted, userState);
        }
        
        private void OnCheck_Golden_SampleOperationCompleted(object arg) {
            if ((this.Check_Golden_SampleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Check_Golden_SampleCompleted(this, new Check_Golden_SampleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Check_Golden_Sample2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Check_Golden_Sample2(string SN, ref string errMsg) {
            object[] results = this.Invoke("Check_Golden_Sample2", new object[] {
                        SN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Check_Golden_Sample2Async(string SN, string errMsg) {
            this.Check_Golden_Sample2Async(SN, errMsg, null);
        }
        
        /// <remarks/>
        public void Check_Golden_Sample2Async(string SN, string errMsg, object userState) {
            if ((this.Check_Golden_Sample2OperationCompleted == null)) {
                this.Check_Golden_Sample2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheck_Golden_Sample2OperationCompleted);
            }
            this.InvokeAsync("Check_Golden_Sample2", new object[] {
                        SN,
                        errMsg}, this.Check_Golden_Sample2OperationCompleted, userState);
        }
        
        private void OnCheck_Golden_Sample2OperationCompleted(object arg) {
            if ((this.Check_Golden_Sample2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Check_Golden_Sample2Completed(this, new Check_Golden_Sample2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Golden_Sample", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Golden_Sample(string SN, ref string errMsg) {
            object[] results = this.Invoke("Get_Golden_Sample", new object[] {
                        SN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Golden_SampleAsync(string SN, string errMsg) {
            this.Get_Golden_SampleAsync(SN, errMsg, null);
        }
        
        /// <remarks/>
        public void Get_Golden_SampleAsync(string SN, string errMsg, object userState) {
            if ((this.Get_Golden_SampleOperationCompleted == null)) {
                this.Get_Golden_SampleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Golden_SampleOperationCompleted);
            }
            this.InvokeAsync("Get_Golden_Sample", new object[] {
                        SN,
                        errMsg}, this.Get_Golden_SampleOperationCompleted, userState);
        }
        
        private void OnGet_Golden_SampleOperationCompleted(object arg) {
            if ((this.Get_Golden_SampleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Golden_SampleCompleted(this, new Get_Golden_SampleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveGolden_Sample", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveGolden_Sample(System.Data.DataSet ds, ref string errMsg) {
            object[] results = this.Invoke("SaveGolden_Sample", new object[] {
                        ds,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveGolden_SampleAsync(System.Data.DataSet ds, string errMsg) {
            this.SaveGolden_SampleAsync(ds, errMsg, null);
        }
        
        /// <remarks/>
        public void SaveGolden_SampleAsync(System.Data.DataSet ds, string errMsg, object userState) {
            if ((this.SaveGolden_SampleOperationCompleted == null)) {
                this.SaveGolden_SampleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveGolden_SampleOperationCompleted);
            }
            this.InvokeAsync("SaveGolden_Sample", new object[] {
                        ds,
                        errMsg}, this.SaveGolden_SampleOperationCompleted, userState);
        }
        
        private void OnSaveGolden_SampleOperationCompleted(object arg) {
            if ((this.SaveGolden_SampleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveGolden_SampleCompleted(this, new SaveGolden_SampleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateGolden_Sample", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateGolden_Sample(System.Data.DataSet ds, ref string errMsg) {
            object[] results = this.Invoke("UpdateGolden_Sample", new object[] {
                        ds,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGolden_SampleAsync(System.Data.DataSet ds, string errMsg) {
            this.UpdateGolden_SampleAsync(ds, errMsg, null);
        }
        
        /// <remarks/>
        public void UpdateGolden_SampleAsync(System.Data.DataSet ds, string errMsg, object userState) {
            if ((this.UpdateGolden_SampleOperationCompleted == null)) {
                this.UpdateGolden_SampleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGolden_SampleOperationCompleted);
            }
            this.InvokeAsync("UpdateGolden_Sample", new object[] {
                        ds,
                        errMsg}, this.UpdateGolden_SampleOperationCompleted, userState);
        }
        
        private void OnUpdateGolden_SampleOperationCompleted(object arg) {
            if ((this.UpdateGolden_SampleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGolden_SampleCompleted(this, new UpdateGolden_SampleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyGolden_Sample", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CopyGolden_Sample(string spn_from, string spn_to, ref string errMsg) {
            object[] results = this.Invoke("CopyGolden_Sample", new object[] {
                        spn_from,
                        spn_to,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CopyGolden_SampleAsync(string spn_from, string spn_to, string errMsg) {
            this.CopyGolden_SampleAsync(spn_from, spn_to, errMsg, null);
        }
        
        /// <remarks/>
        public void CopyGolden_SampleAsync(string spn_from, string spn_to, string errMsg, object userState) {
            if ((this.CopyGolden_SampleOperationCompleted == null)) {
                this.CopyGolden_SampleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyGolden_SampleOperationCompleted);
            }
            this.InvokeAsync("CopyGolden_Sample", new object[] {
                        spn_from,
                        spn_to,
                        errMsg}, this.CopyGolden_SampleOperationCompleted, userState);
        }
        
        private void OnCopyGolden_SampleOperationCompleted(object arg) {
            if ((this.CopyGolden_SampleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyGolden_SampleCompleted(this, new CopyGolden_SampleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyGolden_Sample_by_sn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CopyGolden_Sample_by_sn(string sn_from, string sn_to, string csn_to, ref string errMsg) {
            object[] results = this.Invoke("CopyGolden_Sample_by_sn", new object[] {
                        sn_from,
                        sn_to,
                        csn_to,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CopyGolden_Sample_by_snAsync(string sn_from, string sn_to, string csn_to, string errMsg) {
            this.CopyGolden_Sample_by_snAsync(sn_from, sn_to, csn_to, errMsg, null);
        }
        
        /// <remarks/>
        public void CopyGolden_Sample_by_snAsync(string sn_from, string sn_to, string csn_to, string errMsg, object userState) {
            if ((this.CopyGolden_Sample_by_snOperationCompleted == null)) {
                this.CopyGolden_Sample_by_snOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyGolden_Sample_by_snOperationCompleted);
            }
            this.InvokeAsync("CopyGolden_Sample_by_sn", new object[] {
                        sn_from,
                        sn_to,
                        csn_to,
                        errMsg}, this.CopyGolden_Sample_by_snOperationCompleted, userState);
        }
        
        private void OnCopyGolden_Sample_by_snOperationCompleted(object arg) {
            if ((this.CopyGolden_Sample_by_snCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyGolden_Sample_by_snCompleted(this, new CopyGolden_Sample_by_snCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Check_Golden_Sample_Warning", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Check_Golden_Sample_Warning(string SN, ref string errMsg) {
            object[] results = this.Invoke("Check_Golden_Sample_Warning", new object[] {
                        SN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Check_Golden_Sample_WarningAsync(string SN, string errMsg) {
            this.Check_Golden_Sample_WarningAsync(SN, errMsg, null);
        }
        
        /// <remarks/>
        public void Check_Golden_Sample_WarningAsync(string SN, string errMsg, object userState) {
            if ((this.Check_Golden_Sample_WarningOperationCompleted == null)) {
                this.Check_Golden_Sample_WarningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheck_Golden_Sample_WarningOperationCompleted);
            }
            this.InvokeAsync("Check_Golden_Sample_Warning", new object[] {
                        SN,
                        errMsg}, this.Check_Golden_Sample_WarningOperationCompleted, userState);
        }
        
        private void OnCheck_Golden_Sample_WarningOperationCompleted(object arg) {
            if ((this.Check_Golden_Sample_WarningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Check_Golden_Sample_WarningCompleted(this, new Check_Golden_Sample_WarningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Set_Device", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Set_Device(string PSN, string Device_ID, string OP_ID, ref string errMsg) {
            object[] results = this.Invoke("Set_Device", new object[] {
                        PSN,
                        Device_ID,
                        OP_ID,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Set_DeviceAsync(string PSN, string Device_ID, string OP_ID, string errMsg) {
            this.Set_DeviceAsync(PSN, Device_ID, OP_ID, errMsg, null);
        }
        
        /// <remarks/>
        public void Set_DeviceAsync(string PSN, string Device_ID, string OP_ID, string errMsg, object userState) {
            if ((this.Set_DeviceOperationCompleted == null)) {
                this.Set_DeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSet_DeviceOperationCompleted);
            }
            this.InvokeAsync("Set_Device", new object[] {
                        PSN,
                        Device_ID,
                        OP_ID,
                        errMsg}, this.Set_DeviceOperationCompleted, userState);
        }
        
        private void OnSet_DeviceOperationCompleted(object arg) {
            if ((this.Set_DeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Set_DeviceCompleted(this, new Set_DeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/del_Device", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool del_Device(string PSN, ref string errMsg) {
            object[] results = this.Invoke("del_Device", new object[] {
                        PSN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void del_DeviceAsync(string PSN, string errMsg) {
            this.del_DeviceAsync(PSN, errMsg, null);
        }
        
        /// <remarks/>
        public void del_DeviceAsync(string PSN, string errMsg, object userState) {
            if ((this.del_DeviceOperationCompleted == null)) {
                this.del_DeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.Ondel_DeviceOperationCompleted);
            }
            this.InvokeAsync("del_Device", new object[] {
                        PSN,
                        errMsg}, this.del_DeviceOperationCompleted, userState);
        }
        
        private void Ondel_DeviceOperationCompleted(object arg) {
            if ((this.del_DeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.del_DeviceCompleted(this, new del_DeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getOP_ID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getOP_ID(string ip, ref string errMsg) {
            object[] results = this.Invoke("getOP_ID", new object[] {
                        ip,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getOP_IDAsync(string ip, string errMsg) {
            this.getOP_IDAsync(ip, errMsg, null);
        }
        
        /// <remarks/>
        public void getOP_IDAsync(string ip, string errMsg, object userState) {
            if ((this.getOP_IDOperationCompleted == null)) {
                this.getOP_IDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOP_IDOperationCompleted);
            }
            this.InvokeAsync("getOP_ID", new object[] {
                        ip,
                        errMsg}, this.getOP_IDOperationCompleted, userState);
        }
        
        private void OngetOP_IDOperationCompleted(object arg) {
            if ((this.getOP_IDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOP_IDCompleted(this, new getOP_IDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/check_SFCS_Stage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool check_SFCS_Stage(string PSN, string IP, ref string errMsg) {
            object[] results = this.Invoke("check_SFCS_Stage", new object[] {
                        PSN,
                        IP,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void check_SFCS_StageAsync(string PSN, string IP, string errMsg) {
            this.check_SFCS_StageAsync(PSN, IP, errMsg, null);
        }
        
        /// <remarks/>
        public void check_SFCS_StageAsync(string PSN, string IP, string errMsg, object userState) {
            if ((this.check_SFCS_StageOperationCompleted == null)) {
                this.check_SFCS_StageOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncheck_SFCS_StageOperationCompleted);
            }
            this.InvokeAsync("check_SFCS_Stage", new object[] {
                        PSN,
                        IP,
                        errMsg}, this.check_SFCS_StageOperationCompleted, userState);
        }
        
        private void Oncheck_SFCS_StageOperationCompleted(object arg) {
            if ((this.check_SFCS_StageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.check_SFCS_StageCompleted(this, new check_SFCS_StageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_SsnLastReason", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Get_SsnLastReason(string PSN) {
            object[] results = this.Invoke("Get_SsnLastReason", new object[] {
                        PSN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Get_SsnLastReasonAsync(string PSN) {
            this.Get_SsnLastReasonAsync(PSN, null);
        }
        
        /// <remarks/>
        public void Get_SsnLastReasonAsync(string PSN, object userState) {
            if ((this.Get_SsnLastReasonOperationCompleted == null)) {
                this.Get_SsnLastReasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_SsnLastReasonOperationCompleted);
            }
            this.InvokeAsync("Get_SsnLastReason", new object[] {
                        PSN}, this.Get_SsnLastReasonOperationCompleted, userState);
        }
        
        private void OnGet_SsnLastReasonOperationCompleted(object arg) {
            if ((this.Get_SsnLastReasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_SsnLastReasonCompleted(this, new Get_SsnLastReasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CompareSnCsn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CompareSnCsn(string CompSnStr, ref string Rs_Message) {
            object[] results = this.Invoke("CompareSnCsn", new object[] {
                        CompSnStr,
                        Rs_Message});
            Rs_Message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CompareSnCsnAsync(string CompSnStr, string Rs_Message) {
            this.CompareSnCsnAsync(CompSnStr, Rs_Message, null);
        }
        
        /// <remarks/>
        public void CompareSnCsnAsync(string CompSnStr, string Rs_Message, object userState) {
            if ((this.CompareSnCsnOperationCompleted == null)) {
                this.CompareSnCsnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompareSnCsnOperationCompleted);
            }
            this.InvokeAsync("CompareSnCsn", new object[] {
                        CompSnStr,
                        Rs_Message}, this.CompareSnCsnOperationCompleted, userState);
        }
        
        private void OnCompareSnCsnOperationCompleted(object arg) {
            if ((this.CompareSnCsnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompareSnCsnCompleted(this, new CompareSnCsnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPsn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPsn(string Vs_CheckSn) {
            object[] results = this.Invoke("GetPsn", new object[] {
                        Vs_CheckSn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPsnAsync(string Vs_CheckSn) {
            this.GetPsnAsync(Vs_CheckSn, null);
        }
        
        /// <remarks/>
        public void GetPsnAsync(string Vs_CheckSn, object userState) {
            if ((this.GetPsnOperationCompleted == null)) {
                this.GetPsnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPsnOperationCompleted);
            }
            this.InvokeAsync("GetPsn", new object[] {
                        Vs_CheckSn}, this.GetPsnOperationCompleted, userState);
        }
        
        private void OnGetPsnOperationCompleted(object arg) {
            if ((this.GetPsnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPsnCompleted(this, new GetPsnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelPsn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelPsn(string Vs_CheckSn) {
            object[] results = this.Invoke("CancelPsn", new object[] {
                        Vs_CheckSn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelPsnAsync(string Vs_CheckSn) {
            this.CancelPsnAsync(Vs_CheckSn, null);
        }
        
        /// <remarks/>
        public void CancelPsnAsync(string Vs_CheckSn, object userState) {
            if ((this.CancelPsnOperationCompleted == null)) {
                this.CancelPsnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPsnOperationCompleted);
            }
            this.InvokeAsync("CancelPsn", new object[] {
                        Vs_CheckSn}, this.CancelPsnOperationCompleted, userState);
        }
        
        private void OnCancelPsnOperationCompleted(object arg) {
            if ((this.CancelPsnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPsnCompleted(this, new CancelPsnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWo_Info", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWo_Info(string Vs_CheckSn, string Info, ref string ErrMsg) {
            object[] results = this.Invoke("GetWo_Info", new object[] {
                        Vs_CheckSn,
                        Info,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWo_InfoAsync(string Vs_CheckSn, string Info, string ErrMsg) {
            this.GetWo_InfoAsync(Vs_CheckSn, Info, ErrMsg, null);
        }
        
        /// <remarks/>
        public void GetWo_InfoAsync(string Vs_CheckSn, string Info, string ErrMsg, object userState) {
            if ((this.GetWo_InfoOperationCompleted == null)) {
                this.GetWo_InfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWo_InfoOperationCompleted);
            }
            this.InvokeAsync("GetWo_Info", new object[] {
                        Vs_CheckSn,
                        Info,
                        ErrMsg}, this.GetWo_InfoOperationCompleted, userState);
        }
        
        private void OnGetWo_InfoOperationCompleted(object arg) {
            if ((this.GetWo_InfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWo_InfoCompleted(this, new GetWo_InfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Save_SN_TEST_BYHAND", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_SN_TEST_BYHAND(string Vs_CheckSn, string Reason, string OP, ref string ErrMsg) {
            object[] results = this.Invoke("Save_SN_TEST_BYHAND", new object[] {
                        Vs_CheckSn,
                        Reason,
                        OP,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_SN_TEST_BYHANDAsync(string Vs_CheckSn, string Reason, string OP, string ErrMsg) {
            this.Save_SN_TEST_BYHANDAsync(Vs_CheckSn, Reason, OP, ErrMsg, null);
        }
        
        /// <remarks/>
        public void Save_SN_TEST_BYHANDAsync(string Vs_CheckSn, string Reason, string OP, string ErrMsg, object userState) {
            if ((this.Save_SN_TEST_BYHANDOperationCompleted == null)) {
                this.Save_SN_TEST_BYHANDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_SN_TEST_BYHANDOperationCompleted);
            }
            this.InvokeAsync("Save_SN_TEST_BYHAND", new object[] {
                        Vs_CheckSn,
                        Reason,
                        OP,
                        ErrMsg}, this.Save_SN_TEST_BYHANDOperationCompleted, userState);
        }
        
        private void OnSave_SN_TEST_BYHANDOperationCompleted(object arg) {
            if ((this.Save_SN_TEST_BYHANDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_SN_TEST_BYHANDCompleted(this, new Save_SN_TEST_BYHANDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getGoldenProdssn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getGoldenProdssn(string csn, ref string errMsg) {
            object[] results = this.Invoke("getGoldenProdssn", new object[] {
                        csn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getGoldenProdssnAsync(string csn, string errMsg) {
            this.getGoldenProdssnAsync(csn, errMsg, null);
        }
        
        /// <remarks/>
        public void getGoldenProdssnAsync(string csn, string errMsg, object userState) {
            if ((this.getGoldenProdssnOperationCompleted == null)) {
                this.getGoldenProdssnOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGoldenProdssnOperationCompleted);
            }
            this.InvokeAsync("getGoldenProdssn", new object[] {
                        csn,
                        errMsg}, this.getGoldenProdssnOperationCompleted, userState);
        }
        
        private void OngetGoldenProdssnOperationCompleted(object arg) {
            if ((this.getGoldenProdssnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGoldenProdssnCompleted(this, new getGoldenProdssnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ATS_Check_Equip", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ATS_Check_Equip(string IP, string TE_Prog_Name, string Equip_ID, ref string errMsg) {
            object[] results = this.Invoke("ATS_Check_Equip", new object[] {
                        IP,
                        TE_Prog_Name,
                        Equip_ID,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ATS_Check_EquipAsync(string IP, string TE_Prog_Name, string Equip_ID, string errMsg) {
            this.ATS_Check_EquipAsync(IP, TE_Prog_Name, Equip_ID, errMsg, null);
        }
        
        /// <remarks/>
        public void ATS_Check_EquipAsync(string IP, string TE_Prog_Name, string Equip_ID, string errMsg, object userState) {
            if ((this.ATS_Check_EquipOperationCompleted == null)) {
                this.ATS_Check_EquipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnATS_Check_EquipOperationCompleted);
            }
            this.InvokeAsync("ATS_Check_Equip", new object[] {
                        IP,
                        TE_Prog_Name,
                        Equip_ID,
                        errMsg}, this.ATS_Check_EquipOperationCompleted, userState);
        }
        
        private void OnATS_Check_EquipOperationCompleted(object arg) {
            if ((this.ATS_Check_EquipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ATS_Check_EquipCompleted(this, new ATS_Check_EquipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ATS_Init_Equip", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ATS_Init_Equip(string IP, string TE_Prog_Name, string Equip_ID, ref string errMsg) {
            object[] results = this.Invoke("ATS_Init_Equip", new object[] {
                        IP,
                        TE_Prog_Name,
                        Equip_ID,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ATS_Init_EquipAsync(string IP, string TE_Prog_Name, string Equip_ID, string errMsg) {
            this.ATS_Init_EquipAsync(IP, TE_Prog_Name, Equip_ID, errMsg, null);
        }
        
        /// <remarks/>
        public void ATS_Init_EquipAsync(string IP, string TE_Prog_Name, string Equip_ID, string errMsg, object userState) {
            if ((this.ATS_Init_EquipOperationCompleted == null)) {
                this.ATS_Init_EquipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnATS_Init_EquipOperationCompleted);
            }
            this.InvokeAsync("ATS_Init_Equip", new object[] {
                        IP,
                        TE_Prog_Name,
                        Equip_ID,
                        errMsg}, this.ATS_Init_EquipOperationCompleted, userState);
        }
        
        private void OnATS_Init_EquipOperationCompleted(object arg) {
            if ((this.ATS_Init_EquipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ATS_Init_EquipCompleted(this, new ATS_Init_EquipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReTestControl_Query", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ReTestControl_Query(string Vs_CheckPsn, string Vs_IP, ref string errMsg) {
            object[] results = this.Invoke("ReTestControl_Query", new object[] {
                        Vs_CheckPsn,
                        Vs_IP,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReTestControl_QueryAsync(string Vs_CheckPsn, string Vs_IP, string errMsg) {
            this.ReTestControl_QueryAsync(Vs_CheckPsn, Vs_IP, errMsg, null);
        }
        
        /// <remarks/>
        public void ReTestControl_QueryAsync(string Vs_CheckPsn, string Vs_IP, string errMsg, object userState) {
            if ((this.ReTestControl_QueryOperationCompleted == null)) {
                this.ReTestControl_QueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReTestControl_QueryOperationCompleted);
            }
            this.InvokeAsync("ReTestControl_Query", new object[] {
                        Vs_CheckPsn,
                        Vs_IP,
                        errMsg}, this.ReTestControl_QueryOperationCompleted, userState);
        }
        
        private void OnReTestControl_QueryOperationCompleted(object arg) {
            if ((this.ReTestControl_QueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReTestControl_QueryCompleted(this, new ReTestControl_QueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReTestControl_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ReTestControl_Insert(string Vs_CheckPsn, string Vs_IP, string Vs_ErrorCode, ref string errMsg) {
            object[] results = this.Invoke("ReTestControl_Insert", new object[] {
                        Vs_CheckPsn,
                        Vs_IP,
                        Vs_ErrorCode,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReTestControl_InsertAsync(string Vs_CheckPsn, string Vs_IP, string Vs_ErrorCode, string errMsg) {
            this.ReTestControl_InsertAsync(Vs_CheckPsn, Vs_IP, Vs_ErrorCode, errMsg, null);
        }
        
        /// <remarks/>
        public void ReTestControl_InsertAsync(string Vs_CheckPsn, string Vs_IP, string Vs_ErrorCode, string errMsg, object userState) {
            if ((this.ReTestControl_InsertOperationCompleted == null)) {
                this.ReTestControl_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReTestControl_InsertOperationCompleted);
            }
            this.InvokeAsync("ReTestControl_Insert", new object[] {
                        Vs_CheckPsn,
                        Vs_IP,
                        Vs_ErrorCode,
                        errMsg}, this.ReTestControl_InsertOperationCompleted, userState);
        }
        
        private void OnReTestControl_InsertOperationCompleted(object arg) {
            if ((this.ReTestControl_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReTestControl_InsertCompleted(this, new ReTestControl_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReTestControl_Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ReTestControl_Delete(string Vs_CheckPsn, ref string errMsg) {
            object[] results = this.Invoke("ReTestControl_Delete", new object[] {
                        Vs_CheckPsn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReTestControl_DeleteAsync(string Vs_CheckPsn, string errMsg) {
            this.ReTestControl_DeleteAsync(Vs_CheckPsn, errMsg, null);
        }
        
        /// <remarks/>
        public void ReTestControl_DeleteAsync(string Vs_CheckPsn, string errMsg, object userState) {
            if ((this.ReTestControl_DeleteOperationCompleted == null)) {
                this.ReTestControl_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReTestControl_DeleteOperationCompleted);
            }
            this.InvokeAsync("ReTestControl_Delete", new object[] {
                        Vs_CheckPsn,
                        errMsg}, this.ReTestControl_DeleteOperationCompleted, userState);
        }
        
        private void OnReTestControl_DeleteOperationCompleted(object arg) {
            if ((this.ReTestControl_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReTestControl_DeleteCompleted(this, new ReTestControl_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/mAdo_SqlPro", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string mAdo_SqlPro(string Vs_AllStr, string Vs_OldWords, string Vs_NewWords) {
            object[] results = this.Invoke("mAdo_SqlPro", new object[] {
                        Vs_AllStr,
                        Vs_OldWords,
                        Vs_NewWords});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void mAdo_SqlProAsync(string Vs_AllStr, string Vs_OldWords, string Vs_NewWords) {
            this.mAdo_SqlProAsync(Vs_AllStr, Vs_OldWords, Vs_NewWords, null);
        }
        
        /// <remarks/>
        public void mAdo_SqlProAsync(string Vs_AllStr, string Vs_OldWords, string Vs_NewWords, object userState) {
            if ((this.mAdo_SqlProOperationCompleted == null)) {
                this.mAdo_SqlProOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmAdo_SqlProOperationCompleted);
            }
            this.InvokeAsync("mAdo_SqlPro", new object[] {
                        Vs_AllStr,
                        Vs_OldWords,
                        Vs_NewWords}, this.mAdo_SqlProOperationCompleted, userState);
        }
        
        private void OnmAdo_SqlProOperationCompleted(object arg) {
            if ((this.mAdo_SqlProCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mAdo_SqlProCompleted(this, new mAdo_SqlProCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getGolden_SPN_CTRL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getGolden_SPN_CTRL(string spn, string stage, ref string errMsg) {
            object[] results = this.Invoke("getGolden_SPN_CTRL", new object[] {
                        spn,
                        stage,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getGolden_SPN_CTRLAsync(string spn, string stage, string errMsg) {
            this.getGolden_SPN_CTRLAsync(spn, stage, errMsg, null);
        }
        
        /// <remarks/>
        public void getGolden_SPN_CTRLAsync(string spn, string stage, string errMsg, object userState) {
            if ((this.getGolden_SPN_CTRLOperationCompleted == null)) {
                this.getGolden_SPN_CTRLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGolden_SPN_CTRLOperationCompleted);
            }
            this.InvokeAsync("getGolden_SPN_CTRL", new object[] {
                        spn,
                        stage,
                        errMsg}, this.getGolden_SPN_CTRLOperationCompleted, userState);
        }
        
        private void OngetGolden_SPN_CTRLOperationCompleted(object arg) {
            if ((this.getGolden_SPN_CTRLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGolden_SPN_CTRLCompleted(this, new getGolden_SPN_CTRLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getGolden_SPN_CTRL2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getGolden_SPN_CTRL2(System.Data.DataSet ds, ref string errMsg) {
            object[] results = this.Invoke("getGolden_SPN_CTRL2", new object[] {
                        ds,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getGolden_SPN_CTRL2Async(System.Data.DataSet ds, string errMsg) {
            this.getGolden_SPN_CTRL2Async(ds, errMsg, null);
        }
        
        /// <remarks/>
        public void getGolden_SPN_CTRL2Async(System.Data.DataSet ds, string errMsg, object userState) {
            if ((this.getGolden_SPN_CTRL2OperationCompleted == null)) {
                this.getGolden_SPN_CTRL2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGolden_SPN_CTRL2OperationCompleted);
            }
            this.InvokeAsync("getGolden_SPN_CTRL2", new object[] {
                        ds,
                        errMsg}, this.getGolden_SPN_CTRL2OperationCompleted, userState);
        }
        
        private void OngetGolden_SPN_CTRL2OperationCompleted(object arg) {
            if ((this.getGolden_SPN_CTRL2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGolden_SPN_CTRL2Completed(this, new getGolden_SPN_CTRL2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/set_Golden_SPN_CTRL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool set_Golden_SPN_CTRL(System.Data.DataSet ds, ref string errMsg) {
            object[] results = this.Invoke("set_Golden_SPN_CTRL", new object[] {
                        ds,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void set_Golden_SPN_CTRLAsync(System.Data.DataSet ds, string errMsg) {
            this.set_Golden_SPN_CTRLAsync(ds, errMsg, null);
        }
        
        /// <remarks/>
        public void set_Golden_SPN_CTRLAsync(System.Data.DataSet ds, string errMsg, object userState) {
            if ((this.set_Golden_SPN_CTRLOperationCompleted == null)) {
                this.set_Golden_SPN_CTRLOperationCompleted = new System.Threading.SendOrPostCallback(this.Onset_Golden_SPN_CTRLOperationCompleted);
            }
            this.InvokeAsync("set_Golden_SPN_CTRL", new object[] {
                        ds,
                        errMsg}, this.set_Golden_SPN_CTRLOperationCompleted, userState);
        }
        
        private void Onset_Golden_SPN_CTRLOperationCompleted(object arg) {
            if ((this.set_Golden_SPN_CTRLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.set_Golden_SPN_CTRLCompleted(this, new set_Golden_SPN_CTRLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/del_Golden_SPN_CTRL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool del_Golden_SPN_CTRL(string spn, string stage, string go_n, string err_code, ref string errMsg) {
            object[] results = this.Invoke("del_Golden_SPN_CTRL", new object[] {
                        spn,
                        stage,
                        go_n,
                        err_code,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void del_Golden_SPN_CTRLAsync(string spn, string stage, string go_n, string err_code, string errMsg) {
            this.del_Golden_SPN_CTRLAsync(spn, stage, go_n, err_code, errMsg, null);
        }
        
        /// <remarks/>
        public void del_Golden_SPN_CTRLAsync(string spn, string stage, string go_n, string err_code, string errMsg, object userState) {
            if ((this.del_Golden_SPN_CTRLOperationCompleted == null)) {
                this.del_Golden_SPN_CTRLOperationCompleted = new System.Threading.SendOrPostCallback(this.Ondel_Golden_SPN_CTRLOperationCompleted);
            }
            this.InvokeAsync("del_Golden_SPN_CTRL", new object[] {
                        spn,
                        stage,
                        go_n,
                        err_code,
                        errMsg}, this.del_Golden_SPN_CTRLOperationCompleted, userState);
        }
        
        private void Ondel_Golden_SPN_CTRLOperationCompleted(object arg) {
            if ((this.del_Golden_SPN_CTRLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.del_Golden_SPN_CTRLCompleted(this, new del_Golden_SPN_CTRLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/copy_Golden_SPN_CTRL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool copy_Golden_SPN_CTRL(string spn_from, string spn_to, ref string errMsg) {
            object[] results = this.Invoke("copy_Golden_SPN_CTRL", new object[] {
                        spn_from,
                        spn_to,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void copy_Golden_SPN_CTRLAsync(string spn_from, string spn_to, string errMsg) {
            this.copy_Golden_SPN_CTRLAsync(spn_from, spn_to, errMsg, null);
        }
        
        /// <remarks/>
        public void copy_Golden_SPN_CTRLAsync(string spn_from, string spn_to, string errMsg, object userState) {
            if ((this.copy_Golden_SPN_CTRLOperationCompleted == null)) {
                this.copy_Golden_SPN_CTRLOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncopy_Golden_SPN_CTRLOperationCompleted);
            }
            this.InvokeAsync("copy_Golden_SPN_CTRL", new object[] {
                        spn_from,
                        spn_to,
                        errMsg}, this.copy_Golden_SPN_CTRLOperationCompleted, userState);
        }
        
        private void Oncopy_Golden_SPN_CTRLOperationCompleted(object arg) {
            if ((this.copy_Golden_SPN_CTRLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copy_Golden_SPN_CTRLCompleted(this, new copy_Golden_SPN_CTRLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ASSP_V001", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ASSP_V001(System.Data.DataSet sql_ds, ref string errMsg) {
            object[] results = this.Invoke("ASSP_V001", new object[] {
                        sql_ds,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ASSP_V001Async(System.Data.DataSet sql_ds, string errMsg) {
            this.ASSP_V001Async(sql_ds, errMsg, null);
        }
        
        /// <remarks/>
        public void ASSP_V001Async(System.Data.DataSet sql_ds, string errMsg, object userState) {
            if ((this.ASSP_V001OperationCompleted == null)) {
                this.ASSP_V001OperationCompleted = new System.Threading.SendOrPostCallback(this.OnASSP_V001OperationCompleted);
            }
            this.InvokeAsync("ASSP_V001", new object[] {
                        sql_ds,
                        errMsg}, this.ASSP_V001OperationCompleted, userState);
        }
        
        private void OnASSP_V001OperationCompleted(object arg) {
            if ((this.ASSP_V001Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ASSP_V001Completed(this, new ASSP_V001CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ATS_Register_V001", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ATS_Register_V001(System.Data.DataSet ds_reg_info, ref string errMsg) {
            object[] results = this.Invoke("ATS_Register_V001", new object[] {
                        ds_reg_info,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ATS_Register_V001Async(System.Data.DataSet ds_reg_info, string errMsg) {
            this.ATS_Register_V001Async(ds_reg_info, errMsg, null);
        }
        
        /// <remarks/>
        public void ATS_Register_V001Async(System.Data.DataSet ds_reg_info, string errMsg, object userState) {
            if ((this.ATS_Register_V001OperationCompleted == null)) {
                this.ATS_Register_V001OperationCompleted = new System.Threading.SendOrPostCallback(this.OnATS_Register_V001OperationCompleted);
            }
            this.InvokeAsync("ATS_Register_V001", new object[] {
                        ds_reg_info,
                        errMsg}, this.ATS_Register_V001OperationCompleted, userState);
        }
        
        private void OnATS_Register_V001OperationCompleted(object arg) {
            if ((this.ATS_Register_V001Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ATS_Register_V001Completed(this, new ATS_Register_V001CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ASTP_Test_Initial_V001", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ASTP_Test_Initial_V001(System.Data.DataSet ds_ini_info, ref string errMsg) {
            object[] results = this.Invoke("ASTP_Test_Initial_V001", new object[] {
                        ds_ini_info,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ASTP_Test_Initial_V001Async(System.Data.DataSet ds_ini_info, string errMsg) {
            this.ASTP_Test_Initial_V001Async(ds_ini_info, errMsg, null);
        }
        
        /// <remarks/>
        public void ASTP_Test_Initial_V001Async(System.Data.DataSet ds_ini_info, string errMsg, object userState) {
            if ((this.ASTP_Test_Initial_V001OperationCompleted == null)) {
                this.ASTP_Test_Initial_V001OperationCompleted = new System.Threading.SendOrPostCallback(this.OnASTP_Test_Initial_V001OperationCompleted);
            }
            this.InvokeAsync("ASTP_Test_Initial_V001", new object[] {
                        ds_ini_info,
                        errMsg}, this.ASTP_Test_Initial_V001OperationCompleted, userState);
        }
        
        private void OnASTP_Test_Initial_V001OperationCompleted(object arg) {
            if ((this.ASTP_Test_Initial_V001Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ASTP_Test_Initial_V001Completed(this, new ASTP_Test_Initial_V001CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ATS_Query_CSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ATS_Query_CSN(string CPN, string CSN, ref string ErrMsg) {
            object[] results = this.Invoke("ATS_Query_CSN", new object[] {
                        CPN,
                        CSN,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ATS_Query_CSNAsync(string CPN, string CSN, string ErrMsg) {
            this.ATS_Query_CSNAsync(CPN, CSN, ErrMsg, null);
        }
        
        /// <remarks/>
        public void ATS_Query_CSNAsync(string CPN, string CSN, string ErrMsg, object userState) {
            if ((this.ATS_Query_CSNOperationCompleted == null)) {
                this.ATS_Query_CSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnATS_Query_CSNOperationCompleted);
            }
            this.InvokeAsync("ATS_Query_CSN", new object[] {
                        CPN,
                        CSN,
                        ErrMsg}, this.ATS_Query_CSNOperationCompleted, userState);
        }
        
        private void OnATS_Query_CSNOperationCompleted(object arg) {
            if ((this.ATS_Query_CSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ATS_Query_CSNCompleted(this, new ATS_Query_CSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ATS_Query_All_CSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ATS_Query_All_CSN(string CPN, string CSN, ref string ErrMsg) {
            object[] results = this.Invoke("ATS_Query_All_CSN", new object[] {
                        CPN,
                        CSN,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ATS_Query_All_CSNAsync(string CPN, string CSN, string ErrMsg) {
            this.ATS_Query_All_CSNAsync(CPN, CSN, ErrMsg, null);
        }
        
        /// <remarks/>
        public void ATS_Query_All_CSNAsync(string CPN, string CSN, string ErrMsg, object userState) {
            if ((this.ATS_Query_All_CSNOperationCompleted == null)) {
                this.ATS_Query_All_CSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnATS_Query_All_CSNOperationCompleted);
            }
            this.InvokeAsync("ATS_Query_All_CSN", new object[] {
                        CPN,
                        CSN,
                        ErrMsg}, this.ATS_Query_All_CSNOperationCompleted, userState);
        }
        
        private void OnATS_Query_All_CSNOperationCompleted(object arg) {
            if ((this.ATS_Query_All_CSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ATS_Query_All_CSNCompleted(this, new ATS_Query_All_CSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPN_BySN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPN_BySN(string Vs_CheckSsn, ref string ErrMsg) {
            object[] results = this.Invoke("GetPN_BySN", new object[] {
                        Vs_CheckSsn,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPN_BySNAsync(string Vs_CheckSsn, string ErrMsg) {
            this.GetPN_BySNAsync(Vs_CheckSsn, ErrMsg, null);
        }
        
        /// <remarks/>
        public void GetPN_BySNAsync(string Vs_CheckSsn, string ErrMsg, object userState) {
            if ((this.GetPN_BySNOperationCompleted == null)) {
                this.GetPN_BySNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPN_BySNOperationCompleted);
            }
            this.InvokeAsync("GetPN_BySN", new object[] {
                        Vs_CheckSsn,
                        ErrMsg}, this.GetPN_BySNOperationCompleted, userState);
        }
        
        private void OnGetPN_BySNOperationCompleted(object arg) {
            if ((this.GetPN_BySNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPN_BySNCompleted(this, new GetPN_BySNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWO_BySN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWO_BySN(string Vs_CheckSsn, ref string ErrMsg) {
            object[] results = this.Invoke("GetWO_BySN", new object[] {
                        Vs_CheckSsn,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWO_BySNAsync(string Vs_CheckSsn, string ErrMsg) {
            this.GetWO_BySNAsync(Vs_CheckSsn, ErrMsg, null);
        }
        
        /// <remarks/>
        public void GetWO_BySNAsync(string Vs_CheckSsn, string ErrMsg, object userState) {
            if ((this.GetWO_BySNOperationCompleted == null)) {
                this.GetWO_BySNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWO_BySNOperationCompleted);
            }
            this.InvokeAsync("GetWO_BySN", new object[] {
                        Vs_CheckSsn,
                        ErrMsg}, this.GetWO_BySNOperationCompleted, userState);
        }
        
        private void OnGetWO_BySNOperationCompleted(object arg) {
            if ((this.GetWO_BySNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWO_BySNCompleted(this, new GetWO_BySNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNS_Key", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNS_Key(string Vs_MoNumber, ref string ErrMsg) {
            object[] results = this.Invoke("GetNS_Key", new object[] {
                        Vs_MoNumber,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNS_KeyAsync(string Vs_MoNumber, string ErrMsg) {
            this.GetNS_KeyAsync(Vs_MoNumber, ErrMsg, null);
        }
        
        /// <remarks/>
        public void GetNS_KeyAsync(string Vs_MoNumber, string ErrMsg, object userState) {
            if ((this.GetNS_KeyOperationCompleted == null)) {
                this.GetNS_KeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNS_KeyOperationCompleted);
            }
            this.InvokeAsync("GetNS_Key", new object[] {
                        Vs_MoNumber,
                        ErrMsg}, this.GetNS_KeyOperationCompleted, userState);
        }
        
        private void OnGetNS_KeyOperationCompleted(object arg) {
            if ((this.GetNS_KeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNS_KeyCompleted(this, new GetNS_KeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Save_FloTVProvisionData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_FloTVProvisionData(string OEM_SN, string CASUA, string IRDSN, string PTV_ID, string Sub_ID, ref string ErrMsg) {
            object[] results = this.Invoke("Save_FloTVProvisionData", new object[] {
                        OEM_SN,
                        CASUA,
                        IRDSN,
                        PTV_ID,
                        Sub_ID,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_FloTVProvisionDataAsync(string OEM_SN, string CASUA, string IRDSN, string PTV_ID, string Sub_ID, string ErrMsg) {
            this.Save_FloTVProvisionDataAsync(OEM_SN, CASUA, IRDSN, PTV_ID, Sub_ID, ErrMsg, null);
        }
        
        /// <remarks/>
        public void Save_FloTVProvisionDataAsync(string OEM_SN, string CASUA, string IRDSN, string PTV_ID, string Sub_ID, string ErrMsg, object userState) {
            if ((this.Save_FloTVProvisionDataOperationCompleted == null)) {
                this.Save_FloTVProvisionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_FloTVProvisionDataOperationCompleted);
            }
            this.InvokeAsync("Save_FloTVProvisionData", new object[] {
                        OEM_SN,
                        CASUA,
                        IRDSN,
                        PTV_ID,
                        Sub_ID,
                        ErrMsg}, this.Save_FloTVProvisionDataOperationCompleted, userState);
        }
        
        private void OnSave_FloTVProvisionDataOperationCompleted(object arg) {
            if ((this.Save_FloTVProvisionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_FloTVProvisionDataCompleted(this, new Save_FloTVProvisionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Query_FloTVProvisionData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Query_FloTVProvisionData(string MO, string Start_date, string End_Date, ref string ErrMsg) {
            object[] results = this.Invoke("Query_FloTVProvisionData", new object[] {
                        MO,
                        Start_date,
                        End_Date,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Query_FloTVProvisionDataAsync(string MO, string Start_date, string End_Date, string ErrMsg) {
            this.Query_FloTVProvisionDataAsync(MO, Start_date, End_Date, ErrMsg, null);
        }
        
        /// <remarks/>
        public void Query_FloTVProvisionDataAsync(string MO, string Start_date, string End_Date, string ErrMsg, object userState) {
            if ((this.Query_FloTVProvisionDataOperationCompleted == null)) {
                this.Query_FloTVProvisionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuery_FloTVProvisionDataOperationCompleted);
            }
            this.InvokeAsync("Query_FloTVProvisionData", new object[] {
                        MO,
                        Start_date,
                        End_Date,
                        ErrMsg}, this.Query_FloTVProvisionDataOperationCompleted, userState);
        }
        
        private void OnQuery_FloTVProvisionDataOperationCompleted(object arg) {
            if ((this.Query_FloTVProvisionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Query_FloTVProvisionDataCompleted(this, new Query_FloTVProvisionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Query_FloTVProvisionDataHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Query_FloTVProvisionDataHistory(string MO, ref string ErrMsg) {
            object[] results = this.Invoke("Query_FloTVProvisionDataHistory", new object[] {
                        MO,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Query_FloTVProvisionDataHistoryAsync(string MO, string ErrMsg) {
            this.Query_FloTVProvisionDataHistoryAsync(MO, ErrMsg, null);
        }
        
        /// <remarks/>
        public void Query_FloTVProvisionDataHistoryAsync(string MO, string ErrMsg, object userState) {
            if ((this.Query_FloTVProvisionDataHistoryOperationCompleted == null)) {
                this.Query_FloTVProvisionDataHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuery_FloTVProvisionDataHistoryOperationCompleted);
            }
            this.InvokeAsync("Query_FloTVProvisionDataHistory", new object[] {
                        MO,
                        ErrMsg}, this.Query_FloTVProvisionDataHistoryOperationCompleted, userState);
        }
        
        private void OnQuery_FloTVProvisionDataHistoryOperationCompleted(object arg) {
            if ((this.Query_FloTVProvisionDataHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Query_FloTVProvisionDataHistoryCompleted(this, new Query_FloTVProvisionDataHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_FloTV_ASN_data_TEMP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string get_FloTV_ASN_data_TEMP(System.Data.DataSet Lds_query, ref string errMsg) {
            object[] results = this.Invoke("get_FloTV_ASN_data_TEMP", new object[] {
                        Lds_query,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_FloTV_ASN_data_TEMPAsync(System.Data.DataSet Lds_query, string errMsg) {
            this.get_FloTV_ASN_data_TEMPAsync(Lds_query, errMsg, null);
        }
        
        /// <remarks/>
        public void get_FloTV_ASN_data_TEMPAsync(System.Data.DataSet Lds_query, string errMsg, object userState) {
            if ((this.get_FloTV_ASN_data_TEMPOperationCompleted == null)) {
                this.get_FloTV_ASN_data_TEMPOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_FloTV_ASN_data_TEMPOperationCompleted);
            }
            this.InvokeAsync("get_FloTV_ASN_data_TEMP", new object[] {
                        Lds_query,
                        errMsg}, this.get_FloTV_ASN_data_TEMPOperationCompleted, userState);
        }
        
        private void Onget_FloTV_ASN_data_TEMPOperationCompleted(object arg) {
            if ((this.get_FloTV_ASN_data_TEMPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_FloTV_ASN_data_TEMPCompleted(this, new get_FloTV_ASN_data_TEMPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_FloTV_ASN_data", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string get_FloTV_ASN_data(System.Data.DataSet Lds_query, ref string errMsg) {
            object[] results = this.Invoke("get_FloTV_ASN_data", new object[] {
                        Lds_query,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_FloTV_ASN_dataAsync(System.Data.DataSet Lds_query, string errMsg) {
            this.get_FloTV_ASN_dataAsync(Lds_query, errMsg, null);
        }
        
        /// <remarks/>
        public void get_FloTV_ASN_dataAsync(System.Data.DataSet Lds_query, string errMsg, object userState) {
            if ((this.get_FloTV_ASN_dataOperationCompleted == null)) {
                this.get_FloTV_ASN_dataOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_FloTV_ASN_dataOperationCompleted);
            }
            this.InvokeAsync("get_FloTV_ASN_data", new object[] {
                        Lds_query,
                        errMsg}, this.get_FloTV_ASN_dataOperationCompleted, userState);
        }
        
        private void Onget_FloTV_ASN_dataOperationCompleted(object arg) {
            if ((this.get_FloTV_ASN_dataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_FloTV_ASN_dataCompleted(this, new get_FloTV_ASN_dataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_SkyRocket_ASN_data", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string get_SkyRocket_ASN_data(System.Data.DataSet Lds_query, ref string errMsg) {
            object[] results = this.Invoke("get_SkyRocket_ASN_data", new object[] {
                        Lds_query,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_SkyRocket_ASN_dataAsync(System.Data.DataSet Lds_query, string errMsg) {
            this.get_SkyRocket_ASN_dataAsync(Lds_query, errMsg, null);
        }
        
        /// <remarks/>
        public void get_SkyRocket_ASN_dataAsync(System.Data.DataSet Lds_query, string errMsg, object userState) {
            if ((this.get_SkyRocket_ASN_dataOperationCompleted == null)) {
                this.get_SkyRocket_ASN_dataOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_SkyRocket_ASN_dataOperationCompleted);
            }
            this.InvokeAsync("get_SkyRocket_ASN_data", new object[] {
                        Lds_query,
                        errMsg}, this.get_SkyRocket_ASN_dataOperationCompleted, userState);
        }
        
        private void Onget_SkyRocket_ASN_dataOperationCompleted(object arg) {
            if ((this.get_SkyRocket_ASN_dataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_SkyRocket_ASN_dataCompleted(this, new get_SkyRocket_ASN_dataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_SkyRocket_ASN_data_temp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string get_SkyRocket_ASN_data_temp(System.Data.DataSet Lds_query, string ls_mo, ref string errMsg) {
            object[] results = this.Invoke("get_SkyRocket_ASN_data_temp", new object[] {
                        Lds_query,
                        ls_mo,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_SkyRocket_ASN_data_tempAsync(System.Data.DataSet Lds_query, string ls_mo, string errMsg) {
            this.get_SkyRocket_ASN_data_tempAsync(Lds_query, ls_mo, errMsg, null);
        }
        
        /// <remarks/>
        public void get_SkyRocket_ASN_data_tempAsync(System.Data.DataSet Lds_query, string ls_mo, string errMsg, object userState) {
            if ((this.get_SkyRocket_ASN_data_tempOperationCompleted == null)) {
                this.get_SkyRocket_ASN_data_tempOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_SkyRocket_ASN_data_tempOperationCompleted);
            }
            this.InvokeAsync("get_SkyRocket_ASN_data_temp", new object[] {
                        Lds_query,
                        ls_mo,
                        errMsg}, this.get_SkyRocket_ASN_data_tempOperationCompleted, userState);
        }
        
        private void Onget_SkyRocket_ASN_data_tempOperationCompleted(object arg) {
            if ((this.get_SkyRocket_ASN_data_tempCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_SkyRocket_ASN_data_tempCompleted(this, new get_SkyRocket_ASN_data_tempCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/del_FloTV_SN_CSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool del_FloTV_SN_CSN(string OEM_SN, System.Data.DataSet Lds_CPN, ref string errMsg) {
            object[] results = this.Invoke("del_FloTV_SN_CSN", new object[] {
                        OEM_SN,
                        Lds_CPN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void del_FloTV_SN_CSNAsync(string OEM_SN, System.Data.DataSet Lds_CPN, string errMsg) {
            this.del_FloTV_SN_CSNAsync(OEM_SN, Lds_CPN, errMsg, null);
        }
        
        /// <remarks/>
        public void del_FloTV_SN_CSNAsync(string OEM_SN, System.Data.DataSet Lds_CPN, string errMsg, object userState) {
            if ((this.del_FloTV_SN_CSNOperationCompleted == null)) {
                this.del_FloTV_SN_CSNOperationCompleted = new System.Threading.SendOrPostCallback(this.Ondel_FloTV_SN_CSNOperationCompleted);
            }
            this.InvokeAsync("del_FloTV_SN_CSN", new object[] {
                        OEM_SN,
                        Lds_CPN,
                        errMsg}, this.del_FloTV_SN_CSNOperationCompleted, userState);
        }
        
        private void Ondel_FloTV_SN_CSNOperationCompleted(object arg) {
            if ((this.del_FloTV_SN_CSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.del_FloTV_SN_CSNCompleted(this, new del_FloTV_SN_CSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_SFCS_APP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GET_SFCS_APP(string ip, ref string errMsg) {
            object[] results = this.Invoke("GET_SFCS_APP", new object[] {
                        ip,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GET_SFCS_APPAsync(string ip, string errMsg) {
            this.GET_SFCS_APPAsync(ip, errMsg, null);
        }
        
        /// <remarks/>
        public void GET_SFCS_APPAsync(string ip, string errMsg, object userState) {
            if ((this.GET_SFCS_APPOperationCompleted == null)) {
                this.GET_SFCS_APPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_SFCS_APPOperationCompleted);
            }
            this.InvokeAsync("GET_SFCS_APP", new object[] {
                        ip,
                        errMsg}, this.GET_SFCS_APPOperationCompleted, userState);
        }
        
        private void OnGET_SFCS_APPOperationCompleted(object arg) {
            if ((this.GET_SFCS_APPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_SFCS_APPCompleted(this, new GET_SFCS_APPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_SPN_STAGE_ChkTextFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GET_SPN_STAGE_ChkTextFile(string PN, string Stage, ref string ErrMsg) {
            object[] results = this.Invoke("GET_SPN_STAGE_ChkTextFile", new object[] {
                        PN,
                        Stage,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GET_SPN_STAGE_ChkTextFileAsync(string PN, string Stage, string ErrMsg) {
            this.GET_SPN_STAGE_ChkTextFileAsync(PN, Stage, ErrMsg, null);
        }
        
        /// <remarks/>
        public void GET_SPN_STAGE_ChkTextFileAsync(string PN, string Stage, string ErrMsg, object userState) {
            if ((this.GET_SPN_STAGE_ChkTextFileOperationCompleted == null)) {
                this.GET_SPN_STAGE_ChkTextFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_SPN_STAGE_ChkTextFileOperationCompleted);
            }
            this.InvokeAsync("GET_SPN_STAGE_ChkTextFile", new object[] {
                        PN,
                        Stage,
                        ErrMsg}, this.GET_SPN_STAGE_ChkTextFileOperationCompleted, userState);
        }
        
        private void OnGET_SPN_STAGE_ChkTextFileOperationCompleted(object arg) {
            if ((this.GET_SPN_STAGE_ChkTextFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_SPN_STAGE_ChkTextFileCompleted(this, new GET_SPN_STAGE_ChkTextFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_SPN_STAGE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GET_SPN_STAGE(string PN, string Stage, ref string ErrMsg) {
            object[] results = this.Invoke("GET_SPN_STAGE", new object[] {
                        PN,
                        Stage,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GET_SPN_STAGEAsync(string PN, string Stage, string ErrMsg) {
            this.GET_SPN_STAGEAsync(PN, Stage, ErrMsg, null);
        }
        
        /// <remarks/>
        public void GET_SPN_STAGEAsync(string PN, string Stage, string ErrMsg, object userState) {
            if ((this.GET_SPN_STAGEOperationCompleted == null)) {
                this.GET_SPN_STAGEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_SPN_STAGEOperationCompleted);
            }
            this.InvokeAsync("GET_SPN_STAGE", new object[] {
                        PN,
                        Stage,
                        ErrMsg}, this.GET_SPN_STAGEOperationCompleted, userState);
        }
        
        private void OnGET_SPN_STAGEOperationCompleted(object arg) {
            if ((this.GET_SPN_STAGECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_SPN_STAGECompleted(this, new GET_SPN_STAGECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SET_SPN_STAGE_ChkTextFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SET_SPN_STAGE_ChkTextFile(string PN, string Stage, string CHK_TEXTFILE, ref string ErrMsg) {
            object[] results = this.Invoke("SET_SPN_STAGE_ChkTextFile", new object[] {
                        PN,
                        Stage,
                        CHK_TEXTFILE,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SET_SPN_STAGE_ChkTextFileAsync(string PN, string Stage, string CHK_TEXTFILE, string ErrMsg) {
            this.SET_SPN_STAGE_ChkTextFileAsync(PN, Stage, CHK_TEXTFILE, ErrMsg, null);
        }
        
        /// <remarks/>
        public void SET_SPN_STAGE_ChkTextFileAsync(string PN, string Stage, string CHK_TEXTFILE, string ErrMsg, object userState) {
            if ((this.SET_SPN_STAGE_ChkTextFileOperationCompleted == null)) {
                this.SET_SPN_STAGE_ChkTextFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSET_SPN_STAGE_ChkTextFileOperationCompleted);
            }
            this.InvokeAsync("SET_SPN_STAGE_ChkTextFile", new object[] {
                        PN,
                        Stage,
                        CHK_TEXTFILE,
                        ErrMsg}, this.SET_SPN_STAGE_ChkTextFileOperationCompleted, userState);
        }
        
        private void OnSET_SPN_STAGE_ChkTextFileOperationCompleted(object arg) {
            if ((this.SET_SPN_STAGE_ChkTextFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SET_SPN_STAGE_ChkTextFileCompleted(this, new SET_SPN_STAGE_ChkTextFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ECN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Get_ECN(string Vs_DOC_ID, ref string ErrMsg) {
            object[] results = this.Invoke("Get_ECN", new object[] {
                        Vs_DOC_ID,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Get_ECNAsync(string Vs_DOC_ID, string ErrMsg) {
            this.Get_ECNAsync(Vs_DOC_ID, ErrMsg, null);
        }
        
        /// <remarks/>
        public void Get_ECNAsync(string Vs_DOC_ID, string ErrMsg, object userState) {
            if ((this.Get_ECNOperationCompleted == null)) {
                this.Get_ECNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ECNOperationCompleted);
            }
            this.InvokeAsync("Get_ECN", new object[] {
                        Vs_DOC_ID,
                        ErrMsg}, this.Get_ECNOperationCompleted, userState);
        }
        
        private void OnGet_ECNOperationCompleted(object arg) {
            if ((this.Get_ECNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ECNCompleted(this, new Get_ECNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_TPI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Get_TPI(string Vs_DOC_ID, ref string ErrMsg) {
            object[] results = this.Invoke("Get_TPI", new object[] {
                        Vs_DOC_ID,
                        ErrMsg});
            ErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Get_TPIAsync(string Vs_DOC_ID, string ErrMsg) {
            this.Get_TPIAsync(Vs_DOC_ID, ErrMsg, null);
        }
        
        /// <remarks/>
        public void Get_TPIAsync(string Vs_DOC_ID, string ErrMsg, object userState) {
            if ((this.Get_TPIOperationCompleted == null)) {
                this.Get_TPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_TPIOperationCompleted);
            }
            this.InvokeAsync("Get_TPI", new object[] {
                        Vs_DOC_ID,
                        ErrMsg}, this.Get_TPIOperationCompleted, userState);
        }
        
        private void OnGet_TPIOperationCompleted(object arg) {
            if ((this.Get_TPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_TPICompleted(this, new Get_TPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Start_Production", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Start_Production(string IP, string SPN, string STAGE, string OP_ID, string OP_ID2, ref string errMsg) {
            object[] results = this.Invoke("Start_Production", new object[] {
                        IP,
                        SPN,
                        STAGE,
                        OP_ID,
                        OP_ID2,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Start_ProductionAsync(string IP, string SPN, string STAGE, string OP_ID, string OP_ID2, string errMsg) {
            this.Start_ProductionAsync(IP, SPN, STAGE, OP_ID, OP_ID2, errMsg, null);
        }
        
        /// <remarks/>
        public void Start_ProductionAsync(string IP, string SPN, string STAGE, string OP_ID, string OP_ID2, string errMsg, object userState) {
            if ((this.Start_ProductionOperationCompleted == null)) {
                this.Start_ProductionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStart_ProductionOperationCompleted);
            }
            this.InvokeAsync("Start_Production", new object[] {
                        IP,
                        SPN,
                        STAGE,
                        OP_ID,
                        OP_ID2,
                        errMsg}, this.Start_ProductionOperationCompleted, userState);
        }
        
        private void OnStart_ProductionOperationCompleted(object arg) {
            if ((this.Start_ProductionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Start_ProductionCompleted(this, new Start_ProductionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_RandomKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Get_RandomKey(string Vs_Mac, ref string Rs_RandomKey, ref string Rs_ErrorMsg) {
            object[] results = this.Invoke("Get_RandomKey", new object[] {
                        Vs_Mac,
                        Rs_RandomKey,
                        Rs_ErrorMsg});
            Rs_RandomKey = ((string)(results[1]));
            Rs_ErrorMsg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Get_RandomKeyAsync(string Vs_Mac, string Rs_RandomKey, string Rs_ErrorMsg) {
            this.Get_RandomKeyAsync(Vs_Mac, Rs_RandomKey, Rs_ErrorMsg, null);
        }
        
        /// <remarks/>
        public void Get_RandomKeyAsync(string Vs_Mac, string Rs_RandomKey, string Rs_ErrorMsg, object userState) {
            if ((this.Get_RandomKeyOperationCompleted == null)) {
                this.Get_RandomKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_RandomKeyOperationCompleted);
            }
            this.InvokeAsync("Get_RandomKey", new object[] {
                        Vs_Mac,
                        Rs_RandomKey,
                        Rs_ErrorMsg}, this.Get_RandomKeyOperationCompleted, userState);
        }
        
        private void OnGet_RandomKeyOperationCompleted(object arg) {
            if ((this.Get_RandomKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_RandomKeyCompleted(this, new Get_RandomKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertSPIfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool insertSPIfile(string mb_prod_ssn, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] spi_file, ref string errMsg) {
            object[] results = this.Invoke("insertSPIfile", new object[] {
                        mb_prod_ssn,
                        spi_file,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertSPIfileAsync(string mb_prod_ssn, byte[] spi_file, string errMsg) {
            this.insertSPIfileAsync(mb_prod_ssn, spi_file, errMsg, null);
        }
        
        /// <remarks/>
        public void insertSPIfileAsync(string mb_prod_ssn, byte[] spi_file, string errMsg, object userState) {
            if ((this.insertSPIfileOperationCompleted == null)) {
                this.insertSPIfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertSPIfileOperationCompleted);
            }
            this.InvokeAsync("insertSPIfile", new object[] {
                        mb_prod_ssn,
                        spi_file,
                        errMsg}, this.insertSPIfileOperationCompleted, userState);
        }
        
        private void OninsertSPIfileOperationCompleted(object arg) {
            if ((this.insertSPIfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertSPIfileCompleted(this, new insertSPIfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectSPIfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] selectSPIfile(string mb_prod_ssn, ref string errMsg) {
            object[] results = this.Invoke("selectSPIfile", new object[] {
                        mb_prod_ssn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void selectSPIfileAsync(string mb_prod_ssn, string errMsg) {
            this.selectSPIfileAsync(mb_prod_ssn, errMsg, null);
        }
        
        /// <remarks/>
        public void selectSPIfileAsync(string mb_prod_ssn, string errMsg, object userState) {
            if ((this.selectSPIfileOperationCompleted == null)) {
                this.selectSPIfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectSPIfileOperationCompleted);
            }
            this.InvokeAsync("selectSPIfile", new object[] {
                        mb_prod_ssn,
                        errMsg}, this.selectSPIfileOperationCompleted, userState);
        }
        
        private void OnselectSPIfileOperationCompleted(object arg) {
            if ((this.selectSPIfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectSPIfileCompleted(this, new selectSPIfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSPIfileMb", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSPIfileMb(string mb_prod_ssn, ref string errMsg) {
            object[] results = this.Invoke("getSPIfileMb", new object[] {
                        mb_prod_ssn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSPIfileMbAsync(string mb_prod_ssn, string errMsg) {
            this.getSPIfileMbAsync(mb_prod_ssn, errMsg, null);
        }
        
        /// <remarks/>
        public void getSPIfileMbAsync(string mb_prod_ssn, string errMsg, object userState) {
            if ((this.getSPIfileMbOperationCompleted == null)) {
                this.getSPIfileMbOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSPIfileMbOperationCompleted);
            }
            this.InvokeAsync("getSPIfileMb", new object[] {
                        mb_prod_ssn,
                        errMsg}, this.getSPIfileMbOperationCompleted, userState);
        }
        
        private void OngetSPIfileMbOperationCompleted(object arg) {
            if ((this.getSPIfileMbCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSPIfileMbCompleted(this, new getSPIfileMbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertQSNfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool insertQSNfile(string sn, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] test_file, ref string errMsg) {
            object[] results = this.Invoke("insertQSNfile", new object[] {
                        sn,
                        test_file,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertQSNfileAsync(string sn, byte[] test_file, string errMsg) {
            this.insertQSNfileAsync(sn, test_file, errMsg, null);
        }
        
        /// <remarks/>
        public void insertQSNfileAsync(string sn, byte[] test_file, string errMsg, object userState) {
            if ((this.insertQSNfileOperationCompleted == null)) {
                this.insertQSNfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertQSNfileOperationCompleted);
            }
            this.InvokeAsync("insertQSNfile", new object[] {
                        sn,
                        test_file,
                        errMsg}, this.insertQSNfileOperationCompleted, userState);
        }
        
        private void OninsertQSNfileOperationCompleted(object arg) {
            if ((this.insertQSNfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertQSNfileCompleted(this, new insertQSNfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectQSNfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] selectQSNfile(string sn, ref string errMsg) {
            object[] results = this.Invoke("selectQSNfile", new object[] {
                        sn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void selectQSNfileAsync(string sn, string errMsg) {
            this.selectQSNfileAsync(sn, errMsg, null);
        }
        
        /// <remarks/>
        public void selectQSNfileAsync(string sn, string errMsg, object userState) {
            if ((this.selectQSNfileOperationCompleted == null)) {
                this.selectQSNfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectQSNfileOperationCompleted);
            }
            this.InvokeAsync("selectQSNfile", new object[] {
                        sn,
                        errMsg}, this.selectQSNfileOperationCompleted, userState);
        }
        
        private void OnselectQSNfileOperationCompleted(object arg) {
            if ((this.selectQSNfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectQSNfileCompleted(this, new selectQSNfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getQSNfileSn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getQSNfileSn(string sn, ref string errMsg) {
            object[] results = this.Invoke("getQSNfileSn", new object[] {
                        sn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getQSNfileSnAsync(string sn, string errMsg) {
            this.getQSNfileSnAsync(sn, errMsg, null);
        }
        
        /// <remarks/>
        public void getQSNfileSnAsync(string sn, string errMsg, object userState) {
            if ((this.getQSNfileSnOperationCompleted == null)) {
                this.getQSNfileSnOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQSNfileSnOperationCompleted);
            }
            this.InvokeAsync("getQSNfileSn", new object[] {
                        sn,
                        errMsg}, this.getQSNfileSnOperationCompleted, userState);
        }
        
        private void OngetQSNfileSnOperationCompleted(object arg) {
            if ((this.getQSNfileSnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQSNfileSnCompleted(this, new getQSNfileSnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getQSNByAnyPhaseSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getQSNByAnyPhaseSN(string sn, ref string errMsg) {
            object[] results = this.Invoke("getQSNByAnyPhaseSN", new object[] {
                        sn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getQSNByAnyPhaseSNAsync(string sn, string errMsg) {
            this.getQSNByAnyPhaseSNAsync(sn, errMsg, null);
        }
        
        /// <remarks/>
        public void getQSNByAnyPhaseSNAsync(string sn, string errMsg, object userState) {
            if ((this.getQSNByAnyPhaseSNOperationCompleted == null)) {
                this.getQSNByAnyPhaseSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQSNByAnyPhaseSNOperationCompleted);
            }
            this.InvokeAsync("getQSNByAnyPhaseSN", new object[] {
                        sn,
                        errMsg}, this.getQSNByAnyPhaseSNOperationCompleted, userState);
        }
        
        private void OngetQSNByAnyPhaseSNOperationCompleted(object arg) {
            if ((this.getQSNByAnyPhaseSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQSNByAnyPhaseSNCompleted(this, new getQSNByAnyPhaseSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSN_TourCnt_By_IP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSN_TourCnt_By_IP(string sn, string ip, ref string errMsg) {
            object[] results = this.Invoke("getSN_TourCnt_By_IP", new object[] {
                        sn,
                        ip,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSN_TourCnt_By_IPAsync(string sn, string ip, string errMsg) {
            this.getSN_TourCnt_By_IPAsync(sn, ip, errMsg, null);
        }
        
        /// <remarks/>
        public void getSN_TourCnt_By_IPAsync(string sn, string ip, string errMsg, object userState) {
            if ((this.getSN_TourCnt_By_IPOperationCompleted == null)) {
                this.getSN_TourCnt_By_IPOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSN_TourCnt_By_IPOperationCompleted);
            }
            this.InvokeAsync("getSN_TourCnt_By_IP", new object[] {
                        sn,
                        ip,
                        errMsg}, this.getSN_TourCnt_By_IPOperationCompleted, userState);
        }
        
        private void OngetSN_TourCnt_By_IPOperationCompleted(object arg) {
            if ((this.getSN_TourCnt_By_IPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSN_TourCnt_By_IPCompleted(this, new getSN_TourCnt_By_IPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPersonalizationInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getPersonalizationInfo(string spn, ref string errMsg) {
            object[] results = this.Invoke("getPersonalizationInfo", new object[] {
                        spn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getPersonalizationInfoAsync(string spn, string errMsg) {
            this.getPersonalizationInfoAsync(spn, errMsg, null);
        }
        
        /// <remarks/>
        public void getPersonalizationInfoAsync(string spn, string errMsg, object userState) {
            if ((this.getPersonalizationInfoOperationCompleted == null)) {
                this.getPersonalizationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonalizationInfoOperationCompleted);
            }
            this.InvokeAsync("getPersonalizationInfo", new object[] {
                        spn,
                        errMsg}, this.getPersonalizationInfoOperationCompleted, userState);
        }
        
        private void OngetPersonalizationInfoOperationCompleted(object arg) {
            if ((this.getPersonalizationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonalizationInfoCompleted(this, new getPersonalizationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deletePersonalizationInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deletePersonalizationInfo(string spn, int seq, string code_name, ref string errMsg) {
            object[] results = this.Invoke("deletePersonalizationInfo", new object[] {
                        spn,
                        seq,
                        code_name,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deletePersonalizationInfoAsync(string spn, int seq, string code_name, string errMsg) {
            this.deletePersonalizationInfoAsync(spn, seq, code_name, errMsg, null);
        }
        
        /// <remarks/>
        public void deletePersonalizationInfoAsync(string spn, int seq, string code_name, string errMsg, object userState) {
            if ((this.deletePersonalizationInfoOperationCompleted == null)) {
                this.deletePersonalizationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePersonalizationInfoOperationCompleted);
            }
            this.InvokeAsync("deletePersonalizationInfo", new object[] {
                        spn,
                        seq,
                        code_name,
                        errMsg}, this.deletePersonalizationInfoOperationCompleted, userState);
        }
        
        private void OndeletePersonalizationInfoOperationCompleted(object arg) {
            if ((this.deletePersonalizationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePersonalizationInfoCompleted(this, new deletePersonalizationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPersonalizationInfo_by_seq", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getPersonalizationInfo_by_seq(int seq, string spn, string code_name, ref string errMsg) {
            object[] results = this.Invoke("getPersonalizationInfo_by_seq", new object[] {
                        seq,
                        spn,
                        code_name,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getPersonalizationInfo_by_seqAsync(int seq, string spn, string code_name, string errMsg) {
            this.getPersonalizationInfo_by_seqAsync(seq, spn, code_name, errMsg, null);
        }
        
        /// <remarks/>
        public void getPersonalizationInfo_by_seqAsync(int seq, string spn, string code_name, string errMsg, object userState) {
            if ((this.getPersonalizationInfo_by_seqOperationCompleted == null)) {
                this.getPersonalizationInfo_by_seqOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonalizationInfo_by_seqOperationCompleted);
            }
            this.InvokeAsync("getPersonalizationInfo_by_seq", new object[] {
                        seq,
                        spn,
                        code_name,
                        errMsg}, this.getPersonalizationInfo_by_seqOperationCompleted, userState);
        }
        
        private void OngetPersonalizationInfo_by_seqOperationCompleted(object arg) {
            if ((this.getPersonalizationInfo_by_seqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonalizationInfo_by_seqCompleted(this, new getPersonalizationInfo_by_seqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updatePersonalizationInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updatePersonalizationInfo(int seq, string spn, string code_name, string code_value, string op, ref string errMsg) {
            object[] results = this.Invoke("updatePersonalizationInfo", new object[] {
                        seq,
                        spn,
                        code_name,
                        code_value,
                        op,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updatePersonalizationInfoAsync(int seq, string spn, string code_name, string code_value, string op, string errMsg) {
            this.updatePersonalizationInfoAsync(seq, spn, code_name, code_value, op, errMsg, null);
        }
        
        /// <remarks/>
        public void updatePersonalizationInfoAsync(int seq, string spn, string code_name, string code_value, string op, string errMsg, object userState) {
            if ((this.updatePersonalizationInfoOperationCompleted == null)) {
                this.updatePersonalizationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePersonalizationInfoOperationCompleted);
            }
            this.InvokeAsync("updatePersonalizationInfo", new object[] {
                        seq,
                        spn,
                        code_name,
                        code_value,
                        op,
                        errMsg}, this.updatePersonalizationInfoOperationCompleted, userState);
        }
        
        private void OnupdatePersonalizationInfoOperationCompleted(object arg) {
            if ((this.updatePersonalizationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePersonalizationInfoCompleted(this, new updatePersonalizationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BatchUpdate(System.Data.DataSet ds, ref string errMsg) {
            object[] results = this.Invoke("BatchUpdate", new object[] {
                        ds,
                        errMsg});
            errMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BatchUpdateAsync(System.Data.DataSet ds, string errMsg) {
            this.BatchUpdateAsync(ds, errMsg, null);
        }
        
        /// <remarks/>
        public void BatchUpdateAsync(System.Data.DataSet ds, string errMsg, object userState) {
            if ((this.BatchUpdateOperationCompleted == null)) {
                this.BatchUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchUpdateOperationCompleted);
            }
            this.InvokeAsync("BatchUpdate", new object[] {
                        ds,
                        errMsg}, this.BatchUpdateOperationCompleted, userState);
        }
        
        private void OnBatchUpdateOperationCompleted(object arg) {
            if ((this.BatchUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchUpdateCompleted(this, new BatchUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setPersonalizationInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setPersonalizationInfo(System.Data.DataSet ds, ref string errMsg) {
            object[] results = this.Invoke("setPersonalizationInfo", new object[] {
                        ds,
                        errMsg});
            errMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setPersonalizationInfoAsync(System.Data.DataSet ds, string errMsg) {
            this.setPersonalizationInfoAsync(ds, errMsg, null);
        }
        
        /// <remarks/>
        public void setPersonalizationInfoAsync(System.Data.DataSet ds, string errMsg, object userState) {
            if ((this.setPersonalizationInfoOperationCompleted == null)) {
                this.setPersonalizationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPersonalizationInfoOperationCompleted);
            }
            this.InvokeAsync("setPersonalizationInfo", new object[] {
                        ds,
                        errMsg}, this.setPersonalizationInfoOperationCompleted, userState);
        }
        
        private void OnsetPersonalizationInfoOperationCompleted(object arg) {
            if ((this.setPersonalizationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPersonalizationInfoCompleted(this, new setPersonalizationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCNTabl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getCNTabl(ref string CN, ref string errMsg) {
            object[] results = this.Invoke("getCNTabl", new object[] {
                        CN,
                        errMsg});
            CN = ((string)(results[1]));
            errMsg = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getCNTablAsync(string CN, string errMsg) {
            this.getCNTablAsync(CN, errMsg, null);
        }
        
        /// <remarks/>
        public void getCNTablAsync(string CN, string errMsg, object userState) {
            if ((this.getCNTablOperationCompleted == null)) {
                this.getCNTablOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCNTablOperationCompleted);
            }
            this.InvokeAsync("getCNTabl", new object[] {
                        CN,
                        errMsg}, this.getCNTablOperationCompleted, userState);
        }
        
        private void OngetCNTablOperationCompleted(object arg) {
            if ((this.getCNTablCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCNTablCompleted(this, new getCNTablCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPNTabl_byCN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getPNTabl_byCN(ref string CN, ref string errMsg) {
            object[] results = this.Invoke("getPNTabl_byCN", new object[] {
                        CN,
                        errMsg});
            CN = ((string)(results[1]));
            errMsg = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getPNTabl_byCNAsync(string CN, string errMsg) {
            this.getPNTabl_byCNAsync(CN, errMsg, null);
        }
        
        /// <remarks/>
        public void getPNTabl_byCNAsync(string CN, string errMsg, object userState) {
            if ((this.getPNTabl_byCNOperationCompleted == null)) {
                this.getPNTabl_byCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPNTabl_byCNOperationCompleted);
            }
            this.InvokeAsync("getPNTabl_byCN", new object[] {
                        CN,
                        errMsg}, this.getPNTabl_byCNOperationCompleted, userState);
        }
        
        private void OngetPNTabl_byCNOperationCompleted(object arg) {
            if ((this.getPNTabl_byCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPNTabl_byCNCompleted(this, new getPNTabl_byCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPNTabl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getPNTabl(ref string errMsg) {
            object[] results = this.Invoke("getPNTabl", new object[] {
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getPNTablAsync(string errMsg) {
            this.getPNTablAsync(errMsg, null);
        }
        
        /// <remarks/>
        public void getPNTablAsync(string errMsg, object userState) {
            if ((this.getPNTablOperationCompleted == null)) {
                this.getPNTablOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPNTablOperationCompleted);
            }
            this.InvokeAsync("getPNTabl", new object[] {
                        errMsg}, this.getPNTablOperationCompleted, userState);
        }
        
        private void OngetPNTablOperationCompleted(object arg) {
            if ((this.getPNTablCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPNTablCompleted(this, new getPNTablCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCodeValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCodeValue(string PN, string CODE_NAME, ref string errMsg) {
            object[] results = this.Invoke("getCodeValue", new object[] {
                        PN,
                        CODE_NAME,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCodeValueAsync(string PN, string CODE_NAME, string errMsg) {
            this.getCodeValueAsync(PN, CODE_NAME, errMsg, null);
        }
        
        /// <remarks/>
        public void getCodeValueAsync(string PN, string CODE_NAME, string errMsg, object userState) {
            if ((this.getCodeValueOperationCompleted == null)) {
                this.getCodeValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCodeValueOperationCompleted);
            }
            this.InvokeAsync("getCodeValue", new object[] {
                        PN,
                        CODE_NAME,
                        errMsg}, this.getCodeValueOperationCompleted, userState);
        }
        
        private void OngetCodeValueOperationCompleted(object arg) {
            if ((this.getCodeValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCodeValueCompleted(this, new getCodeValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSmtByPSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSmtByPSN(string psn, ref string errmsg) {
            object[] results = this.Invoke("getSmtByPSN", new object[] {
                        psn,
                        errmsg});
            errmsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSmtByPSNAsync(string psn, string errmsg) {
            this.getSmtByPSNAsync(psn, errmsg, null);
        }
        
        /// <remarks/>
        public void getSmtByPSNAsync(string psn, string errmsg, object userState) {
            if ((this.getSmtByPSNOperationCompleted == null)) {
                this.getSmtByPSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSmtByPSNOperationCompleted);
            }
            this.InvokeAsync("getSmtByPSN", new object[] {
                        psn,
                        errmsg}, this.getSmtByPSNOperationCompleted, userState);
        }
        
        private void OngetSmtByPSNOperationCompleted(object arg) {
            if ((this.getSmtByPSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSmtByPSNCompleted(this, new getSmtByPSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chkMacByMacName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool chkMacByMacName(string sn, string mac, string mac_name, ref string errMsg) {
            object[] results = this.Invoke("chkMacByMacName", new object[] {
                        sn,
                        mac,
                        mac_name,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void chkMacByMacNameAsync(string sn, string mac, string mac_name, string errMsg) {
            this.chkMacByMacNameAsync(sn, mac, mac_name, errMsg, null);
        }
        
        /// <remarks/>
        public void chkMacByMacNameAsync(string sn, string mac, string mac_name, string errMsg, object userState) {
            if ((this.chkMacByMacNameOperationCompleted == null)) {
                this.chkMacByMacNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchkMacByMacNameOperationCompleted);
            }
            this.InvokeAsync("chkMacByMacName", new object[] {
                        sn,
                        mac,
                        mac_name,
                        errMsg}, this.chkMacByMacNameOperationCompleted, userState);
        }
        
        private void OnchkMacByMacNameOperationCompleted(object arg) {
            if ((this.chkMacByMacNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chkMacByMacNameCompleted(this, new chkMacByMacNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ATS_chkHold", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ATS_chkHold(string sn, ref string errMsg) {
            object[] results = this.Invoke("ATS_chkHold", new object[] {
                        sn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ATS_chkHoldAsync(string sn, string errMsg) {
            this.ATS_chkHoldAsync(sn, errMsg, null);
        }
        
        /// <remarks/>
        public void ATS_chkHoldAsync(string sn, string errMsg, object userState) {
            if ((this.ATS_chkHoldOperationCompleted == null)) {
                this.ATS_chkHoldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnATS_chkHoldOperationCompleted);
            }
            this.InvokeAsync("ATS_chkHold", new object[] {
                        sn,
                        errMsg}, this.ATS_chkHoldOperationCompleted, userState);
        }
        
        private void OnATS_chkHoldOperationCompleted(object arg) {
            if ((this.ATS_chkHoldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ATS_chkHoldCompleted(this, new ATS_chkHoldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ATS_chkRepairReturn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ATS_chkRepairReturn(string sn, ref string errMsg) {
            object[] results = this.Invoke("ATS_chkRepairReturn", new object[] {
                        sn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ATS_chkRepairReturnAsync(string sn, string errMsg) {
            this.ATS_chkRepairReturnAsync(sn, errMsg, null);
        }
        
        /// <remarks/>
        public void ATS_chkRepairReturnAsync(string sn, string errMsg, object userState) {
            if ((this.ATS_chkRepairReturnOperationCompleted == null)) {
                this.ATS_chkRepairReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnATS_chkRepairReturnOperationCompleted);
            }
            this.InvokeAsync("ATS_chkRepairReturn", new object[] {
                        sn,
                        errMsg}, this.ATS_chkRepairReturnOperationCompleted, userState);
        }
        
        private void OnATS_chkRepairReturnOperationCompleted(object arg) {
            if ((this.ATS_chkRepairReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ATS_chkRepairReturnCompleted(this, new ATS_chkRepairReturnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSPC_FLEXFIELD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSPC_FLEXFIELD(string CSN, ref string errMsg) {
            object[] results = this.Invoke("getSPC_FLEXFIELD", new object[] {
                        CSN,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSPC_FLEXFIELDAsync(string CSN, string errMsg) {
            this.getSPC_FLEXFIELDAsync(CSN, errMsg, null);
        }
        
        /// <remarks/>
        public void getSPC_FLEXFIELDAsync(string CSN, string errMsg, object userState) {
            if ((this.getSPC_FLEXFIELDOperationCompleted == null)) {
                this.getSPC_FLEXFIELDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSPC_FLEXFIELDOperationCompleted);
            }
            this.InvokeAsync("getSPC_FLEXFIELD", new object[] {
                        CSN,
                        errMsg}, this.getSPC_FLEXFIELDOperationCompleted, userState);
        }
        
        private void OngetSPC_FLEXFIELDOperationCompleted(object arg) {
            if ((this.getSPC_FLEXFIELDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSPC_FLEXFIELDCompleted(this, new getSPC_FLEXFIELDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ATS_chkNextStage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ATS_chkNextStage(string psn, string ip, ref string errMsg) {
            object[] results = this.Invoke("ATS_chkNextStage", new object[] {
                        psn,
                        ip,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ATS_chkNextStageAsync(string psn, string ip, string errMsg) {
            this.ATS_chkNextStageAsync(psn, ip, errMsg, null);
        }
        
        /// <remarks/>
        public void ATS_chkNextStageAsync(string psn, string ip, string errMsg, object userState) {
            if ((this.ATS_chkNextStageOperationCompleted == null)) {
                this.ATS_chkNextStageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnATS_chkNextStageOperationCompleted);
            }
            this.InvokeAsync("ATS_chkNextStage", new object[] {
                        psn,
                        ip,
                        errMsg}, this.ATS_chkNextStageOperationCompleted, userState);
        }
        
        private void OnATS_chkNextStageOperationCompleted(object arg) {
            if ((this.ATS_chkNextStageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ATS_chkNextStageCompleted(this, new ATS_chkNextStageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveFwToSfcsBySn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveFwToSfcsBySn(string sn, string fw, string ip, ref string errMsg) {
            object[] results = this.Invoke("saveFwToSfcsBySn", new object[] {
                        sn,
                        fw,
                        ip,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveFwToSfcsBySnAsync(string sn, string fw, string ip, string errMsg) {
            this.saveFwToSfcsBySnAsync(sn, fw, ip, errMsg, null);
        }
        
        /// <remarks/>
        public void saveFwToSfcsBySnAsync(string sn, string fw, string ip, string errMsg, object userState) {
            if ((this.saveFwToSfcsBySnOperationCompleted == null)) {
                this.saveFwToSfcsBySnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveFwToSfcsBySnOperationCompleted);
            }
            this.InvokeAsync("saveFwToSfcsBySn", new object[] {
                        sn,
                        fw,
                        ip,
                        errMsg}, this.saveFwToSfcsBySnOperationCompleted, userState);
        }
        
        private void OnsaveFwToSfcsBySnOperationCompleted(object arg) {
            if ((this.saveFwToSfcsBySnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveFwToSfcsBySnCompleted(this, new saveFwToSfcsBySnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckSfcsFaStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckSfcsFaStatus(string hwid, ref string errMsg) {
            object[] results = this.Invoke("CheckSfcsFaStatus", new object[] {
                        hwid,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSfcsFaStatusAsync(string hwid, string errMsg) {
            this.CheckSfcsFaStatusAsync(hwid, errMsg, null);
        }
        
        /// <remarks/>
        public void CheckSfcsFaStatusAsync(string hwid, string errMsg, object userState) {
            if ((this.CheckSfcsFaStatusOperationCompleted == null)) {
                this.CheckSfcsFaStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSfcsFaStatusOperationCompleted);
            }
            this.InvokeAsync("CheckSfcsFaStatus", new object[] {
                        hwid,
                        errMsg}, this.CheckSfcsFaStatusOperationCompleted, userState);
        }
        
        private void OnCheckSfcsFaStatusOperationCompleted(object arg) {
            if ((this.CheckSfcsFaStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSfcsFaStatusCompleted(this, new CheckSfcsFaStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDcTest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckDcTest(string sn, ref string errMsg) {
            object[] results = this.Invoke("CheckDcTest", new object[] {
                        sn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDcTestAsync(string sn, string errMsg) {
            this.CheckDcTestAsync(sn, errMsg, null);
        }
        
        /// <remarks/>
        public void CheckDcTestAsync(string sn, string errMsg, object userState) {
            if ((this.CheckDcTestOperationCompleted == null)) {
                this.CheckDcTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDcTestOperationCompleted);
            }
            this.InvokeAsync("CheckDcTest", new object[] {
                        sn,
                        errMsg}, this.CheckDcTestOperationCompleted, userState);
        }
        
        private void OnCheckDcTestOperationCompleted(object arg) {
            if ((this.CheckDcTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDcTestCompleted(this, new CheckDcTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSpritCpn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSpritCpn(string mac, ref string errMsg) {
            object[] results = this.Invoke("getSpritCpn", new object[] {
                        mac,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSpritCpnAsync(string mac, string errMsg) {
            this.getSpritCpnAsync(mac, errMsg, null);
        }
        
        /// <remarks/>
        public void getSpritCpnAsync(string mac, string errMsg, object userState) {
            if ((this.getSpritCpnOperationCompleted == null)) {
                this.getSpritCpnOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSpritCpnOperationCompleted);
            }
            this.InvokeAsync("getSpritCpn", new object[] {
                        mac,
                        errMsg}, this.getSpritCpnOperationCompleted, userState);
        }
        
        private void OngetSpritCpnOperationCompleted(object arg) {
            if ((this.getSpritCpnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSpritCpnCompleted(this, new getSpritCpnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckOldNewPSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckOldNewPSN(string new_psn, string old_psn, ref string errMsg) {
            object[] results = this.Invoke("CheckOldNewPSN", new object[] {
                        new_psn,
                        old_psn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOldNewPSNAsync(string new_psn, string old_psn, string errMsg) {
            this.CheckOldNewPSNAsync(new_psn, old_psn, errMsg, null);
        }
        
        /// <remarks/>
        public void CheckOldNewPSNAsync(string new_psn, string old_psn, string errMsg, object userState) {
            if ((this.CheckOldNewPSNOperationCompleted == null)) {
                this.CheckOldNewPSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOldNewPSNOperationCompleted);
            }
            this.InvokeAsync("CheckOldNewPSN", new object[] {
                        new_psn,
                        old_psn,
                        errMsg}, this.CheckOldNewPSNOperationCompleted, userState);
        }
        
        private void OnCheckOldNewPSNOperationCompleted(object arg) {
            if ((this.CheckOldNewPSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOldNewPSNCompleted(this, new CheckOldNewPSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWoSchedule_byIP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getWoSchedule_byIP(string ip, ref string errMsg) {
            object[] results = this.Invoke("getWoSchedule_byIP", new object[] {
                        ip,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getWoSchedule_byIPAsync(string ip, string errMsg) {
            this.getWoSchedule_byIPAsync(ip, errMsg, null);
        }
        
        /// <remarks/>
        public void getWoSchedule_byIPAsync(string ip, string errMsg, object userState) {
            if ((this.getWoSchedule_byIPOperationCompleted == null)) {
                this.getWoSchedule_byIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWoSchedule_byIPOperationCompleted);
            }
            this.InvokeAsync("getWoSchedule_byIP", new object[] {
                        ip,
                        errMsg}, this.getWoSchedule_byIPOperationCompleted, userState);
        }
        
        private void OngetWoSchedule_byIPOperationCompleted(object arg) {
            if ((this.getWoSchedule_byIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWoSchedule_byIPCompleted(this, new getWoSchedule_byIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/check_InputStage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool check_InputStage(string wo, string stage, ref string errMsg) {
            object[] results = this.Invoke("check_InputStage", new object[] {
                        wo,
                        stage,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void check_InputStageAsync(string wo, string stage, string errMsg) {
            this.check_InputStageAsync(wo, stage, errMsg, null);
        }
        
        /// <remarks/>
        public void check_InputStageAsync(string wo, string stage, string errMsg, object userState) {
            if ((this.check_InputStageOperationCompleted == null)) {
                this.check_InputStageOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncheck_InputStageOperationCompleted);
            }
            this.InvokeAsync("check_InputStage", new object[] {
                        wo,
                        stage,
                        errMsg}, this.check_InputStageOperationCompleted, userState);
        }
        
        private void Oncheck_InputStageOperationCompleted(object arg) {
            if ((this.check_InputStageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.check_InputStageCompleted(this, new check_InputStageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chkSpnStation_Ip", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string chkSpnStation_Ip(string ip, ref string errMsg) {
            object[] results = this.Invoke("chkSpnStation_Ip", new object[] {
                        ip,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void chkSpnStation_IpAsync(string ip, string errMsg) {
            this.chkSpnStation_IpAsync(ip, errMsg, null);
        }
        
        /// <remarks/>
        public void chkSpnStation_IpAsync(string ip, string errMsg, object userState) {
            if ((this.chkSpnStation_IpOperationCompleted == null)) {
                this.chkSpnStation_IpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchkSpnStation_IpOperationCompleted);
            }
            this.InvokeAsync("chkSpnStation_Ip", new object[] {
                        ip,
                        errMsg}, this.chkSpnStation_IpOperationCompleted, userState);
        }
        
        private void OnchkSpnStation_IpOperationCompleted(object arg) {
            if ((this.chkSpnStation_IpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chkSpnStation_IpCompleted(this, new chkSpnStation_IpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_SMTData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_SMTData(string vs_ssn, ref string errMsg) {
            object[] results = this.Invoke("get_SMTData", new object[] {
                        vs_ssn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get_SMTDataAsync(string vs_ssn, string errMsg) {
            this.get_SMTDataAsync(vs_ssn, errMsg, null);
        }
        
        /// <remarks/>
        public void get_SMTDataAsync(string vs_ssn, string errMsg, object userState) {
            if ((this.get_SMTDataOperationCompleted == null)) {
                this.get_SMTDataOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_SMTDataOperationCompleted);
            }
            this.InvokeAsync("get_SMTData", new object[] {
                        vs_ssn,
                        errMsg}, this.get_SMTDataOperationCompleted, userState);
        }
        
        private void Onget_SMTDataOperationCompleted(object arg) {
            if ((this.get_SMTDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_SMTDataCompleted(this, new get_SMTDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_ProdData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_ProdData(string vs_ssn, ref string errMsg) {
            object[] results = this.Invoke("get_ProdData", new object[] {
                        vs_ssn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get_ProdDataAsync(string vs_ssn, string errMsg) {
            this.get_ProdDataAsync(vs_ssn, errMsg, null);
        }
        
        /// <remarks/>
        public void get_ProdDataAsync(string vs_ssn, string errMsg, object userState) {
            if ((this.get_ProdDataOperationCompleted == null)) {
                this.get_ProdDataOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_ProdDataOperationCompleted);
            }
            this.InvokeAsync("get_ProdData", new object[] {
                        vs_ssn,
                        errMsg}, this.get_ProdDataOperationCompleted, userState);
        }
        
        private void Onget_ProdDataOperationCompleted(object arg) {
            if ((this.get_ProdDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_ProdDataCompleted(this, new get_ProdDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chkMo_inputQty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool chkMo_inputQty(string sn, ref string errMsg) {
            object[] results = this.Invoke("chkMo_inputQty", new object[] {
                        sn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void chkMo_inputQtyAsync(string sn, string errMsg) {
            this.chkMo_inputQtyAsync(sn, errMsg, null);
        }
        
        /// <remarks/>
        public void chkMo_inputQtyAsync(string sn, string errMsg, object userState) {
            if ((this.chkMo_inputQtyOperationCompleted == null)) {
                this.chkMo_inputQtyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchkMo_inputQtyOperationCompleted);
            }
            this.InvokeAsync("chkMo_inputQty", new object[] {
                        sn,
                        errMsg}, this.chkMo_inputQtyOperationCompleted, userState);
        }
        
        private void OnchkMo_inputQtyOperationCompleted(object arg) {
            if ((this.chkMo_inputQtyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chkMo_inputQtyCompleted(this, new chkMo_inputQtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ASTP_Test_Initial_V002", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ASTP_Test_Initial_V002(System.Data.DataSet ds_ini_info, ref string errMsg) {
            object[] results = this.Invoke("ASTP_Test_Initial_V002", new object[] {
                        ds_ini_info,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ASTP_Test_Initial_V002Async(System.Data.DataSet ds_ini_info, string errMsg) {
            this.ASTP_Test_Initial_V002Async(ds_ini_info, errMsg, null);
        }
        
        /// <remarks/>
        public void ASTP_Test_Initial_V002Async(System.Data.DataSet ds_ini_info, string errMsg, object userState) {
            if ((this.ASTP_Test_Initial_V002OperationCompleted == null)) {
                this.ASTP_Test_Initial_V002OperationCompleted = new System.Threading.SendOrPostCallback(this.OnASTP_Test_Initial_V002OperationCompleted);
            }
            this.InvokeAsync("ASTP_Test_Initial_V002", new object[] {
                        ds_ini_info,
                        errMsg}, this.ASTP_Test_Initial_V002OperationCompleted, userState);
        }
        
        private void OnASTP_Test_Initial_V002OperationCompleted(object arg) {
            if ((this.ASTP_Test_Initial_V002Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ASTP_Test_Initial_V002Completed(this, new ASTP_Test_Initial_V002CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete_Golden_Sample1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delete_Golden_Sample1(string spn, string stage, string go_n, string err_code, ref string errMsg) {
            object[] results = this.Invoke("Delete_Golden_Sample1", new object[] {
                        spn,
                        stage,
                        go_n,
                        err_code,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_Golden_Sample1Async(string spn, string stage, string go_n, string err_code, string errMsg) {
            this.Delete_Golden_Sample1Async(spn, stage, go_n, err_code, errMsg, null);
        }
        
        /// <remarks/>
        public void Delete_Golden_Sample1Async(string spn, string stage, string go_n, string err_code, string errMsg, object userState) {
            if ((this.Delete_Golden_Sample1OperationCompleted == null)) {
                this.Delete_Golden_Sample1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_Golden_Sample1OperationCompleted);
            }
            this.InvokeAsync("Delete_Golden_Sample1", new object[] {
                        spn,
                        stage,
                        go_n,
                        err_code,
                        errMsg}, this.Delete_Golden_Sample1OperationCompleted, userState);
        }
        
        private void OnDelete_Golden_Sample1OperationCompleted(object arg) {
            if ((this.Delete_Golden_Sample1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_Golden_Sample1Completed(this, new Delete_Golden_Sample1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getIP_prod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getIP_prod(string ymd, ref string errMsg) {
            object[] results = this.Invoke("getIP_prod", new object[] {
                        ymd,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getIP_prodAsync(string ymd, string errMsg) {
            this.getIP_prodAsync(ymd, errMsg, null);
        }
        
        /// <remarks/>
        public void getIP_prodAsync(string ymd, string errMsg, object userState) {
            if ((this.getIP_prodOperationCompleted == null)) {
                this.getIP_prodOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIP_prodOperationCompleted);
            }
            this.InvokeAsync("getIP_prod", new object[] {
                        ymd,
                        errMsg}, this.getIP_prodOperationCompleted, userState);
        }
        
        private void OngetIP_prodOperationCompleted(object arg) {
            if ((this.getIP_prodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIP_prodCompleted(this, new getIP_prodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/del_IP_prod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool del_IP_prod(string ymd, ref string errMsg) {
            object[] results = this.Invoke("del_IP_prod", new object[] {
                        ymd,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void del_IP_prodAsync(string ymd, string errMsg) {
            this.del_IP_prodAsync(ymd, errMsg, null);
        }
        
        /// <remarks/>
        public void del_IP_prodAsync(string ymd, string errMsg, object userState) {
            if ((this.del_IP_prodOperationCompleted == null)) {
                this.del_IP_prodOperationCompleted = new System.Threading.SendOrPostCallback(this.Ondel_IP_prodOperationCompleted);
            }
            this.InvokeAsync("del_IP_prod", new object[] {
                        ymd,
                        errMsg}, this.del_IP_prodOperationCompleted, userState);
        }
        
        private void Ondel_IP_prodOperationCompleted(object arg) {
            if ((this.del_IP_prodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.del_IP_prodCompleted(this, new del_IP_prodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_sidpsn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_sidpsn(string vs_ssn, ref string errMsg) {
            object[] results = this.Invoke("get_sidpsn", new object[] {
                        vs_ssn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get_sidpsnAsync(string vs_ssn, string errMsg) {
            this.get_sidpsnAsync(vs_ssn, errMsg, null);
        }
        
        /// <remarks/>
        public void get_sidpsnAsync(string vs_ssn, string errMsg, object userState) {
            if ((this.get_sidpsnOperationCompleted == null)) {
                this.get_sidpsnOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_sidpsnOperationCompleted);
            }
            this.InvokeAsync("get_sidpsn", new object[] {
                        vs_ssn,
                        errMsg}, this.get_sidpsnOperationCompleted, userState);
        }
        
        private void Onget_sidpsnOperationCompleted(object arg) {
            if ((this.get_sidpsnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_sidpsnCompleted(this, new get_sidpsnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_SMTData_1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_SMTData_1(string mb_sn, ref string errMsg) {
            object[] results = this.Invoke("get_SMTData_1", new object[] {
                        mb_sn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get_SMTData_1Async(string mb_sn, string errMsg) {
            this.get_SMTData_1Async(mb_sn, errMsg, null);
        }
        
        /// <remarks/>
        public void get_SMTData_1Async(string mb_sn, string errMsg, object userState) {
            if ((this.get_SMTData_1OperationCompleted == null)) {
                this.get_SMTData_1OperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_SMTData_1OperationCompleted);
            }
            this.InvokeAsync("get_SMTData_1", new object[] {
                        mb_sn,
                        errMsg}, this.get_SMTData_1OperationCompleted, userState);
        }
        
        private void Onget_SMTData_1OperationCompleted(object arg) {
            if ((this.get_SMTData_1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_SMTData_1Completed(this, new get_SMTData_1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSpcStatistics", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSpcStatistics(string mo, string test_item, ref string errMsg) {
            object[] results = this.Invoke("getSpcStatistics", new object[] {
                        mo,
                        test_item,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSpcStatisticsAsync(string mo, string test_item, string errMsg) {
            this.getSpcStatisticsAsync(mo, test_item, errMsg, null);
        }
        
        /// <remarks/>
        public void getSpcStatisticsAsync(string mo, string test_item, string errMsg, object userState) {
            if ((this.getSpcStatisticsOperationCompleted == null)) {
                this.getSpcStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSpcStatisticsOperationCompleted);
            }
            this.InvokeAsync("getSpcStatistics", new object[] {
                        mo,
                        test_item,
                        errMsg}, this.getSpcStatisticsOperationCompleted, userState);
        }
        
        private void OngetSpcStatisticsOperationCompleted(object arg) {
            if ((this.getSpcStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSpcStatisticsCompleted(this, new getSpcStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setSpcMoCpkLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setSpcMoCpkLog(string mo, string test_item, double usl, double lsl, double cpk, int result, ref string errMsg) {
            object[] results = this.Invoke("setSpcMoCpkLog", new object[] {
                        mo,
                        test_item,
                        usl,
                        lsl,
                        cpk,
                        result,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setSpcMoCpkLogAsync(string mo, string test_item, double usl, double lsl, double cpk, int result, string errMsg) {
            this.setSpcMoCpkLogAsync(mo, test_item, usl, lsl, cpk, result, errMsg, null);
        }
        
        /// <remarks/>
        public void setSpcMoCpkLogAsync(string mo, string test_item, double usl, double lsl, double cpk, int result, string errMsg, object userState) {
            if ((this.setSpcMoCpkLogOperationCompleted == null)) {
                this.setSpcMoCpkLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSpcMoCpkLogOperationCompleted);
            }
            this.InvokeAsync("setSpcMoCpkLog", new object[] {
                        mo,
                        test_item,
                        usl,
                        lsl,
                        cpk,
                        result,
                        errMsg}, this.setSpcMoCpkLogOperationCompleted, userState);
        }
        
        private void OnsetSpcMoCpkLogOperationCompleted(object arg) {
            if ((this.setSpcMoCpkLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSpcMoCpkLogCompleted(this, new setSpcMoCpkLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/check_InputMO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string check_InputMO(string ip, ref string errMsg) {
            object[] results = this.Invoke("check_InputMO", new object[] {
                        ip,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void check_InputMOAsync(string ip, string errMsg) {
            this.check_InputMOAsync(ip, errMsg, null);
        }
        
        /// <remarks/>
        public void check_InputMOAsync(string ip, string errMsg, object userState) {
            if ((this.check_InputMOOperationCompleted == null)) {
                this.check_InputMOOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncheck_InputMOOperationCompleted);
            }
            this.InvokeAsync("check_InputMO", new object[] {
                        ip,
                        errMsg}, this.check_InputMOOperationCompleted, userState);
        }
        
        private void Oncheck_InputMOOperationCompleted(object arg) {
            if ((this.check_InputMOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.check_InputMOCompleted(this, new check_InputMOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chkrepair", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet chkrepair(string vs_ssn, ref string errMsg) {
            object[] results = this.Invoke("chkrepair", new object[] {
                        vs_ssn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void chkrepairAsync(string vs_ssn, string errMsg) {
            this.chkrepairAsync(vs_ssn, errMsg, null);
        }
        
        /// <remarks/>
        public void chkrepairAsync(string vs_ssn, string errMsg, object userState) {
            if ((this.chkrepairOperationCompleted == null)) {
                this.chkrepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchkrepairOperationCompleted);
            }
            this.InvokeAsync("chkrepair", new object[] {
                        vs_ssn,
                        errMsg}, this.chkrepairOperationCompleted, userState);
        }
        
        private void OnchkrepairOperationCompleted(object arg) {
            if ((this.chkrepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chkrepairCompleted(this, new chkrepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getNewPsnByMo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getNewPsnByMo(string mo, ref string errmsg) {
            object[] results = this.Invoke("getNewPsnByMo", new object[] {
                        mo,
                        errmsg});
            errmsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNewPsnByMoAsync(string mo, string errmsg) {
            this.getNewPsnByMoAsync(mo, errmsg, null);
        }
        
        /// <remarks/>
        public void getNewPsnByMoAsync(string mo, string errmsg, object userState) {
            if ((this.getNewPsnByMoOperationCompleted == null)) {
                this.getNewPsnByMoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewPsnByMoOperationCompleted);
            }
            this.InvokeAsync("getNewPsnByMo", new object[] {
                        mo,
                        errmsg}, this.getNewPsnByMoOperationCompleted, userState);
        }
        
        private void OngetNewPsnByMoOperationCompleted(object arg) {
            if ((this.getNewPsnByMoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewPsnByMoCompleted(this, new getNewPsnByMoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chkSmtSnWithCustSn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool chkSmtSnWithCustSn(string smt, string custSn, ref string errmsg) {
            object[] results = this.Invoke("chkSmtSnWithCustSn", new object[] {
                        smt,
                        custSn,
                        errmsg});
            errmsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void chkSmtSnWithCustSnAsync(string smt, string custSn, string errmsg) {
            this.chkSmtSnWithCustSnAsync(smt, custSn, errmsg, null);
        }
        
        /// <remarks/>
        public void chkSmtSnWithCustSnAsync(string smt, string custSn, string errmsg, object userState) {
            if ((this.chkSmtSnWithCustSnOperationCompleted == null)) {
                this.chkSmtSnWithCustSnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchkSmtSnWithCustSnOperationCompleted);
            }
            this.InvokeAsync("chkSmtSnWithCustSn", new object[] {
                        smt,
                        custSn,
                        errmsg}, this.chkSmtSnWithCustSnOperationCompleted, userState);
        }
        
        private void OnchkSmtSnWithCustSnOperationCompleted(object arg) {
            if ((this.chkSmtSnWithCustSnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chkSmtSnWithCustSnCompleted(this, new chkSmtSnWithCustSnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_SMTData_2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_SMTData_2(string vs_ssn, ref string errMsg) {
            object[] results = this.Invoke("get_SMTData_2", new object[] {
                        vs_ssn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get_SMTData_2Async(string vs_ssn, string errMsg) {
            this.get_SMTData_2Async(vs_ssn, errMsg, null);
        }
        
        /// <remarks/>
        public void get_SMTData_2Async(string vs_ssn, string errMsg, object userState) {
            if ((this.get_SMTData_2OperationCompleted == null)) {
                this.get_SMTData_2OperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_SMTData_2OperationCompleted);
            }
            this.InvokeAsync("get_SMTData_2", new object[] {
                        vs_ssn,
                        errMsg}, this.get_SMTData_2OperationCompleted, userState);
        }
        
        private void Onget_SMTData_2OperationCompleted(object arg) {
            if ((this.get_SMTData_2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_SMTData_2Completed(this, new get_SMTData_2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSMTPN_byCsn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSMTPN_byCsn(string csn, ref string errMsg) {
            object[] results = this.Invoke("getSMTPN_byCsn", new object[] {
                        csn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSMTPN_byCsnAsync(string csn, string errMsg) {
            this.getSMTPN_byCsnAsync(csn, errMsg, null);
        }
        
        /// <remarks/>
        public void getSMTPN_byCsnAsync(string csn, string errMsg, object userState) {
            if ((this.getSMTPN_byCsnOperationCompleted == null)) {
                this.getSMTPN_byCsnOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSMTPN_byCsnOperationCompleted);
            }
            this.InvokeAsync("getSMTPN_byCsn", new object[] {
                        csn,
                        errMsg}, this.getSMTPN_byCsnOperationCompleted, userState);
        }
        
        private void OngetSMTPN_byCsnOperationCompleted(object arg) {
            if ((this.getSMTPN_byCsnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSMTPN_byCsnCompleted(this, new getSMTPN_byCsnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chkUIM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string chkUIM(string uim, ref string errMsg) {
            object[] results = this.Invoke("chkUIM", new object[] {
                        uim,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void chkUIMAsync(string uim, string errMsg) {
            this.chkUIMAsync(uim, errMsg, null);
        }
        
        /// <remarks/>
        public void chkUIMAsync(string uim, string errMsg, object userState) {
            if ((this.chkUIMOperationCompleted == null)) {
                this.chkUIMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchkUIMOperationCompleted);
            }
            this.InvokeAsync("chkUIM", new object[] {
                        uim,
                        errMsg}, this.chkUIMOperationCompleted, userState);
        }
        
        private void OnchkUIMOperationCompleted(object arg) {
            if ((this.chkUIMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chkUIMCompleted(this, new chkUIMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllCsn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAllCsn(string vs_ssn, ref string errMsg) {
            object[] results = this.Invoke("getAllCsn", new object[] {
                        vs_ssn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAllCsnAsync(string vs_ssn, string errMsg) {
            this.getAllCsnAsync(vs_ssn, errMsg, null);
        }
        
        /// <remarks/>
        public void getAllCsnAsync(string vs_ssn, string errMsg, object userState) {
            if ((this.getAllCsnOperationCompleted == null)) {
                this.getAllCsnOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllCsnOperationCompleted);
            }
            this.InvokeAsync("getAllCsn", new object[] {
                        vs_ssn,
                        errMsg}, this.getAllCsnOperationCompleted, userState);
        }
        
        private void OngetAllCsnOperationCompleted(object arg) {
            if ((this.getAllCsnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllCsnCompleted(this, new getAllCsnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSMT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSMT(string vs_ssn, ref string errMsg) {
            object[] results = this.Invoke("getSMT", new object[] {
                        vs_ssn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSMTAsync(string vs_ssn, string errMsg) {
            this.getSMTAsync(vs_ssn, errMsg, null);
        }
        
        /// <remarks/>
        public void getSMTAsync(string vs_ssn, string errMsg, object userState) {
            if ((this.getSMTOperationCompleted == null)) {
                this.getSMTOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSMTOperationCompleted);
            }
            this.InvokeAsync("getSMT", new object[] {
                        vs_ssn,
                        errMsg}, this.getSMTOperationCompleted, userState);
        }
        
        private void OngetSMTOperationCompleted(object arg) {
            if ((this.getSMTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSMTCompleted(this, new getSMTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMo_ForSM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getMo_ForSM(string vs_ssn, ref string errMsg) {
            object[] results = this.Invoke("getMo_ForSM", new object[] {
                        vs_ssn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getMo_ForSMAsync(string vs_ssn, string errMsg) {
            this.getMo_ForSMAsync(vs_ssn, errMsg, null);
        }
        
        /// <remarks/>
        public void getMo_ForSMAsync(string vs_ssn, string errMsg, object userState) {
            if ((this.getMo_ForSMOperationCompleted == null)) {
                this.getMo_ForSMOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMo_ForSMOperationCompleted);
            }
            this.InvokeAsync("getMo_ForSM", new object[] {
                        vs_ssn,
                        errMsg}, this.getMo_ForSMOperationCompleted, userState);
        }
        
        private void OngetMo_ForSMOperationCompleted(object arg) {
            if ((this.getMo_ForSMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMo_ForSMCompleted(this, new getMo_ForSMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAntenna", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAntenna(string vs_ssn, ref string errMsg) {
            object[] results = this.Invoke("getAntenna", new object[] {
                        vs_ssn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAntennaAsync(string vs_ssn, string errMsg) {
            this.getAntennaAsync(vs_ssn, errMsg, null);
        }
        
        /// <remarks/>
        public void getAntennaAsync(string vs_ssn, string errMsg, object userState) {
            if ((this.getAntennaOperationCompleted == null)) {
                this.getAntennaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAntennaOperationCompleted);
            }
            this.InvokeAsync("getAntenna", new object[] {
                        vs_ssn,
                        errMsg}, this.getAntennaOperationCompleted, userState);
        }
        
        private void OngetAntennaOperationCompleted(object arg) {
            if ((this.getAntennaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAntennaCompleted(this, new getAntennaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRSSI_SM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getRSSI_SM(string vs_ssn, ref string errMsg) {
            object[] results = this.Invoke("getRSSI_SM", new object[] {
                        vs_ssn,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getRSSI_SMAsync(string vs_ssn, string errMsg) {
            this.getRSSI_SMAsync(vs_ssn, errMsg, null);
        }
        
        /// <remarks/>
        public void getRSSI_SMAsync(string vs_ssn, string errMsg, object userState) {
            if ((this.getRSSI_SMOperationCompleted == null)) {
                this.getRSSI_SMOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRSSI_SMOperationCompleted);
            }
            this.InvokeAsync("getRSSI_SM", new object[] {
                        vs_ssn,
                        errMsg}, this.getRSSI_SMOperationCompleted, userState);
        }
        
        private void OngetRSSI_SMOperationCompleted(object arg) {
            if ((this.getRSSI_SMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRSSI_SMCompleted(this, new getRSSI_SMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getNewPsnByMo_rwk", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getNewPsnByMo_rwk(string mo, ref string errmsg) {
            object[] results = this.Invoke("getNewPsnByMo_rwk", new object[] {
                        mo,
                        errmsg});
            errmsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNewPsnByMo_rwkAsync(string mo, string errmsg) {
            this.getNewPsnByMo_rwkAsync(mo, errmsg, null);
        }
        
        /// <remarks/>
        public void getNewPsnByMo_rwkAsync(string mo, string errmsg, object userState) {
            if ((this.getNewPsnByMo_rwkOperationCompleted == null)) {
                this.getNewPsnByMo_rwkOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewPsnByMo_rwkOperationCompleted);
            }
            this.InvokeAsync("getNewPsnByMo_rwk", new object[] {
                        mo,
                        errmsg}, this.getNewPsnByMo_rwkOperationCompleted, userState);
        }
        
        private void OngetNewPsnByMo_rwkOperationCompleted(object arg) {
            if ((this.getNewPsnByMo_rwkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewPsnByMo_rwkCompleted(this, new getNewPsnByMo_rwkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ASTP_Test_Initial_V003", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ASTP_Test_Initial_V003(string sn, string ip, string fixture, string ats_id, ref string errMsg) {
            object[] results = this.Invoke("ASTP_Test_Initial_V003", new object[] {
                        sn,
                        ip,
                        fixture,
                        ats_id,
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ASTP_Test_Initial_V003Async(string sn, string ip, string fixture, string ats_id, string errMsg) {
            this.ASTP_Test_Initial_V003Async(sn, ip, fixture, ats_id, errMsg, null);
        }
        
        /// <remarks/>
        public void ASTP_Test_Initial_V003Async(string sn, string ip, string fixture, string ats_id, string errMsg, object userState) {
            if ((this.ASTP_Test_Initial_V003OperationCompleted == null)) {
                this.ASTP_Test_Initial_V003OperationCompleted = new System.Threading.SendOrPostCallback(this.OnASTP_Test_Initial_V003OperationCompleted);
            }
            this.InvokeAsync("ASTP_Test_Initial_V003", new object[] {
                        sn,
                        ip,
                        fixture,
                        ats_id,
                        errMsg}, this.ASTP_Test_Initial_V003OperationCompleted, userState);
        }
        
        private void OnASTP_Test_Initial_V003OperationCompleted(object arg) {
            if ((this.ASTP_Test_Initial_V003Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ASTP_Test_Initial_V003Completed(this, new ASTP_Test_Initial_V003CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCSN_byCPN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCSN_byCPN(string cpn, ref string errmsg) {
            object[] results = this.Invoke("getCSN_byCPN", new object[] {
                        cpn,
                        errmsg});
            errmsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCSN_byCPNAsync(string cpn, string errmsg) {
            this.getCSN_byCPNAsync(cpn, errmsg, null);
        }
        
        /// <remarks/>
        public void getCSN_byCPNAsync(string cpn, string errmsg, object userState) {
            if ((this.getCSN_byCPNOperationCompleted == null)) {
                this.getCSN_byCPNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCSN_byCPNOperationCompleted);
            }
            this.InvokeAsync("getCSN_byCPN", new object[] {
                        cpn,
                        errmsg}, this.getCSN_byCPNOperationCompleted, userState);
        }
        
        private void OngetCSN_byCPNOperationCompleted(object arg) {
            if ((this.getCSN_byCPNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCSN_byCPNCompleted(this, new getCSN_byCPNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum SamplingType {
        
        /// <remarks/>
        TIFA_DAILY,
        
        /// <remarks/>
        TIFA_ORT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class IsStandardSampleInput : BaseResultInput {
        
        private string serialNumberField;
        
        private string sfcsSSNField;
        
        private string ipField;
        
        private string stageField;
        
        /// <remarks/>
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string SfcsSSN {
            get {
                return this.sfcsSSNField;
            }
            set {
                this.sfcsSSNField = value;
            }
        }
        
        /// <remarks/>
        public string Ip {
            get {
                return this.ipField;
            }
            set {
                this.ipField = value;
            }
        }
        
        /// <remarks/>
        public string Stage {
            get {
                return this.stageField;
            }
            set {
                this.stageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IsStandardSampleInput))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BaseResultInput {
        
        private string userField;
        
        private ReqCode reqCodeField;
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public ReqCode ReqCode {
            get {
                return this.reqCodeField;
            }
            set {
                this.reqCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://WNC.SFCS.ServiceCore.Services")]
    public partial class ReqCode {
        
        private ulong seqField;
        
        private System.Nullable<ulong> preSeqField;
        
        private string funNameField;
        
        private System.DateTime sysDateField;
        
        private string appNameField;
        
        private string appVersionField;
        
        private string userIDField;
        
        private string userPwdField;
        
        private LangType langTypeField;
        
        /// <remarks/>
        public ulong Seq {
            get {
                return this.seqField;
            }
            set {
                this.seqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<ulong> PreSeq {
            get {
                return this.preSeqField;
            }
            set {
                this.preSeqField = value;
            }
        }
        
        /// <remarks/>
        public string FunName {
            get {
                return this.funNameField;
            }
            set {
                this.funNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SysDate {
            get {
                return this.sysDateField;
            }
            set {
                this.sysDateField = value;
            }
        }
        
        /// <remarks/>
        public string AppName {
            get {
                return this.appNameField;
            }
            set {
                this.appNameField = value;
            }
        }
        
        /// <remarks/>
        public string AppVersion {
            get {
                return this.appVersionField;
            }
            set {
                this.appVersionField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserPwd {
            get {
                return this.userPwdField;
            }
            set {
                this.userPwdField = value;
            }
        }
        
        /// <remarks/>
        public LangType LangType {
            get {
                return this.langTypeField;
            }
            set {
                this.langTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://WNC.SFCS.ServiceCore.Services")]
    public enum LangType {
        
        /// <remarks/>
        en,
        
        /// <remarks/>
        zh_Hans,
        
        /// <remarks/>
        zh_Hant,
        
        /// <remarks/>
        vi,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ResponseInfo {
        
        private int s1Field;
        
        private string statusField;
        
        private string descriptionField;
        
        private string modelNoField;
        
        private string createDateField;
        
        private string creatorField;
        
        /// <remarks/>
        public int S1 {
            get {
                return this.s1Field;
            }
            set {
                this.s1Field = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ModelNo {
            get {
                return this.modelNoField;
            }
            set {
                this.modelNoField = value;
            }
        }
        
        /// <remarks/>
        public string CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string Creator {
            get {
                return this.creatorField;
            }
            set {
                this.creatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IsStandardSampleOutput))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BaseResultOutput {
        
        private string messageTextField;
        
        /// <remarks/>
        public string MessageText {
            get {
                return this.messageTextField;
            }
            set {
                this.messageTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class IsStandardSampleOutput : BaseResultOutput {
        
        private string nextStageField;
        
        private string nextStageDescField;
        
        private string newStateField;
        
        private string samplingResultMsgField;
        
        private bool isSampleField;
        
        private bool needSampleField;
        
        /// <remarks/>
        public string NextStage {
            get {
                return this.nextStageField;
            }
            set {
                this.nextStageField = value;
            }
        }
        
        /// <remarks/>
        public string NextStageDesc {
            get {
                return this.nextStageDescField;
            }
            set {
                this.nextStageDescField = value;
            }
        }
        
        /// <remarks/>
        public string NewState {
            get {
                return this.newStateField;
            }
            set {
                this.newStateField = value;
            }
        }
        
        /// <remarks/>
        public string SamplingResultMsg {
            get {
                return this.samplingResultMsgField;
            }
            set {
                this.samplingResultMsgField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSample {
            get {
                return this.isSampleField;
            }
            set {
                this.isSampleField = value;
            }
        }
        
        /// <remarks/>
        public bool NeedSample {
            get {
                return this.needSampleField;
            }
            set {
                this.needSampleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void updateSN_byCSNCompletedEventHandler(object sender, updateSN_byCSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSN_byCSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSN_byCSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdateState_UOCCompletedEventHandler(object sender, UpdateState_UOCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateState_UOCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateState_UOCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void check_SFCS_Stage_newCompletedEventHandler(object sender, check_SFCS_Stage_newCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class check_SFCS_Stage_newCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal check_SFCS_Stage_newCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void chkCSNCompletedEventHandler(object sender, chkCSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chkCSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chkCSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void check_state_repairCompletedEventHandler(object sender, check_state_repairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class check_state_repairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal check_state_repairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void check_state_scrapCompletedEventHandler(object sender, check_state_scrapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class check_state_scrapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal check_state_scrapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_DNEA_CSNCompletedEventHandler(object sender, get_DNEA_CSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_DNEA_CSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_DNEA_CSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_stage_testCountCompletedEventHandler(object sender, get_stage_testCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_stage_testCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_stage_testCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void chk_PCBACompletedEventHandler(object sender, chk_PCBACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chk_PCBACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chk_PCBACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void chk_ForAutoAtsCompletedEventHandler(object sender, chk_ForAutoAtsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chk_ForAutoAtsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chk_ForAutoAtsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ATS_chkRepairStageCompletedEventHandler(object sender, ATS_chkRepairStageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ATS_chkRepairStageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ATS_chkRepairStageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void chk_cpn_ruleCompletedEventHandler(object sender, chk_cpn_ruleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chk_cpn_ruleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chk_cpn_ruleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void chkUIM_2CompletedEventHandler(object sender, chkUIM_2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chkUIM_2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chkUIM_2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getEquipPassCompletedEventHandler(object sender, getEquipPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEquipPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEquipPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void chkUIM_TELCompletedEventHandler(object sender, chkUIM_TELCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chkUIM_TELCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chkUIM_TELCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void chkUIM_WithoutTELCompletedEventHandler(object sender, chkUIM_WithoutTELCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chkUIM_WithoutTELCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chkUIM_WithoutTELCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void chk_cpn_rule_newCompletedEventHandler(object sender, chk_cpn_rule_newCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chk_cpn_rule_newCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chk_cpn_rule_newCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetGoldenSnDataCompletedEventHandler(object sender, GetGoldenSnDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGoldenSnDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGoldenSnDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getCAbyMACCompletedEventHandler(object sender, getCAbyMACCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCAbyMACCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCAbyMACCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void chkIPbyPNCompletedEventHandler(object sender, chkIPbyPNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chkIPbyPNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chkIPbyPNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void chkRetestNGCompletedEventHandler(object sender, chkRetestNGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chkRetestNGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chkRetestNGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckDailySamplingCompletedEventHandler(object sender, CheckDailySamplingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDailySamplingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDailySamplingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AlreadySample {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool NeedSample {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getAllCsnByCsnCompletedEventHandler(object sender, getAllCsnByCsnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllCsnByCsnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllCsnByCsnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void check_SFCSvATSCompletedEventHandler(object sender, check_SFCSvATSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class check_SFCSvATSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal check_SFCSvATSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void IsStandardSampleCompletedEventHandler(object sender, IsStandardSampleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsStandardSampleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsStandardSampleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IsStandardSampleOutput Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IsStandardSampleOutput)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getMOLotCompletedEventHandler(object sender, getMOLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMOLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMOLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Insert_EQUIPMENT_USEDCompletedEventHandler(object sender, Insert_EQUIPMENT_USEDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_EQUIPMENT_USEDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_EQUIPMENT_USEDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Check_EQUIPMENT_USEDCompletedEventHandler(object sender, Check_EQUIPMENT_USEDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Check_EQUIPMENT_USEDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Check_EQUIPMENT_USEDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetEquipUseStatusCompletedEventHandler(object sender, GetEquipUseStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEquipUseStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEquipUseStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdateEquipUseCountCompletedEventHandler(object sender, UpdateEquipUseCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEquipUseCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEquipUseCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getSN_ByCSNCompletedEventHandler(object sender, getSN_ByCSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSN_ByCSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSN_ByCSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getPNGNDSbyCSNCompletedEventHandler(object sender, getPNGNDSbyCSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPNGNDSbyCSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPNGNDSbyCSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getModelNamebyCSNCompletedEventHandler(object sender, getModelNamebyCSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getModelNamebyCSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getModelNamebyCSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getFLEXFIELD_ByCSNCompletedEventHandler(object sender, getFLEXFIELD_ByCSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFLEXFIELD_ByCSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFLEXFIELD_ByCSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getSN_ForATSCompletedEventHandler(object sender, getSN_ForATSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSN_ForATSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSN_ForATSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getCreatedTime_byCsnCompletedEventHandler(object sender, getCreatedTime_byCsnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCreatedTime_byCsnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCreatedTime_byCsnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ATS_chkRetestReturnCompletedEventHandler(object sender, ATS_chkRetestReturnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ATS_chkRetestReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ATS_chkRetestReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ATS_chkRetestReturnForMRBOXKBMCompletedEventHandler(object sender, ATS_chkRetestReturnForMRBOXKBMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ATS_chkRetestReturnForMRBOXKBMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ATS_chkRetestReturnForMRBOXKBMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ATS_chkRetestReturnForNTGRCompletedEventHandler(object sender, ATS_chkRetestReturnForNTGRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ATS_chkRetestReturnForNTGRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ATS_chkRetestReturnForNTGRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ATS_chkRetestReturnNGEquipCompletedEventHandler(object sender, ATS_chkRetestReturnNGEquipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ATS_chkRetestReturnNGEquipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ATS_chkRetestReturnNGEquipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void check_Curr_StageCompletedEventHandler(object sender, check_Curr_StageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class check_Curr_StageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal check_Curr_StageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetWebServiceURLCompletedEventHandler(object sender, GetWebServiceURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebServiceURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebServiceURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getErrCodeCompletedEventHandler(object sender, getErrCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getErrCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getErrCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getLastTimeCompletedEventHandler(object sender, getLastTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLastTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLastTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_snruleValueCompletedEventHandler(object sender, get_snruleValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_snruleValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_snruleValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ChkOPIDAndPasswordCompletedEventHandler(object sender, ChkOPIDAndPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkOPIDAndPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkOPIDAndPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Save_LOCK_MSG_ForATSCompletedEventHandler(object sender, Save_LOCK_MSG_ForATSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_LOCK_MSG_ForATSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_LOCK_MSG_ForATSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Return_T_count_By_DateCompletedEventHandler(object sender, Return_T_count_By_DateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Return_T_count_By_DateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Return_T_count_By_DateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Return_S_count_By_DateCompletedEventHandler(object sender, Return_S_count_By_DateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Return_S_count_By_DateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Return_S_count_By_DateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_RFSPNCompletedEventHandler(object sender, get_RFSPNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_RFSPNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_RFSPNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getEMSStatusCompletedEventHandler(object sender, getEMSStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEMSStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEMSStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GET_ExcepInfo_BYLineCompletedEventHandler(object sender, GET_ExcepInfo_BYLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_ExcepInfo_BYLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_ExcepInfo_BYLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetBoxSSNbyCartonIDCompletedEventHandler(object sender, GetBoxSSNbyCartonIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxSSNbyCartonIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxSSNbyCartonIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetLeadersMailByEmpCompletedEventHandler(object sender, GetLeadersMailByEmpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLeadersMailByEmpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLeadersMailByEmpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getPlmModelstatusCompletedEventHandler(object sender, getPlmModelstatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPlmModelstatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPlmModelstatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetPlmECNInfoCompletedEventHandler(object sender, GetPlmECNInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlmECNInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlmECNInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getPlmECRInfoCompletedEventHandler(object sender, getPlmECRInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPlmECRInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPlmECRInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetTPIListCompletedEventHandler(object sender, GetTPIListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTPIListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTPIListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetEmpFromPLMCompletedEventHandler(object sender, GetEmpFromPLMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmpFromPLMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmpFromPLMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetCFDVersionCompletedEventHandler(object sender, GetCFDVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCFDVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCFDVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_SPN_QA_LOCK_ATSCompletedEventHandler(object sender, get_SPN_QA_LOCK_ATSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_SPN_QA_LOCK_ATSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_SPN_QA_LOCK_ATSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getModelNamebyCSN_2CompletedEventHandler(object sender, getModelNamebyCSN_2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getModelNamebyCSN_2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getModelNamebyCSN_2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckSnListCompletedEventHandler(object sender, CheckSnListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSnListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSnListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getProdSSN_ByCSNCompletedEventHandler(object sender, getProdSSN_ByCSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProdSSN_ByCSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProdSSN_ByCSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get15RowsDataCompletedEventHandler(object sender, get15RowsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get15RowsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get15RowsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void InsertValueCompletedEventHandler(object sender, InsertValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GET_EMS_FIXTURE_APPLY_INFOCompletedEventHandler(object sender, GET_EMS_FIXTURE_APPLY_INFOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_EMS_FIXTURE_APPLY_INFOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_EMS_FIXTURE_APPLY_INFOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GET_EMS_FIXTURE_APPLY_BUY_INFOCompletedEventHandler(object sender, GET_EMS_FIXTURE_APPLY_BUY_INFOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_EMS_FIXTURE_APPLY_BUY_INFOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_EMS_FIXTURE_APPLY_BUY_INFOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GET_EMS_ApplyCompletedEventHandler(object sender, GET_EMS_ApplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_EMS_ApplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_EMS_ApplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GET_EMS_MATERIALCompletedEventHandler(object sender, GET_EMS_MATERIALCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_EMS_MATERIALCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_EMS_MATERIALCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UPDATE_PR_BY_APPLYCompletedEventHandler(object sender, UPDATE_PR_BY_APPLYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UPDATE_PR_BY_APPLYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UPDATE_PR_BY_APPLYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GET_FIXTURE_APPLY_PATHCompletedEventHandler(object sender, GET_FIXTURE_APPLY_PATHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_FIXTURE_APPLY_PATHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_FIXTURE_APPLY_PATHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void insert_Offline_Test_CNCompletedEventHandler(object sender, insert_Offline_Test_CNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insert_Offline_Test_CNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insert_Offline_Test_CNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_Offline_Test_CNCompletedEventHandler(object sender, get_Offline_Test_CNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_Offline_Test_CNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_Offline_Test_CNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_Gtin_By_PNCompletedEventHandler(object sender, get_Gtin_By_PNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_Gtin_By_PNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_Gtin_By_PNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckUPCCompletedEventHandler(object sender, CheckUPCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUPCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUPCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_45PN_By_CSNCompletedEventHandler(object sender, get_45PN_By_CSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_45PN_By_CSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_45PN_By_CSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ReTestControl_GetTimeCompletedEventHandler(object sender, ReTestControl_GetTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReTestControl_GetTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReTestControl_GetTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void hold_SN_By_ATSCompletedEventHandler(object sender, hold_SN_By_ATSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hold_SN_By_ATSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal hold_SN_By_ATSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getFLEXFIELD_BySSNCompletedEventHandler(object sender, getFLEXFIELD_BySSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFLEXFIELD_BySSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFLEXFIELD_BySSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void checkAccompanyStatusCompletedEventHandler(object sender, checkAccompanyStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkAccompanyStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkAccompanyStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void setAccompanyStatusLogCompletedEventHandler(object sender, setAccompanyStatusLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setAccompanyStatusLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setAccompanyStatusLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetSnRfIdByPalletIdCompletedEventHandler(object sender, GetSnRfIdByPalletIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSnRfIdByPalletIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSnRfIdByPalletIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void set_Equipment_QUERYCompletedEventHandler(object sender, set_Equipment_QUERYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class set_Equipment_QUERYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal set_Equipment_QUERYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ReleaseRLCMeasureCompletedEventHandler(object sender, ReleaseRLCMeasureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReleaseRLCMeasureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReleaseRLCMeasureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_OpdatByCarIDForATSCompletedEventHandler(object sender, get_OpdatByCarIDForATSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_OpdatByCarIDForATSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_OpdatByCarIDForATSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckRLCMeasureCompletedEventHandler(object sender, CheckRLCMeasureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckRLCMeasureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckRLCMeasureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GET_MATER_BUYCompletedEventHandler(object sender, GET_MATER_BUYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_MATER_BUYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_MATER_BUYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void INSERT_MATER_BUYCompletedEventHandler(object sender, INSERT_MATER_BUYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INSERT_MATER_BUYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal INSERT_MATER_BUYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UPDATE_MATER_BUYCompletedEventHandler(object sender, UPDATE_MATER_BUYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UPDATE_MATER_BUYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UPDATE_MATER_BUYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string STYPE {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string SSTATUS {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getipstageCompletedEventHandler(object sender, getipstageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getipstageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getipstageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getCSN_by_ProdSSNCompletedEventHandler(object sender, getCSN_by_ProdSSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCSN_by_ProdSSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCSN_by_ProdSSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getMOLineByMACSNCompletedEventHandler(object sender, getMOLineByMACSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMOLineByMACSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMOLineByMACSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void checkOfflineStageOnceCompletedEventHandler(object sender, checkOfflineStageOnceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkOfflineStageOnceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkOfflineStageOnceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getMODownLoadTimeByCSNCompletedEventHandler(object sender, getMODownLoadTimeByCSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMODownLoadTimeByCSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMODownLoadTimeByCSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Delete_Golden_SampleCompletedEventHandler(object sender, Delete_Golden_SampleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_Golden_SampleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_Golden_SampleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Check_Golden_SampleCompletedEventHandler(object sender, Check_Golden_SampleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Check_Golden_SampleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Check_Golden_SampleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Check_Golden_Sample2CompletedEventHandler(object sender, Check_Golden_Sample2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Check_Golden_Sample2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Check_Golden_Sample2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Get_Golden_SampleCompletedEventHandler(object sender, Get_Golden_SampleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Golden_SampleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Golden_SampleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SaveGolden_SampleCompletedEventHandler(object sender, SaveGolden_SampleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveGolden_SampleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveGolden_SampleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdateGolden_SampleCompletedEventHandler(object sender, UpdateGolden_SampleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGolden_SampleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGolden_SampleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CopyGolden_SampleCompletedEventHandler(object sender, CopyGolden_SampleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyGolden_SampleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyGolden_SampleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CopyGolden_Sample_by_snCompletedEventHandler(object sender, CopyGolden_Sample_by_snCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyGolden_Sample_by_snCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyGolden_Sample_by_snCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Check_Golden_Sample_WarningCompletedEventHandler(object sender, Check_Golden_Sample_WarningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Check_Golden_Sample_WarningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Check_Golden_Sample_WarningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Set_DeviceCompletedEventHandler(object sender, Set_DeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Set_DeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Set_DeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void del_DeviceCompletedEventHandler(object sender, del_DeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class del_DeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal del_DeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getOP_IDCompletedEventHandler(object sender, getOP_IDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOP_IDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOP_IDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void check_SFCS_StageCompletedEventHandler(object sender, check_SFCS_StageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class check_SFCS_StageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal check_SFCS_StageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Get_SsnLastReasonCompletedEventHandler(object sender, Get_SsnLastReasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_SsnLastReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_SsnLastReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CompareSnCsnCompletedEventHandler(object sender, CompareSnCsnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompareSnCsnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompareSnCsnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Rs_Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetPsnCompletedEventHandler(object sender, GetPsnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPsnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPsnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CancelPsnCompletedEventHandler(object sender, CancelPsnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelPsnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelPsnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetWo_InfoCompletedEventHandler(object sender, GetWo_InfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWo_InfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWo_InfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Save_SN_TEST_BYHANDCompletedEventHandler(object sender, Save_SN_TEST_BYHANDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_SN_TEST_BYHANDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_SN_TEST_BYHANDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getGoldenProdssnCompletedEventHandler(object sender, getGoldenProdssnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGoldenProdssnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGoldenProdssnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ATS_Check_EquipCompletedEventHandler(object sender, ATS_Check_EquipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ATS_Check_EquipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ATS_Check_EquipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ATS_Init_EquipCompletedEventHandler(object sender, ATS_Init_EquipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ATS_Init_EquipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ATS_Init_EquipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ReTestControl_QueryCompletedEventHandler(object sender, ReTestControl_QueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReTestControl_QueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReTestControl_QueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ReTestControl_InsertCompletedEventHandler(object sender, ReTestControl_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReTestControl_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReTestControl_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ReTestControl_DeleteCompletedEventHandler(object sender, ReTestControl_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReTestControl_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReTestControl_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void mAdo_SqlProCompletedEventHandler(object sender, mAdo_SqlProCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mAdo_SqlProCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mAdo_SqlProCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getGolden_SPN_CTRLCompletedEventHandler(object sender, getGolden_SPN_CTRLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGolden_SPN_CTRLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGolden_SPN_CTRLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getGolden_SPN_CTRL2CompletedEventHandler(object sender, getGolden_SPN_CTRL2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGolden_SPN_CTRL2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGolden_SPN_CTRL2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void set_Golden_SPN_CTRLCompletedEventHandler(object sender, set_Golden_SPN_CTRLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class set_Golden_SPN_CTRLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal set_Golden_SPN_CTRLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void del_Golden_SPN_CTRLCompletedEventHandler(object sender, del_Golden_SPN_CTRLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class del_Golden_SPN_CTRLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal del_Golden_SPN_CTRLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void copy_Golden_SPN_CTRLCompletedEventHandler(object sender, copy_Golden_SPN_CTRLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copy_Golden_SPN_CTRLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copy_Golden_SPN_CTRLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ASSP_V001CompletedEventHandler(object sender, ASSP_V001CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ASSP_V001CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ASSP_V001CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ATS_Register_V001CompletedEventHandler(object sender, ATS_Register_V001CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ATS_Register_V001CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ATS_Register_V001CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ASTP_Test_Initial_V001CompletedEventHandler(object sender, ASTP_Test_Initial_V001CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ASTP_Test_Initial_V001CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ASTP_Test_Initial_V001CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ATS_Query_CSNCompletedEventHandler(object sender, ATS_Query_CSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ATS_Query_CSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ATS_Query_CSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ATS_Query_All_CSNCompletedEventHandler(object sender, ATS_Query_All_CSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ATS_Query_All_CSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ATS_Query_All_CSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetPN_BySNCompletedEventHandler(object sender, GetPN_BySNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPN_BySNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPN_BySNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetWO_BySNCompletedEventHandler(object sender, GetWO_BySNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWO_BySNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWO_BySNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetNS_KeyCompletedEventHandler(object sender, GetNS_KeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNS_KeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNS_KeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Save_FloTVProvisionDataCompletedEventHandler(object sender, Save_FloTVProvisionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_FloTVProvisionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_FloTVProvisionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Query_FloTVProvisionDataCompletedEventHandler(object sender, Query_FloTVProvisionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Query_FloTVProvisionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Query_FloTVProvisionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Query_FloTVProvisionDataHistoryCompletedEventHandler(object sender, Query_FloTVProvisionDataHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Query_FloTVProvisionDataHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Query_FloTVProvisionDataHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_FloTV_ASN_data_TEMPCompletedEventHandler(object sender, get_FloTV_ASN_data_TEMPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_FloTV_ASN_data_TEMPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_FloTV_ASN_data_TEMPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_FloTV_ASN_dataCompletedEventHandler(object sender, get_FloTV_ASN_dataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_FloTV_ASN_dataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_FloTV_ASN_dataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_SkyRocket_ASN_dataCompletedEventHandler(object sender, get_SkyRocket_ASN_dataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_SkyRocket_ASN_dataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_SkyRocket_ASN_dataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_SkyRocket_ASN_data_tempCompletedEventHandler(object sender, get_SkyRocket_ASN_data_tempCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_SkyRocket_ASN_data_tempCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_SkyRocket_ASN_data_tempCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void del_FloTV_SN_CSNCompletedEventHandler(object sender, del_FloTV_SN_CSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class del_FloTV_SN_CSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal del_FloTV_SN_CSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GET_SFCS_APPCompletedEventHandler(object sender, GET_SFCS_APPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_SFCS_APPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_SFCS_APPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GET_SPN_STAGE_ChkTextFileCompletedEventHandler(object sender, GET_SPN_STAGE_ChkTextFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_SPN_STAGE_ChkTextFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_SPN_STAGE_ChkTextFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GET_SPN_STAGECompletedEventHandler(object sender, GET_SPN_STAGECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_SPN_STAGECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_SPN_STAGECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SET_SPN_STAGE_ChkTextFileCompletedEventHandler(object sender, SET_SPN_STAGE_ChkTextFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SET_SPN_STAGE_ChkTextFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SET_SPN_STAGE_ChkTextFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Get_ECNCompletedEventHandler(object sender, Get_ECNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ECNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_ECNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Get_TPICompletedEventHandler(object sender, Get_TPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_TPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_TPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Start_ProductionCompletedEventHandler(object sender, Start_ProductionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Start_ProductionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Start_ProductionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Get_RandomKeyCompletedEventHandler(object sender, Get_RandomKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_RandomKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_RandomKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Rs_RandomKey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Rs_ErrorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void insertSPIfileCompletedEventHandler(object sender, insertSPIfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertSPIfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertSPIfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void selectSPIfileCompletedEventHandler(object sender, selectSPIfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectSPIfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectSPIfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getSPIfileMbCompletedEventHandler(object sender, getSPIfileMbCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSPIfileMbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSPIfileMbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void insertQSNfileCompletedEventHandler(object sender, insertQSNfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertQSNfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertQSNfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void selectQSNfileCompletedEventHandler(object sender, selectQSNfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectQSNfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectQSNfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getQSNfileSnCompletedEventHandler(object sender, getQSNfileSnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQSNfileSnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQSNfileSnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getQSNByAnyPhaseSNCompletedEventHandler(object sender, getQSNByAnyPhaseSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQSNByAnyPhaseSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQSNByAnyPhaseSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getSN_TourCnt_By_IPCompletedEventHandler(object sender, getSN_TourCnt_By_IPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSN_TourCnt_By_IPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSN_TourCnt_By_IPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getPersonalizationInfoCompletedEventHandler(object sender, getPersonalizationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonalizationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonalizationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void deletePersonalizationInfoCompletedEventHandler(object sender, deletePersonalizationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deletePersonalizationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deletePersonalizationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getPersonalizationInfo_by_seqCompletedEventHandler(object sender, getPersonalizationInfo_by_seqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonalizationInfo_by_seqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonalizationInfo_by_seqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void updatePersonalizationInfoCompletedEventHandler(object sender, updatePersonalizationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePersonalizationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePersonalizationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void BatchUpdateCompletedEventHandler(object sender, BatchUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void setPersonalizationInfoCompletedEventHandler(object sender, setPersonalizationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setPersonalizationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setPersonalizationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getCNTablCompletedEventHandler(object sender, getCNTablCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCNTablCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCNTablCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string CN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getPNTabl_byCNCompletedEventHandler(object sender, getPNTabl_byCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPNTabl_byCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPNTabl_byCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string CN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getPNTablCompletedEventHandler(object sender, getPNTablCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPNTablCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPNTablCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getCodeValueCompletedEventHandler(object sender, getCodeValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCodeValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCodeValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getSmtByPSNCompletedEventHandler(object sender, getSmtByPSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSmtByPSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSmtByPSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void chkMacByMacNameCompletedEventHandler(object sender, chkMacByMacNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chkMacByMacNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chkMacByMacNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ATS_chkHoldCompletedEventHandler(object sender, ATS_chkHoldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ATS_chkHoldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ATS_chkHoldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ATS_chkRepairReturnCompletedEventHandler(object sender, ATS_chkRepairReturnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ATS_chkRepairReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ATS_chkRepairReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getSPC_FLEXFIELDCompletedEventHandler(object sender, getSPC_FLEXFIELDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSPC_FLEXFIELDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSPC_FLEXFIELDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ATS_chkNextStageCompletedEventHandler(object sender, ATS_chkNextStageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ATS_chkNextStageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ATS_chkNextStageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void saveFwToSfcsBySnCompletedEventHandler(object sender, saveFwToSfcsBySnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveFwToSfcsBySnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveFwToSfcsBySnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckSfcsFaStatusCompletedEventHandler(object sender, CheckSfcsFaStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSfcsFaStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSfcsFaStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckDcTestCompletedEventHandler(object sender, CheckDcTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDcTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDcTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getSpritCpnCompletedEventHandler(object sender, getSpritCpnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSpritCpnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSpritCpnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckOldNewPSNCompletedEventHandler(object sender, CheckOldNewPSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOldNewPSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOldNewPSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getWoSchedule_byIPCompletedEventHandler(object sender, getWoSchedule_byIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWoSchedule_byIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWoSchedule_byIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void check_InputStageCompletedEventHandler(object sender, check_InputStageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class check_InputStageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal check_InputStageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void chkSpnStation_IpCompletedEventHandler(object sender, chkSpnStation_IpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chkSpnStation_IpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chkSpnStation_IpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_SMTDataCompletedEventHandler(object sender, get_SMTDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_SMTDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_SMTDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_ProdDataCompletedEventHandler(object sender, get_ProdDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_ProdDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_ProdDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void chkMo_inputQtyCompletedEventHandler(object sender, chkMo_inputQtyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chkMo_inputQtyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chkMo_inputQtyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ASTP_Test_Initial_V002CompletedEventHandler(object sender, ASTP_Test_Initial_V002CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ASTP_Test_Initial_V002CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ASTP_Test_Initial_V002CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Delete_Golden_Sample1CompletedEventHandler(object sender, Delete_Golden_Sample1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_Golden_Sample1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_Golden_Sample1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getIP_prodCompletedEventHandler(object sender, getIP_prodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIP_prodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIP_prodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void del_IP_prodCompletedEventHandler(object sender, del_IP_prodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class del_IP_prodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal del_IP_prodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_sidpsnCompletedEventHandler(object sender, get_sidpsnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_sidpsnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_sidpsnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_SMTData_1CompletedEventHandler(object sender, get_SMTData_1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_SMTData_1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_SMTData_1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getSpcStatisticsCompletedEventHandler(object sender, getSpcStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSpcStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSpcStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void setSpcMoCpkLogCompletedEventHandler(object sender, setSpcMoCpkLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setSpcMoCpkLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setSpcMoCpkLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void check_InputMOCompletedEventHandler(object sender, check_InputMOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class check_InputMOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal check_InputMOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void chkrepairCompletedEventHandler(object sender, chkrepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chkrepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chkrepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getNewPsnByMoCompletedEventHandler(object sender, getNewPsnByMoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewPsnByMoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewPsnByMoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void chkSmtSnWithCustSnCompletedEventHandler(object sender, chkSmtSnWithCustSnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chkSmtSnWithCustSnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chkSmtSnWithCustSnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void get_SMTData_2CompletedEventHandler(object sender, get_SMTData_2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_SMTData_2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_SMTData_2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getSMTPN_byCsnCompletedEventHandler(object sender, getSMTPN_byCsnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSMTPN_byCsnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSMTPN_byCsnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void chkUIMCompletedEventHandler(object sender, chkUIMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chkUIMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chkUIMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getAllCsnCompletedEventHandler(object sender, getAllCsnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllCsnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllCsnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getSMTCompletedEventHandler(object sender, getSMTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSMTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSMTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getMo_ForSMCompletedEventHandler(object sender, getMo_ForSMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMo_ForSMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMo_ForSMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getAntennaCompletedEventHandler(object sender, getAntennaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAntennaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAntennaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getRSSI_SMCompletedEventHandler(object sender, getRSSI_SMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRSSI_SMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRSSI_SMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getNewPsnByMo_rwkCompletedEventHandler(object sender, getNewPsnByMo_rwkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewPsnByMo_rwkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewPsnByMo_rwkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ASTP_Test_Initial_V003CompletedEventHandler(object sender, ASTP_Test_Initial_V003CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ASTP_Test_Initial_V003CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ASTP_Test_Initial_V003CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getCSN_byCPNCompletedEventHandler(object sender, getCSN_byCPNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCSN_byCPNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCSN_byCPNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591